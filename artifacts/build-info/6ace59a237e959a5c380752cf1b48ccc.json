{
	"id": "6ace59a237e959a5c380752cf1b48ccc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"indentity_test_2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract XEAMToken is ERC20, Ownable, ReentrancyGuard {\n    uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18;\n    uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100; // 1%\n    uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000; // 0.05%\n\n    address public encouragementFund;\n    address public emergencyFund;\n    address public marketingWallet;\n    address public stakingWallet;\n\n    uint256 public constant BUY_TAX = 10;\n    uint256 public constant SELL_TAX = 12;\n    uint256 public constant SLIPPAGE = 13; // Between 13% and 17%\n\n    mapping(address => bool) public isExcludedFromFees;\n\n    event TaxDistributed(uint256 amount, string category);\n\n    constructor(\n        address _encouragementFund,\n        address _emergencyFund,\n        address _marketingWallet,\n        address _stakingWallet\n    ) ERC20(\"XEAM Token\", \"XEAM\") Ownable(msg.sender) { // âœ… FIXED\n        encouragementFund = _encouragementFund;\n        emergencyFund = _emergencyFund;\n        marketingWallet = _marketingWallet;\n        stakingWallet = _stakingWallet;\n\n        _mint(msg.sender, INITIAL_SUPPLY);\n        isExcludedFromFees[msg.sender] = true;\n    }\n\n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        require(\n            balanceOf(recipient) + amount <= MAX_WALLET,\n            \"Exceeds max wallet limit\"\n        );\n        require(amount <= MAX_TX, \"Exceeds max transaction limit\");\n\n        _transferWithTaxes(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function _transferWithTaxes(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        uint256 taxAmount = (amount * SELL_TAX) / 100;\n        uint256 sendAmount = amount - taxAmount;\n\n        super._transfer(sender, encouragementFund, (taxAmount * 4) / 12);\n        emit TaxDistributed((taxAmount * 4) / 12, \"Encouragement Fund\");\n\n        super._transfer(sender, emergencyFund, (taxAmount * 1) / 12);\n        emit TaxDistributed((taxAmount * 1) / 12, \"Emergency Fund\");\n\n        super._transfer(sender, marketingWallet, (taxAmount * 4) / 12);\n        emit TaxDistributed((taxAmount * 4) / 12, \"Marketing\");\n\n        super._transfer(sender, stakingWallet, (taxAmount * 3) / 12);\n        emit TaxDistributed((taxAmount * 3) / 12, \"Staking\");\n\n        super._transfer(sender, recipient, sendAmount);\n    }\n\n    function updateExcludedAccountStatus(address account, bool excluded)\n        external\n        onlyOwner\n    {\n        isExcludedFromFees[account] = excluded;\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"indentity_test_2.sol": {
				"XEAMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_encouragementFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_emergencyFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "TaxDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BUY_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SELL_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SLIPPAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encouragementFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "updateExcludedAccountStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"indentity_test_2.sol\":231:2822  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"indentity_test_2.sol\":920:1403  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"indentity_test_2.sol\":1108:1118  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5845414d20546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5845414d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":1163:1181  _encouragementFund */\n  dup4\n    /* \"indentity_test_2.sol\":1143:1160  encouragementFund */\n  0x07\n  0x00\n    /* \"indentity_test_2.sol\":1143:1181  encouragementFund = _encouragementFund */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":1207:1221  _emergencyFund */\n  dup3\n    /* \"indentity_test_2.sol\":1191:1204  emergencyFund */\n  0x08\n  0x00\n    /* \"indentity_test_2.sol\":1191:1221  emergencyFund = _emergencyFund */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":1249:1265  _marketingWallet */\n  dup2\n    /* \"indentity_test_2.sol\":1231:1246  marketingWallet */\n  0x09\n  0x00\n    /* \"indentity_test_2.sol\":1231:1265  marketingWallet = _marketingWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":1291:1305  _stakingWallet */\n  dup1\n    /* \"indentity_test_2.sol\":1275:1288  stakingWallet */\n  0x0a\n  0x00\n    /* \"indentity_test_2.sol\":1275:1305  stakingWallet = _stakingWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":1316:1349  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_20\n    /* \"indentity_test_2.sol\":1322:1332  msg.sender */\n  caller\n    /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n  0x01a784379d99db42000000\n    /* \"indentity_test_2.sol\":1316:1321  _mint */\n  shl(0x20, tag_21)\n    /* \"indentity_test_2.sol\":1316:1349  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"indentity_test_2.sol\":1392:1396  true */\n  0x01\n    /* \"indentity_test_2.sol\":1359:1377  isExcludedFromFees */\n  0x0b\n    /* \"indentity_test_2.sol\":1359:1389  isExcludedFromFees[msg.sender] */\n  0x00\n    /* \"indentity_test_2.sol\":1378:1388  msg.sender */\n  caller\n    /* \"indentity_test_2.sol\":1359:1389  isExcludedFromFees[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"indentity_test_2.sol\":1359:1396  isExcludedFromFees[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_2.sol\":920:1403  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"indentity_test_2.sol\":231:2822  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_77\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_79\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_80:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_82\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1665   */\ntag_3:\n    /* \"#utility.yul\":942:948   */\n  0x00\n    /* \"#utility.yul\":950:956   */\n  dup1\n    /* \"#utility.yul\":958:964   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  dup1\n    /* \"#utility.yul\":1015:1018   */\n  0x80\n    /* \"#utility.yul\":1003:1012   */\n  dup6\n    /* \"#utility.yul\":994:1001   */\n  dup8\n    /* \"#utility.yul\":990:1013   */\n  sub\n    /* \"#utility.yul\":986:1019   */\n  slt\n    /* \"#utility.yul\":983:1103   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1022:1101   */\n  tag_85\n  tag_42\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":983:1103   */\ntag_84:\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1167:1231   */\n  tag_86\n    /* \"#utility.yul\":1223:1230   */\n  dup8\n    /* \"#utility.yul\":1214:1220   */\n  dup3\n    /* \"#utility.yul\":1203:1212   */\n  dup9\n    /* \"#utility.yul\":1199:1221   */\n  add\n    /* \"#utility.yul\":1167:1231   */\n  tag_47\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1157:1231   */\n  swap5\n  pop\n    /* \"#utility.yul\":1113:1241   */\n  pop\n    /* \"#utility.yul\":1280:1282   */\n  0x20\n    /* \"#utility.yul\":1306:1370   */\n  tag_87\n    /* \"#utility.yul\":1362:1369   */\n  dup8\n    /* \"#utility.yul\":1353:1359   */\n  dup3\n    /* \"#utility.yul\":1342:1351   */\n  dup9\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1306:1370   */\n  tag_47\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1296:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1251:1380   */\n  pop\n    /* \"#utility.yul\":1419:1421   */\n  0x40\n    /* \"#utility.yul\":1445:1509   */\n  tag_88\n    /* \"#utility.yul\":1501:1508   */\n  dup8\n    /* \"#utility.yul\":1492:1498   */\n  dup3\n    /* \"#utility.yul\":1481:1490   */\n  dup9\n    /* \"#utility.yul\":1477:1499   */\n  add\n    /* \"#utility.yul\":1445:1509   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1435:1509   */\n  swap3\n  pop\n    /* \"#utility.yul\":1390:1519   */\n  pop\n    /* \"#utility.yul\":1558:1560   */\n  0x60\n    /* \"#utility.yul\":1584:1648   */\n  tag_89\n    /* \"#utility.yul\":1640:1647   */\n  dup8\n    /* \"#utility.yul\":1631:1637   */\n  dup3\n    /* \"#utility.yul\":1620:1629   */\n  dup9\n    /* \"#utility.yul\":1616:1638   */\n  add\n    /* \"#utility.yul\":1584:1648   */\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1574:1648   */\n  swap2\n  pop\n    /* \"#utility.yul\":1529:1658   */\n  pop\n    /* \"#utility.yul\":845:1665   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1671:1770   */\ntag_48:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1757:1762   */\n  dup2\n    /* \"#utility.yul\":1751:1763   */\n  mload\n    /* \"#utility.yul\":1741:1763   */\n  swap1\n  pop\n    /* \"#utility.yul\":1671:1770   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1776:1956   */\ntag_49:\n    /* \"#utility.yul\":1824:1901   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1821:1822   */\n  0x00\n    /* \"#utility.yul\":1814:1902   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x41\n    /* \"#utility.yul\":1918:1919   */\n  0x04\n    /* \"#utility.yul\":1911:1926   */\n  mstore\n    /* \"#utility.yul\":1945:1949   */\n  0x24\n    /* \"#utility.yul\":1942:1943   */\n  0x00\n    /* \"#utility.yul\":1935:1950   */\n  revert\n    /* \"#utility.yul\":1962:2142   */\ntag_50:\n    /* \"#utility.yul\":2010:2087   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2007:2008   */\n  0x00\n    /* \"#utility.yul\":2000:2088   */\n  mstore\n    /* \"#utility.yul\":2107:2111   */\n  0x22\n    /* \"#utility.yul\":2104:2105   */\n  0x04\n    /* \"#utility.yul\":2097:2112   */\n  mstore\n    /* \"#utility.yul\":2131:2135   */\n  0x24\n    /* \"#utility.yul\":2128:2129   */\n  0x00\n    /* \"#utility.yul\":2121:2136   */\n  revert\n    /* \"#utility.yul\":2148:2468   */\ntag_51:\n    /* \"#utility.yul\":2192:2198   */\n  0x00\n    /* \"#utility.yul\":2229:2230   */\n  0x02\n    /* \"#utility.yul\":2223:2227   */\n  dup3\n    /* \"#utility.yul\":2219:2231   */\n  div\n    /* \"#utility.yul\":2209:2231   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2277   */\n  0x01\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  and\n    /* \"#utility.yul\":2297:2315   */\n  dup1\n    /* \"#utility.yul\":2287:2368   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2353:2357   */\n  0x7f\n    /* \"#utility.yul\":2345:2351   */\n  dup3\n    /* \"#utility.yul\":2341:2358   */\n  and\n    /* \"#utility.yul\":2331:2358   */\n  swap2\n  pop\n    /* \"#utility.yul\":2287:2368   */\ntag_94:\n    /* \"#utility.yul\":2415:2417   */\n  0x20\n    /* \"#utility.yul\":2407:2413   */\n  dup3\n    /* \"#utility.yul\":2404:2418   */\n  lt\n    /* \"#utility.yul\":2384:2402   */\n  dup2\n    /* \"#utility.yul\":2381:2419   */\n  sub\n    /* \"#utility.yul\":2378:2462   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2434:2452   */\n  tag_96\n  tag_50\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2378:2462   */\ntag_95:\n    /* \"#utility.yul\":2199:2468   */\n  pop\n    /* \"#utility.yul\":2148:2468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2474:2615   */\ntag_52:\n    /* \"#utility.yul\":2523:2527   */\n  0x00\n    /* \"#utility.yul\":2546:2549   */\n  dup2\n    /* \"#utility.yul\":2538:2549   */\n  swap1\n  pop\n    /* \"#utility.yul\":2569:2572   */\n  dup2\n    /* \"#utility.yul\":2566:2567   */\n  0x00\n    /* \"#utility.yul\":2559:2573   */\n  mstore\n    /* \"#utility.yul\":2603:2607   */\n  0x20\n    /* \"#utility.yul\":2600:2601   */\n  0x00\n    /* \"#utility.yul\":2590:2608   */\n  keccak256\n    /* \"#utility.yul\":2582:2608   */\n  swap1\n  pop\n    /* \"#utility.yul\":2474:2615   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2621:2714   */\ntag_53:\n    /* \"#utility.yul\":2658:2664   */\n  0x00\n    /* \"#utility.yul\":2705:2707   */\n  0x20\n    /* \"#utility.yul\":2700:2702   */\n  0x1f\n    /* \"#utility.yul\":2693:2698   */\n  dup4\n    /* \"#utility.yul\":2689:2703   */\n  add\n    /* \"#utility.yul\":2685:2708   */\n  div\n    /* \"#utility.yul\":2675:2708   */\n  swap1\n  pop\n    /* \"#utility.yul\":2621:2714   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:2827   */\ntag_54:\n    /* \"#utility.yul\":2764:2772   */\n  0x00\n    /* \"#utility.yul\":2814:2819   */\n  dup3\n    /* \"#utility.yul\":2808:2812   */\n  dup3\n    /* \"#utility.yul\":2804:2820   */\n  shl\n    /* \"#utility.yul\":2783:2820   */\n  swap1\n  pop\n    /* \"#utility.yul\":2720:2827   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2833:3226   */\ntag_55:\n    /* \"#utility.yul\":2902:2908   */\n  0x00\n    /* \"#utility.yul\":2952:2953   */\n  0x08\n    /* \"#utility.yul\":2940:2950   */\n  dup4\n    /* \"#utility.yul\":2936:2954   */\n  mul\n    /* \"#utility.yul\":2975:3072   */\n  tag_101\n    /* \"#utility.yul\":3005:3071   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2994:3003   */\n  dup3\n    /* \"#utility.yul\":2975:3072   */\n  tag_54\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3093:3132   */\n  tag_102\n    /* \"#utility.yul\":3123:3131   */\n  dup7\n    /* \"#utility.yul\":3112:3121   */\n  dup4\n    /* \"#utility.yul\":3093:3132   */\n  tag_54\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3081:3132   */\n  swap6\n  pop\n    /* \"#utility.yul\":3165:3169   */\n  dup1\n    /* \"#utility.yul\":3161:3170   */\n  not\n    /* \"#utility.yul\":3154:3159   */\n  dup5\n    /* \"#utility.yul\":3150:3171   */\n  and\n    /* \"#utility.yul\":3141:3171   */\n  swap4\n  pop\n    /* \"#utility.yul\":3214:3218   */\n  dup1\n    /* \"#utility.yul\":3204:3212   */\n  dup7\n    /* \"#utility.yul\":3200:3219   */\n  and\n    /* \"#utility.yul\":3193:3198   */\n  dup5\n    /* \"#utility.yul\":3190:3220   */\n  or\n    /* \"#utility.yul\":3180:3220   */\n  swap3\n  pop\n    /* \"#utility.yul\":2909:3226   */\n  pop\n  pop\n    /* \"#utility.yul\":2833:3226   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3309   */\ntag_56:\n    /* \"#utility.yul\":3269:3276   */\n  0x00\n    /* \"#utility.yul\":3298:3303   */\n  dup2\n    /* \"#utility.yul\":3287:3303   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3309   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3315:3375   */\ntag_57:\n    /* \"#utility.yul\":3343:3346   */\n  0x00\n    /* \"#utility.yul\":3364:3369   */\n  dup2\n    /* \"#utility.yul\":3357:3369   */\n  swap1\n  pop\n    /* \"#utility.yul\":3315:3375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3381:3523   */\ntag_58:\n    /* \"#utility.yul\":3431:3440   */\n  0x00\n    /* \"#utility.yul\":3464:3517   */\n  tag_106\n    /* \"#utility.yul\":3482:3516   */\n  tag_107\n    /* \"#utility.yul\":3491:3515   */\n  tag_108\n    /* \"#utility.yul\":3509:3514   */\n  dup5\n    /* \"#utility.yul\":3491:3515   */\n  tag_56\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3482:3516   */\n  tag_57\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3464:3517   */\n  tag_56\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3451:3517   */\n  swap1\n  pop\n    /* \"#utility.yul\":3381:3523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3529:3604   */\ntag_59:\n    /* \"#utility.yul\":3572:3575   */\n  0x00\n    /* \"#utility.yul\":3593:3598   */\n  dup2\n    /* \"#utility.yul\":3586:3598   */\n  swap1\n  pop\n    /* \"#utility.yul\":3529:3604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3610:3879   */\ntag_60:\n    /* \"#utility.yul\":3720:3759   */\n  tag_111\n    /* \"#utility.yul\":3751:3758   */\n  dup4\n    /* \"#utility.yul\":3720:3759   */\n  tag_58\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3781:3872   */\n  tag_112\n    /* \"#utility.yul\":3830:3871   */\n  tag_113\n    /* \"#utility.yul\":3854:3870   */\n  dup3\n    /* \"#utility.yul\":3830:3871   */\n  tag_59\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3822:3828   */\n  dup5\n    /* \"#utility.yul\":3815:3819   */\n  dup5\n    /* \"#utility.yul\":3809:3820   */\n  sload\n    /* \"#utility.yul\":3781:3872   */\n  tag_55\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3775:3779   */\n  dup3\n    /* \"#utility.yul\":3768:3873   */\n  sstore\n    /* \"#utility.yul\":3686:3879   */\n  pop\n    /* \"#utility.yul\":3610:3879   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3885:3958   */\ntag_61:\n    /* \"#utility.yul\":3930:3933   */\n  0x00\n    /* \"#utility.yul\":3885:3958   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3964:4153   */\ntag_62:\n    /* \"#utility.yul\":4041:4073   */\n  tag_116\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4082:4147   */\n  tag_117\n    /* \"#utility.yul\":4140:4146   */\n  dup2\n    /* \"#utility.yul\":4132:4138   */\n  dup5\n    /* \"#utility.yul\":4126:4130   */\n  dup5\n    /* \"#utility.yul\":4082:4147   */\n  tag_60\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4017:4153   */\n  pop\n    /* \"#utility.yul\":3964:4153   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4159:4345   */\ntag_63:\n    /* \"#utility.yul\":4219:4339   */\ntag_119:\n    /* \"#utility.yul\":4236:4239   */\n  dup2\n    /* \"#utility.yul\":4229:4234   */\n  dup2\n    /* \"#utility.yul\":4226:4240   */\n  lt\n    /* \"#utility.yul\":4219:4339   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4290:4329   */\n  tag_122\n    /* \"#utility.yul\":4327:4328   */\n  0x00\n    /* \"#utility.yul\":4320:4325   */\n  dup3\n    /* \"#utility.yul\":4290:4329   */\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4263:4264   */\n  0x01\n    /* \"#utility.yul\":4256:4261   */\n  dup2\n    /* \"#utility.yul\":4252:4265   */\n  add\n    /* \"#utility.yul\":4243:4265   */\n  swap1\n  pop\n    /* \"#utility.yul\":4219:4339   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4159:4345   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4351:4894   */\ntag_64:\n    /* \"#utility.yul\":4452:4454   */\n  0x1f\n    /* \"#utility.yul\":4447:4450   */\n  dup3\n    /* \"#utility.yul\":4444:4455   */\n  gt\n    /* \"#utility.yul\":4441:4887   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4486:4524   */\n  tag_125\n    /* \"#utility.yul\":4518:4523   */\n  dup2\n    /* \"#utility.yul\":4486:4524   */\n  tag_52\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4570:4599   */\n  tag_126\n    /* \"#utility.yul\":4588:4598   */\n  dup5\n    /* \"#utility.yul\":4570:4599   */\n  tag_53\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4560:4568   */\n  dup2\n    /* \"#utility.yul\":4556:4600   */\n  add\n    /* \"#utility.yul\":4753:4755   */\n  0x20\n    /* \"#utility.yul\":4741:4751   */\n  dup6\n    /* \"#utility.yul\":4738:4756   */\n  lt\n    /* \"#utility.yul\":4735:4784   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4774:4782   */\n  dup2\n    /* \"#utility.yul\":4759:4782   */\n  swap1\n  pop\n    /* \"#utility.yul\":4735:4784   */\ntag_127:\n    /* \"#utility.yul\":4797:4877   */\n  tag_128\n    /* \"#utility.yul\":4853:4875   */\n  tag_129\n    /* \"#utility.yul\":4871:4874   */\n  dup6\n    /* \"#utility.yul\":4853:4875   */\n  tag_53\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4843:4851   */\n  dup4\n    /* \"#utility.yul\":4839:4876   */\n  add\n    /* \"#utility.yul\":4826:4837   */\n  dup3\n    /* \"#utility.yul\":4797:4877   */\n  tag_63\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4456:4887   */\n  pop\n  pop\n    /* \"#utility.yul\":4441:4887   */\ntag_124:\n    /* \"#utility.yul\":4351:4894   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4900:5017   */\ntag_65:\n    /* \"#utility.yul\":4954:4962   */\n  0x00\n    /* \"#utility.yul\":5004:5009   */\n  dup3\n    /* \"#utility.yul\":4998:5002   */\n  dup3\n    /* \"#utility.yul\":4994:5010   */\n  shr\n    /* \"#utility.yul\":4973:5010   */\n  swap1\n  pop\n    /* \"#utility.yul\":4900:5017   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5023:5192   */\ntag_66:\n    /* \"#utility.yul\":5067:5073   */\n  0x00\n    /* \"#utility.yul\":5100:5151   */\n  tag_132\n    /* \"#utility.yul\":5148:5149   */\n  0x00\n    /* \"#utility.yul\":5144:5150   */\n  not\n    /* \"#utility.yul\":5136:5141   */\n  dup5\n    /* \"#utility.yul\":5133:5134   */\n  0x08\n    /* \"#utility.yul\":5129:5142   */\n  mul\n    /* \"#utility.yul\":5100:5151   */\n  tag_65\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5096:5152   */\n  not\n    /* \"#utility.yul\":5181:5185   */\n  dup1\n    /* \"#utility.yul\":5175:5179   */\n  dup4\n    /* \"#utility.yul\":5171:5186   */\n  and\n    /* \"#utility.yul\":5161:5186   */\n  swap2\n  pop\n    /* \"#utility.yul\":5074:5192   */\n  pop\n    /* \"#utility.yul\":5023:5192   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5197:5492   */\ntag_67:\n    /* \"#utility.yul\":5273:5277   */\n  0x00\n    /* \"#utility.yul\":5419:5448   */\n  tag_134\n    /* \"#utility.yul\":5444:5447   */\n  dup4\n    /* \"#utility.yul\":5438:5442   */\n  dup4\n    /* \"#utility.yul\":5419:5448   */\n  tag_66\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5411:5448   */\n  swap2\n  pop\n    /* \"#utility.yul\":5481:5484   */\n  dup3\n    /* \"#utility.yul\":5478:5479   */\n  0x02\n    /* \"#utility.yul\":5474:5485   */\n  mul\n    /* \"#utility.yul\":5468:5472   */\n  dup3\n    /* \"#utility.yul\":5465:5486   */\n  or\n    /* \"#utility.yul\":5457:5486   */\n  swap1\n  pop\n    /* \"#utility.yul\":5197:5492   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5497:6892   */\ntag_10:\n    /* \"#utility.yul\":5614:5651   */\n  tag_136\n    /* \"#utility.yul\":5647:5650   */\n  dup3\n    /* \"#utility.yul\":5614:5651   */\n  tag_48\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5716:5734   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5708:5714   */\n  dup2\n    /* \"#utility.yul\":5705:5735   */\n  gt\n    /* \"#utility.yul\":5702:5758   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":5738:5756   */\n  tag_138\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5702:5758   */\ntag_137:\n    /* \"#utility.yul\":5782:5820   */\n  tag_139\n    /* \"#utility.yul\":5814:5818   */\n  dup3\n    /* \"#utility.yul\":5808:5819   */\n  sload\n    /* \"#utility.yul\":5782:5820   */\n  tag_51\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5867:5934   */\n  tag_140\n    /* \"#utility.yul\":5927:5933   */\n  dup3\n    /* \"#utility.yul\":5919:5925   */\n  dup3\n    /* \"#utility.yul\":5913:5917   */\n  dup6\n    /* \"#utility.yul\":5867:5934   */\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5961:5962   */\n  0x00\n    /* \"#utility.yul\":5985:5989   */\n  0x20\n    /* \"#utility.yul\":5972:5989   */\n  swap1\n  pop\n    /* \"#utility.yul\":6017:6019   */\n  0x1f\n    /* \"#utility.yul\":6009:6015   */\n  dup4\n    /* \"#utility.yul\":6006:6020   */\n  gt\n    /* \"#utility.yul\":6034:6035   */\n  0x01\n    /* \"#utility.yul\":6029:6647   */\n  dup2\n  eq\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6691:6692   */\n  0x00\n    /* \"#utility.yul\":6708:6714   */\n  dup5\n    /* \"#utility.yul\":6705:6782   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6757:6766   */\n  dup3\n    /* \"#utility.yul\":6752:6755   */\n  dup8\n    /* \"#utility.yul\":6748:6767   */\n  add\n    /* \"#utility.yul\":6742:6768   */\n  mload\n    /* \"#utility.yul\":6733:6768   */\n  swap1\n  pop\n    /* \"#utility.yul\":6705:6782   */\ntag_143:\n    /* \"#utility.yul\":6808:6875   */\n  tag_144\n    /* \"#utility.yul\":6868:6874   */\n  dup6\n    /* \"#utility.yul\":6861:6866   */\n  dup3\n    /* \"#utility.yul\":6808:6875   */\n  tag_67\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6802:6806   */\n  dup7\n    /* \"#utility.yul\":6795:6876   */\n  sstore\n    /* \"#utility.yul\":6664:6886   */\n  pop\n    /* \"#utility.yul\":5999:6886   */\n  jump(tag_141)\n    /* \"#utility.yul\":6029:6647   */\ntag_142:\n    /* \"#utility.yul\":6081:6085   */\n  0x1f\n    /* \"#utility.yul\":6077:6086   */\n  not\n    /* \"#utility.yul\":6069:6075   */\n  dup5\n    /* \"#utility.yul\":6065:6087   */\n  and\n    /* \"#utility.yul\":6115:6152   */\n  tag_145\n    /* \"#utility.yul\":6147:6151   */\n  dup7\n    /* \"#utility.yul\":6115:6152   */\n  tag_52\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6174:6175   */\n  0x00\n    /* \"#utility.yul\":6188:6396   */\ntag_146:\n    /* \"#utility.yul\":6202:6209   */\n  dup3\n    /* \"#utility.yul\":6199:6200   */\n  dup2\n    /* \"#utility.yul\":6196:6210   */\n  lt\n    /* \"#utility.yul\":6188:6396   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6281:6290   */\n  dup5\n    /* \"#utility.yul\":6276:6279   */\n  dup10\n    /* \"#utility.yul\":6272:6291   */\n  add\n    /* \"#utility.yul\":6266:6292   */\n  mload\n    /* \"#utility.yul\":6258:6264   */\n  dup3\n    /* \"#utility.yul\":6251:6293   */\n  sstore\n    /* \"#utility.yul\":6332:6333   */\n  0x01\n    /* \"#utility.yul\":6324:6330   */\n  dup3\n    /* \"#utility.yul\":6320:6334   */\n  add\n    /* \"#utility.yul\":6310:6334   */\n  swap2\n  pop\n    /* \"#utility.yul\":6379:6381   */\n  0x20\n    /* \"#utility.yul\":6368:6377   */\n  dup6\n    /* \"#utility.yul\":6364:6382   */\n  add\n    /* \"#utility.yul\":6351:6382   */\n  swap5\n  pop\n    /* \"#utility.yul\":6225:6229   */\n  0x20\n    /* \"#utility.yul\":6222:6223   */\n  dup2\n    /* \"#utility.yul\":6218:6230   */\n  add\n    /* \"#utility.yul\":6213:6230   */\n  swap1\n  pop\n    /* \"#utility.yul\":6188:6396   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6424:6430   */\n  dup7\n    /* \"#utility.yul\":6415:6422   */\n  dup4\n    /* \"#utility.yul\":6412:6431   */\n  lt\n    /* \"#utility.yul\":6409:6588   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6482:6491   */\n  dup5\n    /* \"#utility.yul\":6477:6480   */\n  dup10\n    /* \"#utility.yul\":6473:6492   */\n  add\n    /* \"#utility.yul\":6467:6493   */\n  mload\n    /* \"#utility.yul\":6525:6573   */\n  tag_150\n    /* \"#utility.yul\":6567:6571   */\n  0x1f\n    /* \"#utility.yul\":6559:6565   */\n  dup10\n    /* \"#utility.yul\":6555:6572   */\n  and\n    /* \"#utility.yul\":6544:6553   */\n  dup3\n    /* \"#utility.yul\":6525:6573   */\n  tag_66\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6517:6523   */\n  dup4\n    /* \"#utility.yul\":6510:6574   */\n  sstore\n    /* \"#utility.yul\":6432:6588   */\n  pop\n    /* \"#utility.yul\":6409:6588   */\ntag_149:\n    /* \"#utility.yul\":6634:6635   */\n  0x01\n    /* \"#utility.yul\":6630:6631   */\n  0x02\n    /* \"#utility.yul\":6622:6628   */\n  dup9\n    /* \"#utility.yul\":6618:6632   */\n  mul\n    /* \"#utility.yul\":6614:6636   */\n  add\n    /* \"#utility.yul\":6608:6612   */\n  dup9\n    /* \"#utility.yul\":6601:6637   */\n  sstore\n    /* \"#utility.yul\":6036:6647   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5999:6886   */\ntag_141:\n  pop\n    /* \"#utility.yul\":5589:6892   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5497:6892   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6898:7016   */\ntag_68:\n    /* \"#utility.yul\":6985:7009   */\n  tag_152\n    /* \"#utility.yul\":7003:7008   */\n  dup2\n    /* \"#utility.yul\":6985:7009   */\n  tag_45\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6980:6983   */\n  dup3\n    /* \"#utility.yul\":6973:7010   */\n  mstore\n    /* \"#utility.yul\":6898:7016   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7022:7244   */\ntag_15:\n    /* \"#utility.yul\":7115:7119   */\n  0x00\n    /* \"#utility.yul\":7153:7155   */\n  0x20\n    /* \"#utility.yul\":7142:7151   */\n  dup3\n    /* \"#utility.yul\":7138:7156   */\n  add\n    /* \"#utility.yul\":7130:7156   */\n  swap1\n  pop\n    /* \"#utility.yul\":7166:7237   */\n  tag_154\n    /* \"#utility.yul\":7234:7235   */\n  0x00\n    /* \"#utility.yul\":7223:7232   */\n  dup4\n    /* \"#utility.yul\":7219:7236   */\n  add\n    /* \"#utility.yul\":7210:7216   */\n  dup5\n    /* \"#utility.yul\":7166:7237   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7022:7244   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7250:7430   */\ntag_69:\n    /* \"#utility.yul\":7298:7375   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7295:7296   */\n  0x00\n    /* \"#utility.yul\":7288:7376   */\n  mstore\n    /* \"#utility.yul\":7395:7399   */\n  0x11\n    /* \"#utility.yul\":7392:7393   */\n  0x04\n    /* \"#utility.yul\":7385:7400   */\n  mstore\n    /* \"#utility.yul\":7419:7423   */\n  0x24\n    /* \"#utility.yul\":7416:7417   */\n  0x00\n    /* \"#utility.yul\":7409:7424   */\n  revert\n    /* \"#utility.yul\":7436:7627   */\ntag_32:\n    /* \"#utility.yul\":7476:7479   */\n  0x00\n    /* \"#utility.yul\":7495:7515   */\n  tag_157\n    /* \"#utility.yul\":7513:7514   */\n  dup3\n    /* \"#utility.yul\":7495:7515   */\n  tag_56\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7490:7515   */\n  swap2\n  pop\n    /* \"#utility.yul\":7529:7549   */\n  tag_158\n    /* \"#utility.yul\":7547:7548   */\n  dup4\n    /* \"#utility.yul\":7529:7549   */\n  tag_56\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7524:7549   */\n  swap3\n  pop\n    /* \"#utility.yul\":7572:7573   */\n  dup3\n    /* \"#utility.yul\":7569:7570   */\n  dup3\n    /* \"#utility.yul\":7565:7574   */\n  add\n    /* \"#utility.yul\":7558:7574   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup1\n    /* \"#utility.yul\":7590:7591   */\n  dup3\n    /* \"#utility.yul\":7587:7597   */\n  gt\n    /* \"#utility.yul\":7584:7620   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7600:7618   */\n  tag_160\n  tag_69\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7584:7620   */\ntag_159:\n    /* \"#utility.yul\":7436:7627   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7633:7751   */\ntag_70:\n    /* \"#utility.yul\":7720:7744   */\n  tag_162\n    /* \"#utility.yul\":7738:7743   */\n  dup2\n    /* \"#utility.yul\":7720:7744   */\n  tag_56\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7715:7718   */\n  dup3\n    /* \"#utility.yul\":7708:7745   */\n  mstore\n    /* \"#utility.yul\":7633:7751   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7757:8199   */\ntag_36:\n    /* \"#utility.yul\":7906:7910   */\n  0x00\n    /* \"#utility.yul\":7944:7946   */\n  0x60\n    /* \"#utility.yul\":7933:7942   */\n  dup3\n    /* \"#utility.yul\":7929:7947   */\n  add\n    /* \"#utility.yul\":7921:7947   */\n  swap1\n  pop\n    /* \"#utility.yul\":7957:8028   */\n  tag_164\n    /* \"#utility.yul\":8025:8026   */\n  0x00\n    /* \"#utility.yul\":8014:8023   */\n  dup4\n    /* \"#utility.yul\":8010:8027   */\n  add\n    /* \"#utility.yul\":8001:8007   */\n  dup7\n    /* \"#utility.yul\":7957:8028   */\n  tag_68\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8038:8110   */\n  tag_165\n    /* \"#utility.yul\":8106:8108   */\n  0x20\n    /* \"#utility.yul\":8095:8104   */\n  dup4\n    /* \"#utility.yul\":8091:8109   */\n  add\n    /* \"#utility.yul\":8082:8088   */\n  dup6\n    /* \"#utility.yul\":8038:8110   */\n  tag_70\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8120:8192   */\n  tag_166\n    /* \"#utility.yul\":8188:8190   */\n  0x40\n    /* \"#utility.yul\":8177:8186   */\n  dup4\n    /* \"#utility.yul\":8173:8191   */\n  add\n    /* \"#utility.yul\":8164:8170   */\n  dup5\n    /* \"#utility.yul\":8120:8192   */\n  tag_70\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7757:8199   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8205:8427   */\ntag_40:\n    /* \"#utility.yul\":8298:8302   */\n  0x00\n    /* \"#utility.yul\":8336:8338   */\n  0x20\n    /* \"#utility.yul\":8325:8334   */\n  dup3\n    /* \"#utility.yul\":8321:8339   */\n  add\n    /* \"#utility.yul\":8313:8339   */\n  swap1\n  pop\n    /* \"#utility.yul\":8349:8420   */\n  tag_168\n    /* \"#utility.yul\":8417:8418   */\n  0x00\n    /* \"#utility.yul\":8406:8415   */\n  dup4\n    /* \"#utility.yul\":8402:8419   */\n  add\n    /* \"#utility.yul\":8393:8399   */\n  dup5\n    /* \"#utility.yul\":8349:8420   */\n  tag_70\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8205:8427   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"indentity_test_2.sol\":231:2822  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"indentity_test_2.sol\":231:2822  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcc859378\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdf7787a4\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf3b2db3f\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x753cafc3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36b4134a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4fbee193\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x52a6a9ec\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x54ad8aee\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x02af37bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06ee6ad8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"indentity_test_2.sol\":651:687  uint256 public constant BUY_TAX = 10 */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":616:644  address public stakingWallet */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":291:350  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":736:773  uint256 public constant SLIPPAGE = 13 */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":803:853  mapping(address => bool) public isExcludedFromFees */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":508:540  address public encouragementFund */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":693:730  uint256 public constant SELL_TAX = 12 */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"indentity_test_2.sol\":2657:2820  function updateExcludedAccountStatus(address account, bool excluded)... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"indentity_test_2.sol\":580:610  address public marketingWallet */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":1409:1801  function transfer(address recipient, uint256 amount)... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":546:574  address public emergencyFund */\n    tag_22:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":356:419  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_24:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"indentity_test_2.sol\":431:492  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_26:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_2.sol\":651:687  uint256 public constant BUY_TAX = 10 */\n    tag_31:\n        /* \"indentity_test_2.sol\":685:687  10 */\n      0x0a\n        /* \"indentity_test_2.sol\":651:687  uint256 public constant BUY_TAX = 10 */\n      dup2\n      jump\t// out\n        /* \"indentity_test_2.sol\":616:644  address public stakingWallet */\n    tag_35:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":291:350  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n    tag_57:\n        /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_2.sol\":291:350  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"indentity_test_2.sol\":736:773  uint256 public constant SLIPPAGE = 13 */\n    tag_64:\n        /* \"indentity_test_2.sol\":771:773  13 */\n      0x0d\n        /* \"indentity_test_2.sol\":736:773  uint256 public constant SLIPPAGE = 13 */\n      dup2\n      jump\t// out\n        /* \"indentity_test_2.sol\":803:853  mapping(address => bool) public isExcludedFromFees */\n    tag_69:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"indentity_test_2.sol\":508:540  address public encouragementFund */\n    tag_72:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"indentity_test_2.sol\":693:730  uint256 public constant SELL_TAX = 12 */\n    tag_75:\n        /* \"indentity_test_2.sol\":728:730  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":693:730  uint256 public constant SELL_TAX = 12 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"indentity_test_2.sol\":2657:2820  function updateExcludedAccountStatus(address account, bool excluded)... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"indentity_test_2.sol\":2805:2813  excluded */\n      dup1\n        /* \"indentity_test_2.sol\":2775:2793  isExcludedFromFees */\n      0x0b\n        /* \"indentity_test_2.sol\":2775:2802  isExcludedFromFees[account] */\n      0x00\n        /* \"indentity_test_2.sol\":2794:2801  account */\n      dup5\n        /* \"indentity_test_2.sol\":2775:2802  isExcludedFromFees[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"indentity_test_2.sol\":2775:2813  isExcludedFromFees[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"indentity_test_2.sol\":2657:2820  function updateExcludedAccountStatus(address account, bool excluded)... */\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":580:610  address public marketingWallet */\n    tag_88:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_119\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_119\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"indentity_test_2.sol\":1409:1801  function transfer(address recipient, uint256 amount)... */\n    tag_98:\n        /* \"indentity_test_2.sol\":1511:1515  bool */\n      0x00\n        /* \"indentity_test_2.sol\":416:419  100 */\n      0x64\n        /* \"indentity_test_2.sol\":411:412  1 */\n      0x01\n        /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_2.sol\":394:412  INITIAL_SUPPLY * 1 */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"indentity_test_2.sol\":393:419  (INITIAL_SUPPLY * 1) / 100 */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"indentity_test_2.sol\":1575:1581  amount */\n      dup3\n        /* \"indentity_test_2.sol\":1552:1572  balanceOf(recipient) */\n      tag_159\n        /* \"indentity_test_2.sol\":1562:1571  recipient */\n      dup6\n        /* \"indentity_test_2.sol\":1552:1561  balanceOf */\n      tag_79\n        /* \"indentity_test_2.sol\":1552:1572  balanceOf(recipient) */\n      jump\t// in\n    tag_159:\n        /* \"indentity_test_2.sol\":1552:1581  balanceOf(recipient) + amount */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"indentity_test_2.sol\":1552:1595  balanceOf(recipient) + amount <= MAX_WALLET */\n      gt\n      iszero\n        /* \"indentity_test_2.sol\":1531:1645  require(... */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"indentity_test_2.sol\":487:492  10000 */\n      0x2710\n        /* \"indentity_test_2.sol\":482:483  5 */\n      0x05\n        /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_2.sol\":465:483  INITIAL_SUPPLY * 5 */\n      tag_165\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_165:\n        /* \"indentity_test_2.sol\":464:492  (INITIAL_SUPPLY * 5) / 10000 */\n      tag_166\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_166:\n        /* \"indentity_test_2.sol\":1663:1669  amount */\n      dup3\n        /* \"indentity_test_2.sol\":1663:1679  amount <= MAX_TX */\n      gt\n      iszero\n        /* \"indentity_test_2.sol\":1655:1713  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"indentity_test_2.sol\":1724:1773  _transferWithTaxes(msg.sender, recipient, amount) */\n      tag_170\n        /* \"indentity_test_2.sol\":1743:1753  msg.sender */\n      caller\n        /* \"indentity_test_2.sol\":1755:1764  recipient */\n      dup5\n        /* \"indentity_test_2.sol\":1766:1772  amount */\n      dup5\n        /* \"indentity_test_2.sol\":1724:1742  _transferWithTaxes */\n      tag_171\n        /* \"indentity_test_2.sol\":1724:1773  _transferWithTaxes(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_170:\n        /* \"indentity_test_2.sol\":1790:1794  true */\n      0x01\n        /* \"indentity_test_2.sol\":1783:1794  return true */\n      swap1\n      pop\n        /* \"indentity_test_2.sol\":1409:1801  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":546:574  address public emergencyFund */\n    tag_101:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":356:419  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_109:\n        /* \"indentity_test_2.sol\":416:419  100 */\n      0x64\n        /* \"indentity_test_2.sol\":411:412  1 */\n      0x01\n        /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_2.sol\":394:412  INITIAL_SUPPLY * 1 */\n      tag_173\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_173:\n        /* \"indentity_test_2.sol\":393:419  (INITIAL_SUPPLY * 1) / 100 */\n      tag_174\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_174:\n        /* \"indentity_test_2.sol\":356:419  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":431:492  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_115:\n        /* \"indentity_test_2.sol\":487:492  10000 */\n      0x2710\n        /* \"indentity_test_2.sol\":482:483  5 */\n      0x05\n        /* \"indentity_test_2.sol\":332:350  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_2.sol\":465:483  INITIAL_SUPPLY * 5 */\n      tag_181\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_181:\n        /* \"indentity_test_2.sol\":464:492  (INITIAL_SUPPLY * 5) / 10000 */\n      tag_182\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_182:\n        /* \"indentity_test_2.sol\":431:492  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"indentity_test_2.sol\":1807:2651  function _transferWithTaxes(... */\n    tag_171:\n        /* \"indentity_test_2.sol\":1935:1952  uint256 taxAmount */\n      0x00\n        /* \"indentity_test_2.sol\":1977:1980  100 */\n      0x64\n        /* \"indentity_test_2.sol\":728:730  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":1956:1962  amount */\n      dup4\n        /* \"indentity_test_2.sol\":1956:1973  amount * SELL_TAX */\n      tag_209\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_209:\n        /* \"indentity_test_2.sol\":1955:1980  (amount * SELL_TAX) / 100 */\n      tag_210\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_210:\n        /* \"indentity_test_2.sol\":1935:1980  uint256 taxAmount = (amount * SELL_TAX) / 100 */\n      swap1\n      pop\n        /* \"indentity_test_2.sol\":1990:2008  uint256 sendAmount */\n      0x00\n        /* \"indentity_test_2.sol\":2020:2029  taxAmount */\n      dup2\n        /* \"indentity_test_2.sol\":2011:2017  amount */\n      dup4\n        /* \"indentity_test_2.sol\":2011:2029  amount - taxAmount */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"indentity_test_2.sol\":1990:2029  uint256 sendAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"indentity_test_2.sol\":2040:2104  super._transfer(sender, encouragementFund, (taxAmount * 4) / 12) */\n      tag_213\n        /* \"indentity_test_2.sol\":2056:2062  sender */\n      dup6\n        /* \"indentity_test_2.sol\":2064:2081  encouragementFund */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"indentity_test_2.sol\":2101:2103  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2096:2097  4 */\n      0x04\n        /* \"indentity_test_2.sol\":2084:2093  taxAmount */\n      dup7\n        /* \"indentity_test_2.sol\":2084:2097  taxAmount * 4 */\n      tag_214\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_214:\n        /* \"indentity_test_2.sol\":2083:2103  (taxAmount * 4) / 12 */\n      tag_215\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_215:\n        /* \"indentity_test_2.sol\":2040:2055  super._transfer */\n      tag_135\n        /* \"indentity_test_2.sol\":2040:2104  super._transfer(sender, encouragementFund, (taxAmount * 4) / 12) */\n      jump\t// in\n    tag_213:\n        /* \"indentity_test_2.sol\":2119:2177  TaxDistributed((taxAmount * 4) / 12, \"Encouragement Fund\") */\n      0x6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n        /* \"indentity_test_2.sol\":2152:2154  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2147:2148  4 */\n      0x04\n        /* \"indentity_test_2.sol\":2135:2144  taxAmount */\n      dup5\n        /* \"indentity_test_2.sol\":2135:2148  taxAmount * 4 */\n      tag_216\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_216:\n        /* \"indentity_test_2.sol\":2134:2154  (taxAmount * 4) / 12 */\n      tag_217\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_217:\n        /* \"indentity_test_2.sol\":2119:2177  TaxDistributed((taxAmount * 4) / 12, \"Encouragement Fund\") */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_2.sol\":2188:2248  super._transfer(sender, emergencyFund, (taxAmount * 1) / 12) */\n      tag_220\n        /* \"indentity_test_2.sol\":2204:2210  sender */\n      dup6\n        /* \"indentity_test_2.sol\":2212:2225  emergencyFund */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"indentity_test_2.sol\":2245:2247  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2240:2241  1 */\n      0x01\n        /* \"indentity_test_2.sol\":2228:2237  taxAmount */\n      dup7\n        /* \"indentity_test_2.sol\":2228:2241  taxAmount * 1 */\n      tag_221\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_221:\n        /* \"indentity_test_2.sol\":2227:2247  (taxAmount * 1) / 12 */\n      tag_222\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_222:\n        /* \"indentity_test_2.sol\":2188:2203  super._transfer */\n      tag_135\n        /* \"indentity_test_2.sol\":2188:2248  super._transfer(sender, emergencyFund, (taxAmount * 1) / 12) */\n      jump\t// in\n    tag_220:\n        /* \"indentity_test_2.sol\":2263:2317  TaxDistributed((taxAmount * 1) / 12, \"Emergency Fund\") */\n      0x6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n        /* \"indentity_test_2.sol\":2296:2298  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2291:2292  1 */\n      0x01\n        /* \"indentity_test_2.sol\":2279:2288  taxAmount */\n      dup5\n        /* \"indentity_test_2.sol\":2279:2292  taxAmount * 1 */\n      tag_223\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_223:\n        /* \"indentity_test_2.sol\":2278:2298  (taxAmount * 1) / 12 */\n      tag_224\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_224:\n        /* \"indentity_test_2.sol\":2263:2317  TaxDistributed((taxAmount * 1) / 12, \"Emergency Fund\") */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_2.sol\":2328:2390  super._transfer(sender, marketingWallet, (taxAmount * 4) / 12) */\n      tag_227\n        /* \"indentity_test_2.sol\":2344:2350  sender */\n      dup6\n        /* \"indentity_test_2.sol\":2352:2367  marketingWallet */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"indentity_test_2.sol\":2387:2389  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2382:2383  4 */\n      0x04\n        /* \"indentity_test_2.sol\":2370:2379  taxAmount */\n      dup7\n        /* \"indentity_test_2.sol\":2370:2383  taxAmount * 4 */\n      tag_228\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_228:\n        /* \"indentity_test_2.sol\":2369:2389  (taxAmount * 4) / 12 */\n      tag_229\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_229:\n        /* \"indentity_test_2.sol\":2328:2343  super._transfer */\n      tag_135\n        /* \"indentity_test_2.sol\":2328:2390  super._transfer(sender, marketingWallet, (taxAmount * 4) / 12) */\n      jump\t// in\n    tag_227:\n        /* \"indentity_test_2.sol\":2405:2454  TaxDistributed((taxAmount * 4) / 12, \"Marketing\") */\n      0x6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n        /* \"indentity_test_2.sol\":2438:2440  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2433:2434  4 */\n      0x04\n        /* \"indentity_test_2.sol\":2421:2430  taxAmount */\n      dup5\n        /* \"indentity_test_2.sol\":2421:2434  taxAmount * 4 */\n      tag_230\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_230:\n        /* \"indentity_test_2.sol\":2420:2440  (taxAmount * 4) / 12 */\n      tag_231\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_231:\n        /* \"indentity_test_2.sol\":2405:2454  TaxDistributed((taxAmount * 4) / 12, \"Marketing\") */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_2.sol\":2465:2525  super._transfer(sender, stakingWallet, (taxAmount * 3) / 12) */\n      tag_234\n        /* \"indentity_test_2.sol\":2481:2487  sender */\n      dup6\n        /* \"indentity_test_2.sol\":2489:2502  stakingWallet */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"indentity_test_2.sol\":2522:2524  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2517:2518  3 */\n      0x03\n        /* \"indentity_test_2.sol\":2505:2514  taxAmount */\n      dup7\n        /* \"indentity_test_2.sol\":2505:2518  taxAmount * 3 */\n      tag_235\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_235:\n        /* \"indentity_test_2.sol\":2504:2524  (taxAmount * 3) / 12 */\n      tag_236\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_236:\n        /* \"indentity_test_2.sol\":2465:2480  super._transfer */\n      tag_135\n        /* \"indentity_test_2.sol\":2465:2525  super._transfer(sender, stakingWallet, (taxAmount * 3) / 12) */\n      jump\t// in\n    tag_234:\n        /* \"indentity_test_2.sol\":2540:2587  TaxDistributed((taxAmount * 3) / 12, \"Staking\") */\n      0x6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n        /* \"indentity_test_2.sol\":2573:2575  12 */\n      0x0c\n        /* \"indentity_test_2.sol\":2568:2569  3 */\n      0x03\n        /* \"indentity_test_2.sol\":2556:2565  taxAmount */\n      dup5\n        /* \"indentity_test_2.sol\":2556:2569  taxAmount * 3 */\n      tag_237\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_237:\n        /* \"indentity_test_2.sol\":2555:2575  (taxAmount * 3) / 12 */\n      tag_238\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_238:\n        /* \"indentity_test_2.sol\":2540:2587  TaxDistributed((taxAmount * 3) / 12, \"Staking\") */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_2.sol\":2598:2644  super._transfer(sender, recipient, sendAmount) */\n      tag_241\n        /* \"indentity_test_2.sol\":2614:2620  sender */\n      dup6\n        /* \"indentity_test_2.sol\":2622:2631  recipient */\n      dup6\n        /* \"indentity_test_2.sol\":2633:2643  sendAmount */\n      dup4\n        /* \"indentity_test_2.sol\":2598:2613  super._transfer */\n      tag_135\n        /* \"indentity_test_2.sol\":2598:2644  super._transfer(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_241:\n        /* \"indentity_test_2.sol\":1925:2651  {... */\n      pop\n      pop\n        /* \"indentity_test_2.sol\":1807:2651  function _transferWithTaxes(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_251\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_251:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_252)\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_256)\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_258:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_259:\n        /* \"#utility.yul\":177:201   */\n      tag_299\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_258\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_33:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_301\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_259\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_260:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_261:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_304\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_260\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_262:\n        /* \"#utility.yul\":763:787   */\n      tag_306\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_261\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_37:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_308\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_262\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1127   */\n    tag_263:\n        /* \"#utility.yul\":1080:1086   */\n      0x00\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1108:1120   */\n      mload\n        /* \"#utility.yul\":1098:1120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1302   */\n    tag_264:\n        /* \"#utility.yul\":1217:1228   */\n      0x00\n        /* \"#utility.yul\":1251:1257   */\n      dup3\n        /* \"#utility.yul\":1246:1249   */\n      dup3\n        /* \"#utility.yul\":1239:1258   */\n      mstore\n        /* \"#utility.yul\":1291:1295   */\n      0x20\n        /* \"#utility.yul\":1286:1289   */\n      dup3\n        /* \"#utility.yul\":1282:1296   */\n      add\n        /* \"#utility.yul\":1267:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1133:1302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1308:1447   */\n    tag_265:\n        /* \"#utility.yul\":1397:1403   */\n      dup3\n        /* \"#utility.yul\":1392:1395   */\n      dup2\n        /* \"#utility.yul\":1387:1390   */\n      dup4\n        /* \"#utility.yul\":1381:1404   */\n      mcopy\n        /* \"#utility.yul\":1438:1439   */\n      0x00\n        /* \"#utility.yul\":1429:1435   */\n      dup4\n        /* \"#utility.yul\":1424:1427   */\n      dup4\n        /* \"#utility.yul\":1420:1436   */\n      add\n        /* \"#utility.yul\":1413:1440   */\n      mstore\n        /* \"#utility.yul\":1308:1447   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1453:1555   */\n    tag_266:\n        /* \"#utility.yul\":1494:1500   */\n      0x00\n        /* \"#utility.yul\":1545:1547   */\n      0x1f\n        /* \"#utility.yul\":1541:1548   */\n      not\n        /* \"#utility.yul\":1536:1538   */\n      0x1f\n        /* \"#utility.yul\":1529:1534   */\n      dup4\n        /* \"#utility.yul\":1525:1539   */\n      add\n        /* \"#utility.yul\":1521:1549   */\n      and\n        /* \"#utility.yul\":1511:1549   */\n      swap1\n      pop\n        /* \"#utility.yul\":1453:1555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1561:1938   */\n    tag_267:\n        /* \"#utility.yul\":1649:1652   */\n      0x00\n        /* \"#utility.yul\":1677:1716   */\n      tag_314\n        /* \"#utility.yul\":1710:1715   */\n      dup3\n        /* \"#utility.yul\":1677:1716   */\n      tag_263\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1732:1803   */\n      tag_315\n        /* \"#utility.yul\":1796:1802   */\n      dup2\n        /* \"#utility.yul\":1791:1794   */\n      dup6\n        /* \"#utility.yul\":1732:1803   */\n      tag_264\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1725:1803   */\n      swap4\n      pop\n        /* \"#utility.yul\":1812:1877   */\n      tag_316\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1865:1868   */\n      dup6\n        /* \"#utility.yul\":1858:1862   */\n      0x20\n        /* \"#utility.yul\":1851:1856   */\n      dup7\n        /* \"#utility.yul\":1847:1863   */\n      add\n        /* \"#utility.yul\":1812:1877   */\n      tag_265\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1902:1931   */\n      tag_317\n        /* \"#utility.yul\":1924:1930   */\n      dup2\n        /* \"#utility.yul\":1902:1931   */\n      tag_266\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1897:1900   */\n      dup5\n        /* \"#utility.yul\":1893:1932   */\n      add\n        /* \"#utility.yul\":1886:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1653:1938   */\n      pop\n        /* \"#utility.yul\":1561:1938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1944:2257   */\n    tag_41:\n        /* \"#utility.yul\":2057:2061   */\n      0x00\n        /* \"#utility.yul\":2095:2097   */\n      0x20\n        /* \"#utility.yul\":2084:2093   */\n      dup3\n        /* \"#utility.yul\":2080:2098   */\n      add\n        /* \"#utility.yul\":2072:2098   */\n      swap1\n      pop\n        /* \"#utility.yul\":2144:2153   */\n      dup2\n        /* \"#utility.yul\":2138:2142   */\n      dup2\n        /* \"#utility.yul\":2134:2154   */\n      sub\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2119:2128   */\n      dup4\n        /* \"#utility.yul\":2115:2132   */\n      add\n        /* \"#utility.yul\":2108:2155   */\n      mstore\n        /* \"#utility.yul\":2172:2250   */\n      tag_319\n        /* \"#utility.yul\":2245:2249   */\n      dup2\n        /* \"#utility.yul\":2236:2242   */\n      dup5\n        /* \"#utility.yul\":2172:2250   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2164:2250   */\n      swap1\n      pop\n        /* \"#utility.yul\":1944:2257   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2344:2461   */\n    tag_269:\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2450:2451   */\n      dup1\n        /* \"#utility.yul\":2443:2455   */\n      revert\n        /* \"#utility.yul\":2590:2712   */\n    tag_271:\n        /* \"#utility.yul\":2663:2687   */\n      tag_324\n        /* \"#utility.yul\":2681:2686   */\n      dup2\n        /* \"#utility.yul\":2663:2687   */\n      tag_261\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2656:2661   */\n      dup2\n        /* \"#utility.yul\":2653:2688   */\n      eq\n        /* \"#utility.yul\":2643:2706   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2699:2700   */\n      dup1\n        /* \"#utility.yul\":2692:2704   */\n      revert\n        /* \"#utility.yul\":2643:2706   */\n    tag_325:\n        /* \"#utility.yul\":2590:2712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2718:2857   */\n    tag_272:\n        /* \"#utility.yul\":2764:2769   */\n      0x00\n        /* \"#utility.yul\":2802:2808   */\n      dup2\n        /* \"#utility.yul\":2789:2809   */\n      calldataload\n        /* \"#utility.yul\":2780:2809   */\n      swap1\n      pop\n        /* \"#utility.yul\":2818:2851   */\n      tag_327\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2818:2851   */\n      tag_271\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2718:2857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2863:2985   */\n    tag_273:\n        /* \"#utility.yul\":2936:2960   */\n      tag_329\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2936:2960   */\n      tag_258\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2929:2934   */\n      dup2\n        /* \"#utility.yul\":2926:2961   */\n      eq\n        /* \"#utility.yul\":2916:2979   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":2975:2976   */\n      0x00\n        /* \"#utility.yul\":2972:2973   */\n      dup1\n        /* \"#utility.yul\":2965:2977   */\n      revert\n        /* \"#utility.yul\":2916:2979   */\n    tag_330:\n        /* \"#utility.yul\":2863:2985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3130   */\n    tag_274:\n        /* \"#utility.yul\":3037:3042   */\n      0x00\n        /* \"#utility.yul\":3075:3081   */\n      dup2\n        /* \"#utility.yul\":3062:3082   */\n      calldataload\n        /* \"#utility.yul\":3053:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3091:3124   */\n      tag_332\n        /* \"#utility.yul\":3118:3123   */\n      dup2\n        /* \"#utility.yul\":3091:3124   */\n      tag_273\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2991:3130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3136:3610   */\n    tag_44:\n        /* \"#utility.yul\":3204:3210   */\n      0x00\n        /* \"#utility.yul\":3212:3218   */\n      dup1\n        /* \"#utility.yul\":3261:3263   */\n      0x40\n        /* \"#utility.yul\":3249:3258   */\n      dup4\n        /* \"#utility.yul\":3240:3247   */\n      dup6\n        /* \"#utility.yul\":3236:3259   */\n      sub\n        /* \"#utility.yul\":3232:3264   */\n      slt\n        /* \"#utility.yul\":3229:3348   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3267:3346   */\n      tag_335\n      tag_269\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3229:3348   */\n    tag_334:\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3412:3465   */\n      tag_336\n        /* \"#utility.yul\":3457:3464   */\n      dup6\n        /* \"#utility.yul\":3448:3454   */\n      dup3\n        /* \"#utility.yul\":3437:3446   */\n      dup7\n        /* \"#utility.yul\":3433:3455   */\n      add\n        /* \"#utility.yul\":3412:3465   */\n      tag_272\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3402:3465   */\n      swap3\n      pop\n        /* \"#utility.yul\":3358:3475   */\n      pop\n        /* \"#utility.yul\":3514:3516   */\n      0x20\n        /* \"#utility.yul\":3540:3593   */\n      tag_337\n        /* \"#utility.yul\":3585:3592   */\n      dup6\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3565:3574   */\n      dup7\n        /* \"#utility.yul\":3561:3583   */\n      add\n        /* \"#utility.yul\":3540:3593   */\n      tag_274\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3530:3593   */\n      swap2\n      pop\n        /* \"#utility.yul\":3485:3603   */\n      pop\n        /* \"#utility.yul\":3136:3610   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:3706   */\n    tag_275:\n        /* \"#utility.yul\":3650:3657   */\n      0x00\n        /* \"#utility.yul\":3693:3698   */\n      dup2\n        /* \"#utility.yul\":3686:3699   */\n      iszero\n        /* \"#utility.yul\":3679:3700   */\n      iszero\n        /* \"#utility.yul\":3668:3700   */\n      swap1\n      pop\n        /* \"#utility.yul\":3616:3706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3712:3821   */\n    tag_276:\n        /* \"#utility.yul\":3793:3814   */\n      tag_340\n        /* \"#utility.yul\":3808:3813   */\n      dup2\n        /* \"#utility.yul\":3793:3814   */\n      tag_275\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3781:3815   */\n      mstore\n        /* \"#utility.yul\":3712:3821   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3827:4037   */\n    tag_47:\n        /* \"#utility.yul\":3914:3918   */\n      0x00\n        /* \"#utility.yul\":3952:3954   */\n      0x20\n        /* \"#utility.yul\":3941:3950   */\n      dup3\n        /* \"#utility.yul\":3937:3955   */\n      add\n        /* \"#utility.yul\":3929:3955   */\n      swap1\n      pop\n        /* \"#utility.yul\":3965:4030   */\n      tag_342\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3965:4030   */\n      tag_276\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3827:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4662   */\n    tag_53:\n        /* \"#utility.yul\":4120:4126   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup1\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x60\n        /* \"#utility.yul\":4173:4182   */\n      dup5\n        /* \"#utility.yul\":4164:4171   */\n      dup7\n        /* \"#utility.yul\":4160:4183   */\n      sub\n        /* \"#utility.yul\":4156:4188   */\n      slt\n        /* \"#utility.yul\":4153:4272   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_345\n      tag_269\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4153:4272   */\n    tag_344:\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4336:4389   */\n      tag_346\n        /* \"#utility.yul\":4381:4388   */\n      dup7\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4361:4370   */\n      dup8\n        /* \"#utility.yul\":4357:4379   */\n      add\n        /* \"#utility.yul\":4336:4389   */\n      tag_272\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4326:4389   */\n      swap4\n      pop\n        /* \"#utility.yul\":4282:4399   */\n      pop\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4464:4517   */\n      tag_347\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_272\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4454:4517   */\n      swap3\n      pop\n        /* \"#utility.yul\":4409:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x40\n        /* \"#utility.yul\":4592:4645   */\n      tag_348\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_274\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4582:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4043:4662   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4668:4754   */\n    tag_277:\n        /* \"#utility.yul\":4703:4710   */\n      0x00\n        /* \"#utility.yul\":4743:4747   */\n      0xff\n        /* \"#utility.yul\":4736:4741   */\n      dup3\n        /* \"#utility.yul\":4732:4748   */\n      and\n        /* \"#utility.yul\":4721:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4760:4872   */\n    tag_278:\n        /* \"#utility.yul\":4843:4865   */\n      tag_351\n        /* \"#utility.yul\":4859:4864   */\n      dup2\n        /* \"#utility.yul\":4843:4865   */\n      tag_277\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4866   */\n      mstore\n        /* \"#utility.yul\":4760:4872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5092   */\n    tag_62:\n        /* \"#utility.yul\":4967:4971   */\n      0x00\n        /* \"#utility.yul\":5005:5007   */\n      0x20\n        /* \"#utility.yul\":4994:5003   */\n      dup3\n        /* \"#utility.yul\":4990:5008   */\n      add\n        /* \"#utility.yul\":4982:5008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5085   */\n      tag_353\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5018:5085   */\n      tag_278\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4878:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_68:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_356\n      tag_269\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5174:5293   */\n    tag_355:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_357\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_272\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5549   */\n    tag_279:\n        /* \"#utility.yul\":5503:5524   */\n      tag_359\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5503:5524   */\n      tag_275\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5496:5501   */\n      dup2\n        /* \"#utility.yul\":5493:5525   */\n      eq\n        /* \"#utility.yul\":5483:5543   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5483:5543   */\n    tag_360:\n        /* \"#utility.yul\":5433:5549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5688   */\n    tag_280:\n        /* \"#utility.yul\":5598:5603   */\n      0x00\n        /* \"#utility.yul\":5636:5642   */\n      dup2\n        /* \"#utility.yul\":5623:5643   */\n      calldataload\n        /* \"#utility.yul\":5614:5643   */\n      swap1\n      pop\n        /* \"#utility.yul\":5652:5682   */\n      tag_362\n        /* \"#utility.yul\":5676:5681   */\n      dup2\n        /* \"#utility.yul\":5652:5682   */\n      tag_279\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5555:5688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5694:6162   */\n    tag_85:\n        /* \"#utility.yul\":5759:5765   */\n      0x00\n        /* \"#utility.yul\":5767:5773   */\n      dup1\n        /* \"#utility.yul\":5816:5818   */\n      0x40\n        /* \"#utility.yul\":5804:5813   */\n      dup4\n        /* \"#utility.yul\":5795:5802   */\n      dup6\n        /* \"#utility.yul\":5791:5814   */\n      sub\n        /* \"#utility.yul\":5787:5819   */\n      slt\n        /* \"#utility.yul\":5784:5903   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5822:5901   */\n      tag_365\n      tag_269\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5784:5903   */\n    tag_364:\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5967:6020   */\n      tag_366\n        /* \"#utility.yul\":6012:6019   */\n      dup6\n        /* \"#utility.yul\":6003:6009   */\n      dup3\n        /* \"#utility.yul\":5992:6001   */\n      dup7\n        /* \"#utility.yul\":5988:6010   */\n      add\n        /* \"#utility.yul\":5967:6020   */\n      tag_272\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5957:6020   */\n      swap3\n      pop\n        /* \"#utility.yul\":5913:6030   */\n      pop\n        /* \"#utility.yul\":6069:6071   */\n      0x20\n        /* \"#utility.yul\":6095:6145   */\n      tag_367\n        /* \"#utility.yul\":6137:6144   */\n      dup6\n        /* \"#utility.yul\":6128:6134   */\n      dup3\n        /* \"#utility.yul\":6117:6126   */\n      dup7\n        /* \"#utility.yul\":6113:6135   */\n      add\n        /* \"#utility.yul\":6095:6145   */\n      tag_280\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6085:6145   */\n      swap2\n      pop\n        /* \"#utility.yul\":6040:6155   */\n      pop\n        /* \"#utility.yul\":5694:6162   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6642   */\n    tag_105:\n        /* \"#utility.yul\":6236:6242   */\n      0x00\n        /* \"#utility.yul\":6244:6250   */\n      dup1\n        /* \"#utility.yul\":6293:6295   */\n      0x40\n        /* \"#utility.yul\":6281:6290   */\n      dup4\n        /* \"#utility.yul\":6272:6279   */\n      dup6\n        /* \"#utility.yul\":6268:6291   */\n      sub\n        /* \"#utility.yul\":6264:6296   */\n      slt\n        /* \"#utility.yul\":6261:6380   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6299:6378   */\n      tag_370\n      tag_269\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6261:6380   */\n    tag_369:\n        /* \"#utility.yul\":6419:6420   */\n      0x00\n        /* \"#utility.yul\":6444:6497   */\n      tag_371\n        /* \"#utility.yul\":6489:6496   */\n      dup6\n        /* \"#utility.yul\":6480:6486   */\n      dup3\n        /* \"#utility.yul\":6469:6478   */\n      dup7\n        /* \"#utility.yul\":6465:6487   */\n      add\n        /* \"#utility.yul\":6444:6497   */\n      tag_272\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6434:6497   */\n      swap3\n      pop\n        /* \"#utility.yul\":6390:6507   */\n      pop\n        /* \"#utility.yul\":6546:6548   */\n      0x20\n        /* \"#utility.yul\":6572:6625   */\n      tag_372\n        /* \"#utility.yul\":6617:6624   */\n      dup6\n        /* \"#utility.yul\":6608:6614   */\n      dup3\n        /* \"#utility.yul\":6597:6606   */\n      dup7\n        /* \"#utility.yul\":6593:6615   */\n      add\n        /* \"#utility.yul\":6572:6625   */\n      tag_272\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6562:6625   */\n      swap2\n      pop\n        /* \"#utility.yul\":6517:6635   */\n      pop\n        /* \"#utility.yul\":6168:6642   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6648:6828   */\n    tag_281:\n        /* \"#utility.yul\":6696:6773   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6686:6774   */\n      mstore\n        /* \"#utility.yul\":6793:6797   */\n      0x22\n        /* \"#utility.yul\":6790:6791   */\n      0x04\n        /* \"#utility.yul\":6783:6798   */\n      mstore\n        /* \"#utility.yul\":6817:6821   */\n      0x24\n        /* \"#utility.yul\":6814:6815   */\n      0x00\n        /* \"#utility.yul\":6807:6822   */\n      revert\n        /* \"#utility.yul\":6834:7154   */\n    tag_119:\n        /* \"#utility.yul\":6878:6884   */\n      0x00\n        /* \"#utility.yul\":6915:6916   */\n      0x02\n        /* \"#utility.yul\":6909:6913   */\n      dup3\n        /* \"#utility.yul\":6905:6917   */\n      div\n        /* \"#utility.yul\":6895:6917   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:6963   */\n      0x01\n        /* \"#utility.yul\":6956:6960   */\n      dup3\n        /* \"#utility.yul\":6952:6964   */\n      and\n        /* \"#utility.yul\":6983:7001   */\n      dup1\n        /* \"#utility.yul\":6973:7054   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7039:7043   */\n      0x7f\n        /* \"#utility.yul\":7031:7037   */\n      dup3\n        /* \"#utility.yul\":7027:7044   */\n      and\n        /* \"#utility.yul\":7017:7044   */\n      swap2\n      pop\n        /* \"#utility.yul\":6973:7054   */\n    tag_375:\n        /* \"#utility.yul\":7101:7103   */\n      0x20\n        /* \"#utility.yul\":7093:7099   */\n      dup3\n        /* \"#utility.yul\":7090:7104   */\n      lt\n        /* \"#utility.yul\":7070:7088   */\n      dup2\n        /* \"#utility.yul\":7067:7105   */\n      sub\n        /* \"#utility.yul\":7064:7148   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":7120:7138   */\n      tag_377\n      tag_281\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7064:7148   */\n    tag_376:\n        /* \"#utility.yul\":6885:7154   */\n      pop\n        /* \"#utility.yul\":6834:7154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7160:7340   */\n    tag_282:\n        /* \"#utility.yul\":7208:7285   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7205:7206   */\n      0x00\n        /* \"#utility.yul\":7198:7286   */\n      mstore\n        /* \"#utility.yul\":7305:7309   */\n      0x11\n        /* \"#utility.yul\":7302:7303   */\n      0x04\n        /* \"#utility.yul\":7295:7310   */\n      mstore\n        /* \"#utility.yul\":7329:7333   */\n      0x24\n        /* \"#utility.yul\":7326:7327   */\n      0x00\n        /* \"#utility.yul\":7319:7334   */\n      revert\n        /* \"#utility.yul\":7346:7756   */\n    tag_156:\n        /* \"#utility.yul\":7386:7393   */\n      0x00\n        /* \"#utility.yul\":7409:7429   */\n      tag_380\n        /* \"#utility.yul\":7427:7428   */\n      dup3\n        /* \"#utility.yul\":7409:7429   */\n      tag_258\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7404:7429   */\n      swap2\n      pop\n        /* \"#utility.yul\":7443:7463   */\n      tag_381\n        /* \"#utility.yul\":7461:7462   */\n      dup4\n        /* \"#utility.yul\":7443:7463   */\n      tag_258\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7438:7463   */\n      swap3\n      pop\n        /* \"#utility.yul\":7498:7499   */\n      dup3\n        /* \"#utility.yul\":7495:7496   */\n      dup3\n        /* \"#utility.yul\":7491:7500   */\n      mul\n        /* \"#utility.yul\":7520:7550   */\n      tag_382\n        /* \"#utility.yul\":7538:7549   */\n      dup2\n        /* \"#utility.yul\":7520:7550   */\n      tag_258\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7509:7550   */\n      swap2\n      pop\n        /* \"#utility.yul\":7699:7700   */\n      dup3\n        /* \"#utility.yul\":7690:7697   */\n      dup3\n        /* \"#utility.yul\":7686:7701   */\n      div\n        /* \"#utility.yul\":7683:7684   */\n      dup5\n        /* \"#utility.yul\":7680:7702   */\n      eq\n        /* \"#utility.yul\":7660:7661   */\n      dup4\n        /* \"#utility.yul\":7653:7662   */\n      iszero\n        /* \"#utility.yul\":7633:7716   */\n      or\n        /* \"#utility.yul\":7610:7749   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7729:7747   */\n      tag_384\n      tag_282\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7610:7749   */\n    tag_383:\n        /* \"#utility.yul\":7394:7756   */\n      pop\n        /* \"#utility.yul\":7346:7756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:7942   */\n    tag_283:\n        /* \"#utility.yul\":7810:7887   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7807:7808   */\n      0x00\n        /* \"#utility.yul\":7800:7888   */\n      mstore\n        /* \"#utility.yul\":7907:7911   */\n      0x12\n        /* \"#utility.yul\":7904:7905   */\n      0x04\n        /* \"#utility.yul\":7897:7912   */\n      mstore\n        /* \"#utility.yul\":7931:7935   */\n      0x24\n        /* \"#utility.yul\":7928:7929   */\n      0x00\n        /* \"#utility.yul\":7921:7936   */\n      revert\n        /* \"#utility.yul\":7948:8133   */\n    tag_158:\n        /* \"#utility.yul\":7988:7989   */\n      0x00\n        /* \"#utility.yul\":8005:8025   */\n      tag_387\n        /* \"#utility.yul\":8023:8024   */\n      dup3\n        /* \"#utility.yul\":8005:8025   */\n      tag_258\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8000:8025   */\n      swap2\n      pop\n        /* \"#utility.yul\":8039:8059   */\n      tag_388\n        /* \"#utility.yul\":8057:8058   */\n      dup4\n        /* \"#utility.yul\":8039:8059   */\n      tag_258\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8034:8059   */\n      swap3\n      pop\n        /* \"#utility.yul\":8078:8079   */\n      dup3\n        /* \"#utility.yul\":8068:8103   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":8083:8101   */\n      tag_390\n      tag_283\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8068:8103   */\n    tag_389:\n        /* \"#utility.yul\":8125:8126   */\n      dup3\n        /* \"#utility.yul\":8122:8123   */\n      dup3\n        /* \"#utility.yul\":8118:8127   */\n      div\n        /* \"#utility.yul\":8113:8127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7948:8133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8139:8330   */\n    tag_161:\n        /* \"#utility.yul\":8179:8182   */\n      0x00\n        /* \"#utility.yul\":8198:8218   */\n      tag_392\n        /* \"#utility.yul\":8216:8217   */\n      dup3\n        /* \"#utility.yul\":8198:8218   */\n      tag_258\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8193:8218   */\n      swap2\n      pop\n        /* \"#utility.yul\":8232:8252   */\n      tag_393\n        /* \"#utility.yul\":8250:8251   */\n      dup4\n        /* \"#utility.yul\":8232:8252   */\n      tag_258\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8227:8252   */\n      swap3\n      pop\n        /* \"#utility.yul\":8275:8276   */\n      dup3\n        /* \"#utility.yul\":8272:8273   */\n      dup3\n        /* \"#utility.yul\":8268:8277   */\n      add\n        /* \"#utility.yul\":8261:8277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8296:8299   */\n      dup1\n        /* \"#utility.yul\":8293:8294   */\n      dup3\n        /* \"#utility.yul\":8290:8300   */\n      gt\n        /* \"#utility.yul\":8287:8323   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":8303:8321   */\n      tag_395\n      tag_282\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8287:8323   */\n    tag_394:\n        /* \"#utility.yul\":8139:8330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8336:8510   */\n    tag_284:\n        /* \"#utility.yul\":8476:8502   */\n      0x45786365656473206d61782077616c6c6574206c696d69740000000000000000\n        /* \"#utility.yul\":8472:8473   */\n      0x00\n        /* \"#utility.yul\":8464:8470   */\n      dup3\n        /* \"#utility.yul\":8460:8474   */\n      add\n        /* \"#utility.yul\":8453:8503   */\n      mstore\n        /* \"#utility.yul\":8336:8510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8516:8882   */\n    tag_285:\n        /* \"#utility.yul\":8658:8661   */\n      0x00\n        /* \"#utility.yul\":8679:8746   */\n      tag_398\n        /* \"#utility.yul\":8743:8745   */\n      0x18\n        /* \"#utility.yul\":8738:8741   */\n      dup4\n        /* \"#utility.yul\":8679:8746   */\n      tag_264\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8672:8746   */\n      swap2\n      pop\n        /* \"#utility.yul\":8755:8848   */\n      tag_399\n        /* \"#utility.yul\":8844:8847   */\n      dup3\n        /* \"#utility.yul\":8755:8848   */\n      tag_284\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8873:8875   */\n      0x20\n        /* \"#utility.yul\":8868:8871   */\n      dup3\n        /* \"#utility.yul\":8864:8876   */\n      add\n        /* \"#utility.yul\":8857:8876   */\n      swap1\n      pop\n        /* \"#utility.yul\":8516:8882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8888:9307   */\n    tag_164:\n        /* \"#utility.yul\":9054:9058   */\n      0x00\n        /* \"#utility.yul\":9092:9094   */\n      0x20\n        /* \"#utility.yul\":9081:9090   */\n      dup3\n        /* \"#utility.yul\":9077:9095   */\n      add\n        /* \"#utility.yul\":9069:9095   */\n      swap1\n      pop\n        /* \"#utility.yul\":9141:9150   */\n      dup2\n        /* \"#utility.yul\":9135:9139   */\n      dup2\n        /* \"#utility.yul\":9131:9151   */\n      sub\n        /* \"#utility.yul\":9127:9128   */\n      0x00\n        /* \"#utility.yul\":9116:9125   */\n      dup4\n        /* \"#utility.yul\":9112:9129   */\n      add\n        /* \"#utility.yul\":9105:9152   */\n      mstore\n        /* \"#utility.yul\":9169:9300   */\n      tag_401\n        /* \"#utility.yul\":9295:9299   */\n      dup2\n        /* \"#utility.yul\":9169:9300   */\n      tag_285\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9161:9300   */\n      swap1\n      pop\n        /* \"#utility.yul\":8888:9307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9313:9492   */\n    tag_286:\n        /* \"#utility.yul\":9453:9484   */\n      0x45786365656473206d6178207472616e73616374696f6e206c696d6974000000\n        /* \"#utility.yul\":9449:9450   */\n      0x00\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9437:9451   */\n      add\n        /* \"#utility.yul\":9430:9485   */\n      mstore\n        /* \"#utility.yul\":9313:9492   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9498:9864   */\n    tag_287:\n        /* \"#utility.yul\":9640:9643   */\n      0x00\n        /* \"#utility.yul\":9661:9728   */\n      tag_404\n        /* \"#utility.yul\":9725:9727   */\n      0x1d\n        /* \"#utility.yul\":9720:9723   */\n      dup4\n        /* \"#utility.yul\":9661:9728   */\n      tag_264\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9654:9728   */\n      swap2\n      pop\n        /* \"#utility.yul\":9737:9830   */\n      tag_405\n        /* \"#utility.yul\":9826:9829   */\n      dup3\n        /* \"#utility.yul\":9737:9830   */\n      tag_286\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9855:9857   */\n      0x20\n        /* \"#utility.yul\":9850:9853   */\n      dup3\n        /* \"#utility.yul\":9846:9858   */\n      add\n        /* \"#utility.yul\":9839:9858   */\n      swap1\n      pop\n        /* \"#utility.yul\":9498:9864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10289   */\n    tag_169:\n        /* \"#utility.yul\":10036:10040   */\n      0x00\n        /* \"#utility.yul\":10074:10076   */\n      0x20\n        /* \"#utility.yul\":10063:10072   */\n      dup3\n        /* \"#utility.yul\":10059:10077   */\n      add\n        /* \"#utility.yul\":10051:10077   */\n      swap1\n      pop\n        /* \"#utility.yul\":10123:10132   */\n      dup2\n        /* \"#utility.yul\":10117:10121   */\n      dup2\n        /* \"#utility.yul\":10113:10133   */\n      sub\n        /* \"#utility.yul\":10109:10110   */\n      0x00\n        /* \"#utility.yul\":10098:10107   */\n      dup4\n        /* \"#utility.yul\":10094:10111   */\n      add\n        /* \"#utility.yul\":10087:10134   */\n      mstore\n        /* \"#utility.yul\":10151:10282   */\n      tag_407\n        /* \"#utility.yul\":10277:10281   */\n      dup2\n        /* \"#utility.yul\":10151:10282   */\n      tag_287\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10143:10282   */\n      swap1\n      pop\n        /* \"#utility.yul\":9870:10289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10295:10737   */\n    tag_192:\n        /* \"#utility.yul\":10444:10448   */\n      0x00\n        /* \"#utility.yul\":10482:10484   */\n      0x60\n        /* \"#utility.yul\":10471:10480   */\n      dup3\n        /* \"#utility.yul\":10467:10485   */\n      add\n        /* \"#utility.yul\":10459:10485   */\n      swap1\n      pop\n        /* \"#utility.yul\":10495:10566   */\n      tag_409\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10552:10561   */\n      dup4\n        /* \"#utility.yul\":10548:10565   */\n      add\n        /* \"#utility.yul\":10539:10545   */\n      dup7\n        /* \"#utility.yul\":10495:10566   */\n      tag_262\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10576:10648   */\n      tag_410\n        /* \"#utility.yul\":10644:10646   */\n      0x20\n        /* \"#utility.yul\":10633:10642   */\n      dup4\n        /* \"#utility.yul\":10629:10647   */\n      add\n        /* \"#utility.yul\":10620:10626   */\n      dup6\n        /* \"#utility.yul\":10576:10648   */\n      tag_259\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10658:10730   */\n      tag_411\n        /* \"#utility.yul\":10726:10728   */\n      0x40\n        /* \"#utility.yul\":10715:10724   */\n      dup4\n        /* \"#utility.yul\":10711:10729   */\n      add\n        /* \"#utility.yul\":10702:10708   */\n      dup5\n        /* \"#utility.yul\":10658:10730   */\n      tag_259\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10295:10737   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10743:10937   */\n    tag_212:\n        /* \"#utility.yul\":10783:10787   */\n      0x00\n        /* \"#utility.yul\":10803:10823   */\n      tag_413\n        /* \"#utility.yul\":10821:10822   */\n      dup3\n        /* \"#utility.yul\":10803:10823   */\n      tag_258\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10798:10823   */\n      swap2\n      pop\n        /* \"#utility.yul\":10837:10857   */\n      tag_414\n        /* \"#utility.yul\":10855:10856   */\n      dup4\n        /* \"#utility.yul\":10837:10857   */\n      tag_258\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10832:10857   */\n      swap3\n      pop\n        /* \"#utility.yul\":10881:10882   */\n      dup3\n        /* \"#utility.yul\":10878:10879   */\n      dup3\n        /* \"#utility.yul\":10874:10883   */\n      sub\n        /* \"#utility.yul\":10866:10883   */\n      swap1\n      pop\n        /* \"#utility.yul\":10905:10906   */\n      dup2\n        /* \"#utility.yul\":10899:10903   */\n      dup2\n        /* \"#utility.yul\":10896:10907   */\n      gt\n        /* \"#utility.yul\":10893:10930   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":10910:10928   */\n      tag_416\n      tag_282\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10893:10930   */\n    tag_415:\n        /* \"#utility.yul\":10743:10937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10943:11111   */\n    tag_288:\n        /* \"#utility.yul\":11083:11103   */\n      0x456e636f75726167656d656e742046756e640000000000000000000000000000\n        /* \"#utility.yul\":11079:11080   */\n      0x00\n        /* \"#utility.yul\":11071:11077   */\n      dup3\n        /* \"#utility.yul\":11067:11081   */\n      add\n        /* \"#utility.yul\":11060:11104   */\n      mstore\n        /* \"#utility.yul\":10943:11111   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11117:11483   */\n    tag_289:\n        /* \"#utility.yul\":11259:11262   */\n      0x00\n        /* \"#utility.yul\":11280:11347   */\n      tag_419\n        /* \"#utility.yul\":11344:11346   */\n      0x12\n        /* \"#utility.yul\":11339:11342   */\n      dup4\n        /* \"#utility.yul\":11280:11347   */\n      tag_264\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11273:11347   */\n      swap2\n      pop\n        /* \"#utility.yul\":11356:11449   */\n      tag_420\n        /* \"#utility.yul\":11445:11448   */\n      dup3\n        /* \"#utility.yul\":11356:11449   */\n      tag_288\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11474:11476   */\n      0x20\n        /* \"#utility.yul\":11469:11472   */\n      dup3\n        /* \"#utility.yul\":11465:11477   */\n      add\n        /* \"#utility.yul\":11458:11477   */\n      swap1\n      pop\n        /* \"#utility.yul\":11117:11483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11489:12018   */\n    tag_219:\n        /* \"#utility.yul\":11683:11687   */\n      0x00\n        /* \"#utility.yul\":11721:11723   */\n      0x40\n        /* \"#utility.yul\":11710:11719   */\n      dup3\n        /* \"#utility.yul\":11706:11724   */\n      add\n        /* \"#utility.yul\":11698:11724   */\n      swap1\n      pop\n        /* \"#utility.yul\":11734:11805   */\n      tag_422\n        /* \"#utility.yul\":11802:11803   */\n      0x00\n        /* \"#utility.yul\":11791:11800   */\n      dup4\n        /* \"#utility.yul\":11787:11804   */\n      add\n        /* \"#utility.yul\":11778:11784   */\n      dup5\n        /* \"#utility.yul\":11734:11805   */\n      tag_259\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11852:11861   */\n      dup2\n        /* \"#utility.yul\":11846:11850   */\n      dup2\n        /* \"#utility.yul\":11842:11862   */\n      sub\n        /* \"#utility.yul\":11837:11839   */\n      0x20\n        /* \"#utility.yul\":11826:11835   */\n      dup4\n        /* \"#utility.yul\":11822:11840   */\n      add\n        /* \"#utility.yul\":11815:11863   */\n      mstore\n        /* \"#utility.yul\":11880:12011   */\n      tag_423\n        /* \"#utility.yul\":12006:12010   */\n      dup2\n        /* \"#utility.yul\":11880:12011   */\n      tag_289\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11872:12011   */\n      swap1\n      pop\n        /* \"#utility.yul\":11489:12018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12024:12188   */\n    tag_290:\n        /* \"#utility.yul\":12164:12180   */\n      0x456d657267656e63792046756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":12160:12161   */\n      0x00\n        /* \"#utility.yul\":12152:12158   */\n      dup3\n        /* \"#utility.yul\":12148:12162   */\n      add\n        /* \"#utility.yul\":12141:12181   */\n      mstore\n        /* \"#utility.yul\":12024:12188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12194:12560   */\n    tag_291:\n        /* \"#utility.yul\":12336:12339   */\n      0x00\n        /* \"#utility.yul\":12357:12424   */\n      tag_426\n        /* \"#utility.yul\":12421:12423   */\n      0x0e\n        /* \"#utility.yul\":12416:12419   */\n      dup4\n        /* \"#utility.yul\":12357:12424   */\n      tag_264\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12350:12424   */\n      swap2\n      pop\n        /* \"#utility.yul\":12433:12526   */\n      tag_427\n        /* \"#utility.yul\":12522:12525   */\n      dup3\n        /* \"#utility.yul\":12433:12526   */\n      tag_290\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12551:12553   */\n      0x20\n        /* \"#utility.yul\":12546:12549   */\n      dup3\n        /* \"#utility.yul\":12542:12554   */\n      add\n        /* \"#utility.yul\":12535:12554   */\n      swap1\n      pop\n        /* \"#utility.yul\":12194:12560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12566:13095   */\n    tag_226:\n        /* \"#utility.yul\":12760:12764   */\n      0x00\n        /* \"#utility.yul\":12798:12800   */\n      0x40\n        /* \"#utility.yul\":12787:12796   */\n      dup3\n        /* \"#utility.yul\":12783:12801   */\n      add\n        /* \"#utility.yul\":12775:12801   */\n      swap1\n      pop\n        /* \"#utility.yul\":12811:12882   */\n      tag_429\n        /* \"#utility.yul\":12879:12880   */\n      0x00\n        /* \"#utility.yul\":12868:12877   */\n      dup4\n        /* \"#utility.yul\":12864:12881   */\n      add\n        /* \"#utility.yul\":12855:12861   */\n      dup5\n        /* \"#utility.yul\":12811:12882   */\n      tag_259\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12929:12938   */\n      dup2\n        /* \"#utility.yul\":12923:12927   */\n      dup2\n        /* \"#utility.yul\":12919:12939   */\n      sub\n        /* \"#utility.yul\":12914:12916   */\n      0x20\n        /* \"#utility.yul\":12903:12912   */\n      dup4\n        /* \"#utility.yul\":12899:12917   */\n      add\n        /* \"#utility.yul\":12892:12940   */\n      mstore\n        /* \"#utility.yul\":12957:13088   */\n      tag_430\n        /* \"#utility.yul\":13083:13087   */\n      dup2\n        /* \"#utility.yul\":12957:13088   */\n      tag_291\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12949:13088   */\n      swap1\n      pop\n        /* \"#utility.yul\":12566:13095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13101:13260   */\n    tag_292:\n        /* \"#utility.yul\":13241:13252   */\n      0x4d61726b6574696e670000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13237:13238   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      dup3\n        /* \"#utility.yul\":13225:13239   */\n      add\n        /* \"#utility.yul\":13218:13253   */\n      mstore\n        /* \"#utility.yul\":13101:13260   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13266:13631   */\n    tag_293:\n        /* \"#utility.yul\":13408:13411   */\n      0x00\n        /* \"#utility.yul\":13429:13495   */\n      tag_433\n        /* \"#utility.yul\":13493:13494   */\n      0x09\n        /* \"#utility.yul\":13488:13491   */\n      dup4\n        /* \"#utility.yul\":13429:13495   */\n      tag_264\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13422:13495   */\n      swap2\n      pop\n        /* \"#utility.yul\":13504:13597   */\n      tag_434\n        /* \"#utility.yul\":13593:13596   */\n      dup3\n        /* \"#utility.yul\":13504:13597   */\n      tag_292\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13622:13624   */\n      0x20\n        /* \"#utility.yul\":13617:13620   */\n      dup3\n        /* \"#utility.yul\":13613:13625   */\n      add\n        /* \"#utility.yul\":13606:13625   */\n      swap1\n      pop\n        /* \"#utility.yul\":13266:13631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13637:14166   */\n    tag_233:\n        /* \"#utility.yul\":13831:13835   */\n      0x00\n        /* \"#utility.yul\":13869:13871   */\n      0x40\n        /* \"#utility.yul\":13858:13867   */\n      dup3\n        /* \"#utility.yul\":13854:13872   */\n      add\n        /* \"#utility.yul\":13846:13872   */\n      swap1\n      pop\n        /* \"#utility.yul\":13882:13953   */\n      tag_436\n        /* \"#utility.yul\":13950:13951   */\n      0x00\n        /* \"#utility.yul\":13939:13948   */\n      dup4\n        /* \"#utility.yul\":13935:13952   */\n      add\n        /* \"#utility.yul\":13926:13932   */\n      dup5\n        /* \"#utility.yul\":13882:13953   */\n      tag_259\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14000:14009   */\n      dup2\n        /* \"#utility.yul\":13994:13998   */\n      dup2\n        /* \"#utility.yul\":13990:14010   */\n      sub\n        /* \"#utility.yul\":13985:13987   */\n      0x20\n        /* \"#utility.yul\":13974:13983   */\n      dup4\n        /* \"#utility.yul\":13970:13988   */\n      add\n        /* \"#utility.yul\":13963:14011   */\n      mstore\n        /* \"#utility.yul\":14028:14159   */\n      tag_437\n        /* \"#utility.yul\":14154:14158   */\n      dup2\n        /* \"#utility.yul\":14028:14159   */\n      tag_293\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14020:14159   */\n      swap1\n      pop\n        /* \"#utility.yul\":13637:14166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14172:14329   */\n    tag_294:\n        /* \"#utility.yul\":14312:14321   */\n      0x5374616b696e6700000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14308:14309   */\n      0x00\n        /* \"#utility.yul\":14300:14306   */\n      dup3\n        /* \"#utility.yul\":14296:14310   */\n      add\n        /* \"#utility.yul\":14289:14322   */\n      mstore\n        /* \"#utility.yul\":14172:14329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14335:14700   */\n    tag_295:\n        /* \"#utility.yul\":14477:14480   */\n      0x00\n        /* \"#utility.yul\":14498:14564   */\n      tag_440\n        /* \"#utility.yul\":14562:14563   */\n      0x07\n        /* \"#utility.yul\":14557:14560   */\n      dup4\n        /* \"#utility.yul\":14498:14564   */\n      tag_264\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14491:14564   */\n      swap2\n      pop\n        /* \"#utility.yul\":14573:14666   */\n      tag_441\n        /* \"#utility.yul\":14662:14665   */\n      dup3\n        /* \"#utility.yul\":14573:14666   */\n      tag_294\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14691:14693   */\n      0x20\n        /* \"#utility.yul\":14686:14689   */\n      dup3\n        /* \"#utility.yul\":14682:14694   */\n      add\n        /* \"#utility.yul\":14675:14694   */\n      swap1\n      pop\n        /* \"#utility.yul\":14335:14700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14706:15235   */\n    tag_240:\n        /* \"#utility.yul\":14900:14904   */\n      0x00\n        /* \"#utility.yul\":14938:14940   */\n      0x40\n        /* \"#utility.yul\":14927:14936   */\n      dup3\n        /* \"#utility.yul\":14923:14941   */\n      add\n        /* \"#utility.yul\":14915:14941   */\n      swap1\n      pop\n        /* \"#utility.yul\":14951:15022   */\n      tag_443\n        /* \"#utility.yul\":15019:15020   */\n      0x00\n        /* \"#utility.yul\":15008:15017   */\n      dup4\n        /* \"#utility.yul\":15004:15021   */\n      add\n        /* \"#utility.yul\":14995:15001   */\n      dup5\n        /* \"#utility.yul\":14951:15022   */\n      tag_259\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15069:15078   */\n      dup2\n        /* \"#utility.yul\":15063:15067   */\n      dup2\n        /* \"#utility.yul\":15059:15079   */\n      sub\n        /* \"#utility.yul\":15054:15056   */\n      0x20\n        /* \"#utility.yul\":15043:15052   */\n      dup4\n        /* \"#utility.yul\":15039:15057   */\n      add\n        /* \"#utility.yul\":15032:15080   */\n      mstore\n        /* \"#utility.yul\":15097:15228   */\n      tag_444\n        /* \"#utility.yul\":15223:15227   */\n      dup2\n        /* \"#utility.yul\":15097:15228   */\n      tag_295\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15089:15228   */\n      swap1\n      pop\n        /* \"#utility.yul\":14706:15235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f539147d1aa460302257203a4071938a6c19322fd2fb02c721b1379cff1ac1064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1108": {
									"entryPoint": null,
									"id": 1108,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 900,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 705,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 1033,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8430:8",
										"nodeType": "YulBlock",
										"src": "0:8430:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "973:692:8",
													"nodeType": "YulBlock",
													"src": "973:692:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:83:8",
																"nodeType": "YulBlock",
																"src": "1020:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1022:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1022:77:8"
																			},
																			"nativeSrc": "1022:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:79:8"
																		},
																		"nativeSrc": "1022:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1003:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1003:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "990:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:8"
																		},
																		"nativeSrc": "990:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "990:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:3:8",
																		"nodeType": "YulLiteral",
																		"src": "1015:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "986:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:8"
																},
																"nativeSrc": "986:33:8",
																"nodeType": "YulFunctionCall",
																"src": "986:33:8"
															},
															"nativeSrc": "983:120:8",
															"nodeType": "YulIf",
															"src": "983:120:8"
														},
														{
															"nativeSrc": "1113:128:8",
															"nodeType": "YulBlock",
															"src": "1113:128:8",
															"statements": [
																{
																	"nativeSrc": "1128:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1128:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1142:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1142:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1132:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1132:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1157:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1157:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1203:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1203:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1214:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1214:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1199:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1199:3:8"
																				},
																				"nativeSrc": "1199:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1199:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1223:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1223:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1167:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1167:31:8"
																		},
																		"nativeSrc": "1167:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1157:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1157:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1251:129:8",
															"nodeType": "YulBlock",
															"src": "1251:129:8",
															"statements": [
																{
																	"nativeSrc": "1266:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1266:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1280:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1270:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1270:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1296:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1296:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1342:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1353:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:8"
																				},
																				"nativeSrc": "1338:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1362:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1306:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1306:31:8"
																		},
																		"nativeSrc": "1306:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1306:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1296:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1296:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1390:129:8",
															"nodeType": "YulBlock",
															"src": "1390:129:8",
															"statements": [
																{
																	"nativeSrc": "1405:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1419:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1409:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1435:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1435:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1481:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1481:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1492:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1492:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1477:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1477:3:8"
																				},
																				"nativeSrc": "1477:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1477:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1501:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1501:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1445:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1445:31:8"
																		},
																		"nativeSrc": "1445:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1435:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1435:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1529:129:8",
															"nodeType": "YulBlock",
															"src": "1529:129:8",
															"statements": [
																{
																	"nativeSrc": "1544:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1558:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1548:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1574:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1574:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1620:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1620:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1631:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1631:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1616:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:8"
																				},
																				"nativeSrc": "1616:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1616:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1640:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1584:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1584:31:8"
																		},
																		"nativeSrc": "1584:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1574:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1574:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:820:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "919:9:8",
														"nodeType": "YulTypedName",
														"src": "919:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "930:7:8",
														"nodeType": "YulTypedName",
														"src": "930:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "942:6:8",
														"nodeType": "YulTypedName",
														"src": "942:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "950:6:8",
														"nodeType": "YulTypedName",
														"src": "950:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "958:6:8",
														"nodeType": "YulTypedName",
														"src": "958:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "966:6:8",
														"nodeType": "YulTypedName",
														"src": "966:6:8",
														"type": ""
													}
												],
												"src": "845:820:8"
											},
											{
												"body": {
													"nativeSrc": "1730:40:8",
													"nodeType": "YulBlock",
													"src": "1730:40:8",
													"statements": [
														{
															"nativeSrc": "1741:22:8",
															"nodeType": "YulAssignment",
															"src": "1741:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1757:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1757:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1751:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1751:5:8"
																},
																"nativeSrc": "1751:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1751:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1741:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1671:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1713:5:8",
														"nodeType": "YulTypedName",
														"src": "1713:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:8",
														"nodeType": "YulTypedName",
														"src": "1723:6:8",
														"type": ""
													}
												],
												"src": "1671:99:8"
											},
											{
												"body": {
													"nativeSrc": "1804:152:8",
													"nodeType": "YulBlock",
													"src": "1804:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1821:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1821:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1824:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1824:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:8"
																},
																"nativeSrc": "1814:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1814:88:8"
															},
															"nativeSrc": "1814:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1814:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1918:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1918:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1921:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1911:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:8"
																},
																"nativeSrc": "1911:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1911:15:8"
															},
															"nativeSrc": "1911:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1911:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1942:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1945:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1945:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:8"
																},
																"nativeSrc": "1935:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1935:15:8"
															},
															"nativeSrc": "1935:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1935:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1776:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1776:180:8"
											},
											{
												"body": {
													"nativeSrc": "1990:152:8",
													"nodeType": "YulBlock",
													"src": "1990:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2007:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2007:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2010:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2010:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2000:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:8"
																},
																"nativeSrc": "2000:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2000:88:8"
															},
															"nativeSrc": "2000:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2000:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2107:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2107:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:8"
																},
																"nativeSrc": "2097:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2097:15:8"
															},
															"nativeSrc": "2097:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2097:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2128:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2131:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2131:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:8"
																},
																"nativeSrc": "2121:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2121:15:8"
															},
															"nativeSrc": "2121:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2121:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1962:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1962:180:8"
											},
											{
												"body": {
													"nativeSrc": "2199:269:8",
													"nodeType": "YulBlock",
													"src": "2199:269:8",
													"statements": [
														{
															"nativeSrc": "2209:22:8",
															"nodeType": "YulAssignment",
															"src": "2209:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2223:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2223:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2229:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2219:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:8"
																},
																"nativeSrc": "2219:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2219:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2209:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2209:6:8"
																}
															]
														},
														{
															"nativeSrc": "2240:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2240:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2244:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2244:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2317:51:8",
																"nodeType": "YulBlock",
																"src": "2317:51:8",
																"statements": [
																	{
																		"nativeSrc": "2331:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2331:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2345:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2345:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2353:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2353:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2341:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2341:3:8"
																			},
																			"nativeSrc": "2341:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2341:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2331:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2297:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2297:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2290:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:8"
																},
																"nativeSrc": "2290:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2290:26:8"
															},
															"nativeSrc": "2287:81:8",
															"nodeType": "YulIf",
															"src": "2287:81:8"
														},
														{
															"body": {
																"nativeSrc": "2420:42:8",
																"nodeType": "YulBlock",
																"src": "2420:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2434:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2434:16:8"
																			},
																			"nativeSrc": "2434:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2434:18:8"
																		},
																		"nativeSrc": "2434:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2384:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2384:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2407:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2407:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2415:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2415:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2404:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2404:2:8"
																		},
																		"nativeSrc": "2404:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2381:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2381:2:8"
																},
																"nativeSrc": "2381:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2381:38:8"
															},
															"nativeSrc": "2378:84:8",
															"nodeType": "YulIf",
															"src": "2378:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2148:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2183:4:8",
														"nodeType": "YulTypedName",
														"src": "2183:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2192:6:8",
														"nodeType": "YulTypedName",
														"src": "2192:6:8",
														"type": ""
													}
												],
												"src": "2148:320:8"
											},
											{
												"body": {
													"nativeSrc": "2528:87:8",
													"nodeType": "YulBlock",
													"src": "2528:87:8",
													"statements": [
														{
															"nativeSrc": "2538:11:8",
															"nodeType": "YulAssignment",
															"src": "2538:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2546:3:8",
																"nodeType": "YulIdentifier",
																"src": "2546:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2538:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2538:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2569:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2569:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2559:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:8"
																},
																"nativeSrc": "2559:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2559:14:8"
															},
															"nativeSrc": "2559:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2559:14:8"
														},
														{
															"nativeSrc": "2582:26:8",
															"nodeType": "YulAssignment",
															"src": "2582:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2600:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2600:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2603:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2603:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2590:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2590:9:8"
																},
																"nativeSrc": "2590:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2590:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2582:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2582:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2474:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2515:3:8",
														"nodeType": "YulTypedName",
														"src": "2515:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2523:4:8",
														"nodeType": "YulTypedName",
														"src": "2523:4:8",
														"type": ""
													}
												],
												"src": "2474:141:8"
											},
											{
												"body": {
													"nativeSrc": "2665:49:8",
													"nodeType": "YulBlock",
													"src": "2665:49:8",
													"statements": [
														{
															"nativeSrc": "2675:33:8",
															"nodeType": "YulAssignment",
															"src": "2675:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2693:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2693:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2689:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:8"
																		},
																		"nativeSrc": "2689:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2689:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2705:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2705:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2685:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:8"
																},
																"nativeSrc": "2685:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2685:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2675:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2621:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2648:5:8",
														"nodeType": "YulTypedName",
														"src": "2648:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2658:6:8",
														"nodeType": "YulTypedName",
														"src": "2658:6:8",
														"type": ""
													}
												],
												"src": "2621:93:8"
											},
											{
												"body": {
													"nativeSrc": "2773:54:8",
													"nodeType": "YulBlock",
													"src": "2773:54:8",
													"statements": [
														{
															"nativeSrc": "2783:37:8",
															"nodeType": "YulAssignment",
															"src": "2783:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2808:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2808:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2814:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2814:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:8"
																},
																"nativeSrc": "2804:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2804:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2783:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2783:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2720:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2748:4:8",
														"nodeType": "YulTypedName",
														"src": "2748:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2754:5:8",
														"nodeType": "YulTypedName",
														"src": "2754:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2764:8:8",
														"nodeType": "YulTypedName",
														"src": "2764:8:8",
														"type": ""
													}
												],
												"src": "2720:107:8"
											},
											{
												"body": {
													"nativeSrc": "2909:317:8",
													"nodeType": "YulBlock",
													"src": "2909:317:8",
													"statements": [
														{
															"nativeSrc": "2919:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2919:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2940:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2940:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2952:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2952:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2936:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2936:3:8"
																},
																"nativeSrc": "2936:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2936:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2923:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2923:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2963:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2963:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2994:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2994:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3005:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3005:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2975:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:18:8"
																},
																"nativeSrc": "2975:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2967:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2967:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3081:51:8",
															"nodeType": "YulAssignment",
															"src": "3081:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3112:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3112:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3123:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3123:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3093:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3093:18:8"
																},
																"nativeSrc": "3093:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3093:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3081:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3081:8:8"
																}
															]
														},
														{
															"nativeSrc": "3141:30:8",
															"nodeType": "YulAssignment",
															"src": "3141:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3154:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3154:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3165:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3165:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3161:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:8"
																		},
																		"nativeSrc": "3161:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3150:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3150:3:8"
																},
																"nativeSrc": "3150:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3150:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3141:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3141:5:8"
																}
															]
														},
														{
															"nativeSrc": "3180:40:8",
															"nodeType": "YulAssignment",
															"src": "3180:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3193:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3204:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3204:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3214:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3200:3:8"
																		},
																		"nativeSrc": "3200:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3200:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:8"
																},
																"nativeSrc": "3190:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3190:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3180:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2833:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2870:5:8",
														"nodeType": "YulTypedName",
														"src": "2870:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2877:10:8",
														"nodeType": "YulTypedName",
														"src": "2877:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2889:8:8",
														"nodeType": "YulTypedName",
														"src": "2889:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2902:6:8",
														"nodeType": "YulTypedName",
														"src": "2902:6:8",
														"type": ""
													}
												],
												"src": "2833:393:8"
											},
											{
												"body": {
													"nativeSrc": "3277:32:8",
													"nodeType": "YulBlock",
													"src": "3277:32:8",
													"statements": [
														{
															"nativeSrc": "3287:16:8",
															"nodeType": "YulAssignment",
															"src": "3287:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "3298:5:8",
																"nodeType": "YulIdentifier",
																"src": "3298:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3287:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3287:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3232:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3259:5:8",
														"nodeType": "YulTypedName",
														"src": "3259:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3269:7:8",
														"nodeType": "YulTypedName",
														"src": "3269:7:8",
														"type": ""
													}
												],
												"src": "3232:77:8"
											},
											{
												"body": {
													"nativeSrc": "3347:28:8",
													"nodeType": "YulBlock",
													"src": "3347:28:8",
													"statements": [
														{
															"nativeSrc": "3357:12:8",
															"nodeType": "YulAssignment",
															"src": "3357:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3364:5:8",
																"nodeType": "YulIdentifier",
																"src": "3364:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3357:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3315:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3333:5:8",
														"nodeType": "YulTypedName",
														"src": "3333:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3343:3:8",
														"nodeType": "YulTypedName",
														"src": "3343:3:8",
														"type": ""
													}
												],
												"src": "3315:60:8"
											},
											{
												"body": {
													"nativeSrc": "3441:82:8",
													"nodeType": "YulBlock",
													"src": "3441:82:8",
													"statements": [
														{
															"nativeSrc": "3451:66:8",
															"nodeType": "YulAssignment",
															"src": "3451:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3509:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3509:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3491:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3491:17:8"
																				},
																				"nativeSrc": "3491:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3491:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3482:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3482:8:8"
																		},
																		"nativeSrc": "3482:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3482:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3464:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3464:17:8"
																},
																"nativeSrc": "3464:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3464:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3451:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3451:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3381:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3421:5:8",
														"nodeType": "YulTypedName",
														"src": "3421:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3431:9:8",
														"nodeType": "YulTypedName",
														"src": "3431:9:8",
														"type": ""
													}
												],
												"src": "3381:142:8"
											},
											{
												"body": {
													"nativeSrc": "3576:28:8",
													"nodeType": "YulBlock",
													"src": "3576:28:8",
													"statements": [
														{
															"nativeSrc": "3586:12:8",
															"nodeType": "YulAssignment",
															"src": "3586:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3593:5:8",
																"nodeType": "YulIdentifier",
																"src": "3593:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3586:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3586:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3529:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3562:5:8",
														"nodeType": "YulTypedName",
														"src": "3562:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3572:3:8",
														"nodeType": "YulTypedName",
														"src": "3572:3:8",
														"type": ""
													}
												],
												"src": "3529:75:8"
											},
											{
												"body": {
													"nativeSrc": "3686:193:8",
													"nodeType": "YulBlock",
													"src": "3686:193:8",
													"statements": [
														{
															"nativeSrc": "3696:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3696:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3751:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3751:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3720:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3720:30:8"
																},
																"nativeSrc": "3720:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3720:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3700:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3700:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3775:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3775:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3815:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3815:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3809:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3809:5:8"
																				},
																				"nativeSrc": "3809:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3809:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3822:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3822:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3854:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3854:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3830:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3830:23:8"
																				},
																				"nativeSrc": "3830:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3830:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3781:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3781:27:8"
																		},
																		"nativeSrc": "3781:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3768:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:8"
																},
																"nativeSrc": "3768:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3768:105:8"
															},
															"nativeSrc": "3768:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3768:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3610:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3663:4:8",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3669:6:8",
														"nodeType": "YulTypedName",
														"src": "3669:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3677:7:8",
														"nodeType": "YulTypedName",
														"src": "3677:7:8",
														"type": ""
													}
												],
												"src": "3610:269:8"
											},
											{
												"body": {
													"nativeSrc": "3934:24:8",
													"nodeType": "YulBlock",
													"src": "3934:24:8",
													"statements": [
														{
															"nativeSrc": "3944:8:8",
															"nodeType": "YulAssignment",
															"src": "3944:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3951:1:8",
																"nodeType": "YulLiteral",
																"src": "3951:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3944:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3885:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3930:3:8",
														"nodeType": "YulTypedName",
														"src": "3930:3:8",
														"type": ""
													}
												],
												"src": "3885:73:8"
											},
											{
												"body": {
													"nativeSrc": "4017:136:8",
													"nodeType": "YulBlock",
													"src": "4017:136:8",
													"statements": [
														{
															"nativeSrc": "4027:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4027:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4041:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:30:8"
																},
																"nativeSrc": "4041:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4031:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4031:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4126:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4126:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4132:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4132:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4140:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4082:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4082:43:8"
																},
																"nativeSrc": "4082:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4082:65:8"
															},
															"nativeSrc": "4082:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4082:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3964:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4003:4:8",
														"nodeType": "YulTypedName",
														"src": "4003:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4009:6:8",
														"nodeType": "YulTypedName",
														"src": "4009:6:8",
														"type": ""
													}
												],
												"src": "3964:189:8"
											},
											{
												"body": {
													"nativeSrc": "4209:136:8",
													"nodeType": "YulBlock",
													"src": "4209:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4276:63:8",
																"nodeType": "YulBlock",
																"src": "4276:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4320:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4320:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4327:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4327:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4290:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4290:29:8"
																			},
																			"nativeSrc": "4290:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4290:39:8"
																		},
																		"nativeSrc": "4290:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4290:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4229:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4229:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4236:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4226:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4226:2:8"
																},
																"nativeSrc": "4226:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4226:14:8"
															},
															"nativeSrc": "4219:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4241:26:8",
																"nodeType": "YulBlock",
																"src": "4241:26:8",
																"statements": [
																	{
																		"nativeSrc": "4243:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4243:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4256:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4256:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4263:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4263:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4252:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4252:3:8"
																			},
																			"nativeSrc": "4252:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4252:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4243:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4243:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4223:2:8",
																"nodeType": "YulBlock",
																"src": "4223:2:8",
																"statements": []
															},
															"src": "4219:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4159:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4197:5:8",
														"nodeType": "YulTypedName",
														"src": "4197:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4204:3:8",
														"nodeType": "YulTypedName",
														"src": "4204:3:8",
														"type": ""
													}
												],
												"src": "4159:186:8"
											},
											{
												"body": {
													"nativeSrc": "4430:464:8",
													"nodeType": "YulBlock",
													"src": "4430:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4456:431:8",
																"nodeType": "YulBlock",
																"src": "4456:431:8",
																"statements": [
																	{
																		"nativeSrc": "4470:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4470:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4518:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4518:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4486:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4486:31:8"
																			},
																			"nativeSrc": "4486:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4486:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4474:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4474:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4537:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4537:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4560:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4560:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4588:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4588:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4570:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4570:17:8"
																					},
																					"nativeSrc": "4570:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4570:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4556:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4556:3:8"
																			},
																			"nativeSrc": "4556:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4556:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4541:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4541:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4757:27:8",
																			"nodeType": "YulBlock",
																			"src": "4757:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4759:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4759:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4774:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4774:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4759:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4759:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4741:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4741:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4753:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4753:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4738:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4738:2:8"
																			},
																			"nativeSrc": "4738:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4738:18:8"
																		},
																		"nativeSrc": "4735:49:8",
																		"nodeType": "YulIf",
																		"src": "4735:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4826:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4826:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4843:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4843:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4871:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4871:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4853:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4853:17:8"
																							},
																							"nativeSrc": "4853:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4853:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4839:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4839:3:8"
																					},
																					"nativeSrc": "4839:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4839:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4797:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4797:28:8"
																			},
																			"nativeSrc": "4797:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4797:80:8"
																		},
																		"nativeSrc": "4797:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4797:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4447:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4447:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4452:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4452:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4444:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4444:2:8"
																},
																"nativeSrc": "4444:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4444:11:8"
															},
															"nativeSrc": "4441:446:8",
															"nodeType": "YulIf",
															"src": "4441:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4351:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4406:5:8",
														"nodeType": "YulTypedName",
														"src": "4406:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4413:3:8",
														"nodeType": "YulTypedName",
														"src": "4413:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4418:10:8",
														"nodeType": "YulTypedName",
														"src": "4418:10:8",
														"type": ""
													}
												],
												"src": "4351:543:8"
											},
											{
												"body": {
													"nativeSrc": "4963:54:8",
													"nodeType": "YulBlock",
													"src": "4963:54:8",
													"statements": [
														{
															"nativeSrc": "4973:37:8",
															"nodeType": "YulAssignment",
															"src": "4973:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4998:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4998:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5004:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5004:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4994:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:8"
																},
																"nativeSrc": "4994:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4994:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4973:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4900:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4938:4:8",
														"nodeType": "YulTypedName",
														"src": "4938:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4944:5:8",
														"nodeType": "YulTypedName",
														"src": "4944:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4954:8:8",
														"nodeType": "YulTypedName",
														"src": "4954:8:8",
														"type": ""
													}
												],
												"src": "4900:117:8"
											},
											{
												"body": {
													"nativeSrc": "5074:118:8",
													"nodeType": "YulBlock",
													"src": "5074:118:8",
													"statements": [
														{
															"nativeSrc": "5084:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5084:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5133:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5133:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5136:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5136:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5129:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5129:3:8"
																				},
																				"nativeSrc": "5129:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5129:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5148:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5148:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5144:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5144:3:8"
																				},
																				"nativeSrc": "5144:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5144:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5100:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5100:28:8"
																		},
																		"nativeSrc": "5100:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5096:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:8"
																},
																"nativeSrc": "5096:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5096:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5088:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5088:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5161:25:8",
															"nodeType": "YulAssignment",
															"src": "5161:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5175:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5175:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5181:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5181:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5171:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:8"
																},
																"nativeSrc": "5171:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5171:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5023:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5051:4:8",
														"nodeType": "YulTypedName",
														"src": "5051:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5057:5:8",
														"nodeType": "YulTypedName",
														"src": "5057:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5067:6:8",
														"nodeType": "YulTypedName",
														"src": "5067:6:8",
														"type": ""
													}
												],
												"src": "5023:169:8"
											},
											{
												"body": {
													"nativeSrc": "5278:214:8",
													"nodeType": "YulBlock",
													"src": "5278:214:8",
													"statements": [
														{
															"nativeSrc": "5411:37:8",
															"nodeType": "YulAssignment",
															"src": "5411:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5438:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5438:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5444:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5444:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5419:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5419:18:8"
																},
																"nativeSrc": "5419:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5419:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5411:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5411:4:8"
																}
															]
														},
														{
															"nativeSrc": "5457:29:8",
															"nodeType": "YulAssignment",
															"src": "5457:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5468:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5468:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5478:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5478:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5481:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5481:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:8"
																		},
																		"nativeSrc": "5474:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5474:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5465:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5465:2:8"
																},
																"nativeSrc": "5465:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5465:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5457:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5457:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5197:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5259:4:8",
														"nodeType": "YulTypedName",
														"src": "5259:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5265:3:8",
														"nodeType": "YulTypedName",
														"src": "5265:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5273:4:8",
														"nodeType": "YulTypedName",
														"src": "5273:4:8",
														"type": ""
													}
												],
												"src": "5197:295:8"
											},
											{
												"body": {
													"nativeSrc": "5589:1303:8",
													"nodeType": "YulBlock",
													"src": "5589:1303:8",
													"statements": [
														{
															"nativeSrc": "5600:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5600:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5647:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5647:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5614:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5614:32:8"
																},
																"nativeSrc": "5614:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5614:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5604:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5604:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5736:22:8",
																"nodeType": "YulBlock",
																"src": "5736:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5738:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5738:16:8"
																			},
																			"nativeSrc": "5738:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5738:18:8"
																		},
																		"nativeSrc": "5738:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5738:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5708:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5716:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5716:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5705:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5705:2:8"
																},
																"nativeSrc": "5705:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5705:30:8"
															},
															"nativeSrc": "5702:56:8",
															"nodeType": "YulIf",
															"src": "5702:56:8"
														},
														{
															"nativeSrc": "5768:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5768:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5814:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5814:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5808:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5808:5:8"
																		},
																		"nativeSrc": "5808:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5808:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5782:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5782:25:8"
																},
																"nativeSrc": "5782:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5782:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5772:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5772:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5913:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5913:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5919:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5919:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5927:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5927:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5867:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5867:45:8"
																},
																"nativeSrc": "5867:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5867:67:8"
															},
															"nativeSrc": "5867:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5867:67:8"
														},
														{
															"nativeSrc": "5944:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5944:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5961:1:8",
																"nodeType": "YulLiteral",
																"src": "5961:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5948:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5948:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5972:17:8",
															"nodeType": "YulAssignment",
															"src": "5972:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5985:4:8",
																"nodeType": "YulLiteral",
																"src": "5985:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5972:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5972:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6036:611:8",
																		"nodeType": "YulBlock",
																		"src": "6036:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6050:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6050:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6069:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6069:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6081:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6081:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6077:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6077:3:8"
																							},
																							"nativeSrc": "6077:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6077:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6065:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6065:3:8"
																					},
																					"nativeSrc": "6065:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6065:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6054:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6054:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6101:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6101:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6147:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6147:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6115:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6115:31:8"
																					},
																					"nativeSrc": "6115:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6115:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6105:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6105:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6165:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6165:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6169:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6169:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6233:163:8",
																					"nodeType": "YulBlock",
																					"src": "6233:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6258:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6258:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6276:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6276:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6281:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6281:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6272:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6272:3:8"
																												},
																												"nativeSrc": "6272:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6272:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6266:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6266:5:8"
																										},
																										"nativeSrc": "6266:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6266:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6251:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6251:6:8"
																								},
																								"nativeSrc": "6251:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6251:42:8"
																							},
																							"nativeSrc": "6251:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6251:42:8"
																						},
																						{
																							"nativeSrc": "6310:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6310:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6324:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6324:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6332:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6332:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6320:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6320:3:8"
																								},
																								"nativeSrc": "6320:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6320:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6310:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6310:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6351:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6351:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6368:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6368:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6379:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6379:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6364:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6364:3:8"
																								},
																								"nativeSrc": "6364:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6364:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6351:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6351:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6199:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6199:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6202:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6202:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6196:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6196:2:8"
																					},
																					"nativeSrc": "6196:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6196:14:8"
																				},
																				"nativeSrc": "6188:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6211:21:8",
																					"nodeType": "YulBlock",
																					"src": "6211:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6213:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6213:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6222:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6225:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6225:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6218:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6218:3:8"
																								},
																								"nativeSrc": "6218:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6218:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6213:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6213:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6192:3:8",
																					"nodeType": "YulBlock",
																					"src": "6192:3:8",
																					"statements": []
																				},
																				"src": "6188:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6432:156:8",
																					"nodeType": "YulBlock",
																					"src": "6432:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6450:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6450:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6477:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6477:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6482:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6482:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6473:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6473:3:8"
																										},
																										"nativeSrc": "6473:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6473:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6467:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6467:5:8"
																								},
																								"nativeSrc": "6467:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6467:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6454:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6454:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6517:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6517:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6544:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6544:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6559:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6559:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6567:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6567:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6555:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6555:3:8"
																												},
																												"nativeSrc": "6555:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6555:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6525:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6525:18:8"
																										},
																										"nativeSrc": "6525:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6525:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6510:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6510:6:8"
																								},
																								"nativeSrc": "6510:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6510:64:8"
																							},
																							"nativeSrc": "6510:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6510:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6415:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6415:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6424:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6424:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6412:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6412:2:8"
																					},
																					"nativeSrc": "6412:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6412:19:8"
																				},
																				"nativeSrc": "6409:179:8",
																				"nodeType": "YulIf",
																				"src": "6409:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6608:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6608:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6622:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6622:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6630:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6630:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6618:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6618:3:8"
																									},
																									"nativeSrc": "6618:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6618:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6634:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6634:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6614:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6614:3:8"
																							},
																							"nativeSrc": "6614:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6614:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6601:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6601:6:8"
																					},
																					"nativeSrc": "6601:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6601:36:8"
																				},
																				"nativeSrc": "6601:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6601:36:8"
																			}
																		]
																	},
																	"nativeSrc": "6029:618:8",
																	"nodeType": "YulCase",
																	"src": "6029:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6034:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6034:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6664:222:8",
																		"nodeType": "YulBlock",
																		"src": "6664:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6678:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6678:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6691:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6682:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6682:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6715:67:8",
																					"nodeType": "YulBlock",
																					"src": "6715:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6733:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6733:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6752:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6752:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6757:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6757:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6748:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6748:3:8"
																										},
																										"nativeSrc": "6748:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6748:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6742:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6742:5:8"
																								},
																								"nativeSrc": "6742:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6742:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6733:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6733:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6708:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6708:6:8"
																				},
																				"nativeSrc": "6705:77:8",
																				"nodeType": "YulIf",
																				"src": "6705:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6802:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6802:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6861:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6861:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6868:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6868:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6808:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6808:52:8"
																							},
																							"nativeSrc": "6808:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6808:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6795:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:8"
																					},
																					"nativeSrc": "6795:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6795:81:8"
																				},
																				"nativeSrc": "6795:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6795:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6656:230:8",
																	"nodeType": "YulCase",
																	"src": "6656:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6009:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6009:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6017:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6017:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6006:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6006:2:8"
																},
																"nativeSrc": "6006:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6006:14:8"
															},
															"nativeSrc": "5999:887:8",
															"nodeType": "YulSwitch",
															"src": "5999:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5497:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5578:4:8",
														"nodeType": "YulTypedName",
														"src": "5578:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5584:3:8",
														"nodeType": "YulTypedName",
														"src": "5584:3:8",
														"type": ""
													}
												],
												"src": "5497:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6963:53:8",
													"nodeType": "YulBlock",
													"src": "6963:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6980:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6980:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7003:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7003:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6985:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6985:17:8"
																		},
																		"nativeSrc": "6985:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6973:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:8"
																},
																"nativeSrc": "6973:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6973:37:8"
															},
															"nativeSrc": "6973:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6973:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6898:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6951:5:8",
														"nodeType": "YulTypedName",
														"src": "6951:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6958:3:8",
														"nodeType": "YulTypedName",
														"src": "6958:3:8",
														"type": ""
													}
												],
												"src": "6898:118:8"
											},
											{
												"body": {
													"nativeSrc": "7120:124:8",
													"nodeType": "YulBlock",
													"src": "7120:124:8",
													"statements": [
														{
															"nativeSrc": "7130:26:8",
															"nodeType": "YulAssignment",
															"src": "7130:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7142:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7153:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7153:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7138:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:8"
																},
																"nativeSrc": "7138:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7138:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7130:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7210:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7210:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7223:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7223:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7234:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7234:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7219:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7219:3:8"
																		},
																		"nativeSrc": "7219:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7219:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7166:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7166:43:8"
																},
																"nativeSrc": "7166:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7166:71:8"
															},
															"nativeSrc": "7166:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7166:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7022:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7092:9:8",
														"nodeType": "YulTypedName",
														"src": "7092:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7104:6:8",
														"nodeType": "YulTypedName",
														"src": "7104:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7115:4:8",
														"nodeType": "YulTypedName",
														"src": "7115:4:8",
														"type": ""
													}
												],
												"src": "7022:222:8"
											},
											{
												"body": {
													"nativeSrc": "7278:152:8",
													"nodeType": "YulBlock",
													"src": "7278:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7295:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7295:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7298:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7298:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7288:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7288:6:8"
																},
																"nativeSrc": "7288:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7288:88:8"
															},
															"nativeSrc": "7288:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7288:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7392:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7392:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7395:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7385:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7385:6:8"
																},
																"nativeSrc": "7385:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7385:15:8"
															},
															"nativeSrc": "7385:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7385:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7416:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7416:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7419:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7419:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7409:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:8"
																},
																"nativeSrc": "7409:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7409:15:8"
															},
															"nativeSrc": "7409:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7409:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7250:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7250:180:8"
											},
											{
												"body": {
													"nativeSrc": "7480:147:8",
													"nodeType": "YulBlock",
													"src": "7480:147:8",
													"statements": [
														{
															"nativeSrc": "7490:25:8",
															"nodeType": "YulAssignment",
															"src": "7490:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7513:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7513:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7495:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7495:17:8"
																},
																"nativeSrc": "7495:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7495:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7490:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7490:1:8"
																}
															]
														},
														{
															"nativeSrc": "7524:25:8",
															"nodeType": "YulAssignment",
															"src": "7524:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7547:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7547:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7529:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:17:8"
																},
																"nativeSrc": "7529:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7524:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7524:1:8"
																}
															]
														},
														{
															"nativeSrc": "7558:16:8",
															"nodeType": "YulAssignment",
															"src": "7558:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7569:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7569:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7572:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7572:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7565:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7565:3:8"
																},
																"nativeSrc": "7565:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7565:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7558:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7598:22:8",
																"nodeType": "YulBlock",
																"src": "7598:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7600:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7600:16:8"
																			},
																			"nativeSrc": "7600:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7600:18:8"
																		},
																		"nativeSrc": "7600:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7600:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7590:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7593:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7593:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7587:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7587:2:8"
																},
																"nativeSrc": "7587:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7587:10:8"
															},
															"nativeSrc": "7584:36:8",
															"nodeType": "YulIf",
															"src": "7584:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7436:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7467:1:8",
														"nodeType": "YulTypedName",
														"src": "7467:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7470:1:8",
														"nodeType": "YulTypedName",
														"src": "7470:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7476:3:8",
														"nodeType": "YulTypedName",
														"src": "7476:3:8",
														"type": ""
													}
												],
												"src": "7436:191:8"
											},
											{
												"body": {
													"nativeSrc": "7698:53:8",
													"nodeType": "YulBlock",
													"src": "7698:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7715:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7738:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7738:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7720:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7720:17:8"
																		},
																		"nativeSrc": "7720:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7720:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:8"
																},
																"nativeSrc": "7708:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7708:37:8"
															},
															"nativeSrc": "7708:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7708:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7633:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7686:5:8",
														"nodeType": "YulTypedName",
														"src": "7686:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7693:3:8",
														"nodeType": "YulTypedName",
														"src": "7693:3:8",
														"type": ""
													}
												],
												"src": "7633:118:8"
											},
											{
												"body": {
													"nativeSrc": "7911:288:8",
													"nodeType": "YulBlock",
													"src": "7911:288:8",
													"statements": [
														{
															"nativeSrc": "7921:26:8",
															"nodeType": "YulAssignment",
															"src": "7921:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7933:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7933:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7944:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7944:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7929:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:3:8"
																},
																"nativeSrc": "7929:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7921:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8001:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8001:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8014:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8014:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8025:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8025:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8010:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8010:3:8"
																		},
																		"nativeSrc": "8010:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8010:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7957:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7957:43:8"
																},
																"nativeSrc": "7957:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7957:71:8"
															},
															"nativeSrc": "7957:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7957:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8082:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8082:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8095:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8095:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8106:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8106:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8091:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8091:3:8"
																		},
																		"nativeSrc": "8091:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8091:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8038:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8038:43:8"
																},
																"nativeSrc": "8038:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8038:72:8"
															},
															"nativeSrc": "8038:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8038:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8164:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8164:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8177:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8188:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8188:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8173:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8173:3:8"
																		},
																		"nativeSrc": "8173:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8173:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8120:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8120:43:8"
																},
																"nativeSrc": "8120:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8120:72:8"
															},
															"nativeSrc": "8120:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8120:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7757:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7867:9:8",
														"nodeType": "YulTypedName",
														"src": "7867:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7879:6:8",
														"nodeType": "YulTypedName",
														"src": "7879:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7887:6:8",
														"nodeType": "YulTypedName",
														"src": "7887:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7895:6:8",
														"nodeType": "YulTypedName",
														"src": "7895:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7906:4:8",
														"nodeType": "YulTypedName",
														"src": "7906:4:8",
														"type": ""
													}
												],
												"src": "7757:442:8"
											},
											{
												"body": {
													"nativeSrc": "8303:124:8",
													"nodeType": "YulBlock",
													"src": "8303:124:8",
													"statements": [
														{
															"nativeSrc": "8313:26:8",
															"nodeType": "YulAssignment",
															"src": "8313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8321:3:8"
																},
																"nativeSrc": "8321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8402:3:8"
																		},
																		"nativeSrc": "8402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8349:43:8"
																},
																"nativeSrc": "8349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8349:71:8"
															},
															"nativeSrc": "8349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8275:9:8",
														"nodeType": "YulTypedName",
														"src": "8275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8287:6:8",
														"nodeType": "YulTypedName",
														"src": "8287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8298:4:8",
														"nodeType": "YulTypedName",
														"src": "8298:4:8",
														"type": ""
													}
												],
												"src": "8205:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2607 CODESIZE SUB DUP1 PUSH2 0x2607 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x680 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5845414D20546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5845414D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x2C1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x263 CALLER PUSH11 0x1A784379D99DB42000000 PUSH2 0x384 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x405 PUSH0 DUP4 DUP4 PUSH2 0x409 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x459 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x527 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5B8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64F DUP3 PUSH2 0x626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65F DUP2 PUSH2 0x645 JUMP JUMPDEST DUP2 EQ PUSH2 0x669 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x67A DUP2 PUSH2 0x656 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x698 JUMPI PUSH2 0x697 PUSH2 0x622 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A5 DUP8 DUP3 DUP9 ADD PUSH2 0x66C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6B6 DUP8 DUP3 DUP9 ADD PUSH2 0x66C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x6C7 DUP8 DUP3 DUP9 ADD PUSH2 0x66C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x6D8 DUP8 DUP3 DUP9 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x75F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x772 JUMPI PUSH2 0x771 PUSH2 0x71B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7D4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x7DE DUP7 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x822 PUSH2 0x81D PUSH2 0x818 DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83B DUP4 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x84F PUSH2 0x847 DUP3 PUSH2 0x829 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7A5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x863 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x86E DUP2 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x891 JUMPI PUSH2 0x886 PUSH0 DUP3 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x874 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8A7 DUP2 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x8B0 DUP5 PUSH2 0x78A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8D3 PUSH2 0x8CB DUP6 PUSH2 0x78A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x873 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x90E DUP4 DUP4 PUSH2 0x8E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x927 DUP3 PUSH2 0x6E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x93F PUSH2 0x6EE JUMP JUMPDEST JUMPDEST PUSH2 0x94A DUP3 SLOAD PUSH2 0x748 JUMP JUMPDEST PUSH2 0x955 DUP3 DUP3 DUP6 PUSH2 0x895 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x986 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x974 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x97E DUP6 DUP3 PUSH2 0x903 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x994 DUP7 PUSH2 0x778 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x996 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x645 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0F PUSH0 DUP4 ADD DUP5 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA4C DUP3 PUSH2 0x7F6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP4 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA6F JUMPI PUSH2 0xA6E PUSH2 0xA15 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7E DUP2 PUSH2 0x7F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA97 PUSH0 DUP4 ADD DUP7 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0xAA4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0xAB1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA75 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACC PUSH0 DUP4 ADD DUP5 PUSH2 0xA75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B28 DUP1 PUSH2 0xADF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x460 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x36B4134A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x2DA JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x202 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH2 0x639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x542 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x54F DUP2 DUP6 DUP6 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x56D PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x57A DUP6 DUP3 DUP6 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x585 DUP6 DUP6 DUP6 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x64A PUSH0 PUSH2 0xC1C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x654 PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x708 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x756 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x762 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x1 PUSH11 0x1A784379D99DB42000000 PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP3 PUSH2 0x7B8 DUP6 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST GT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x5 PUSH11 0x1A784379D99DB42000000 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x875 CALLER DUP5 DUP5 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x1 PUSH11 0x1A784379D99DB42000000 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x955 PUSH2 0xB95 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CE DUP2 PUSH2 0xC1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x5 PUSH11 0x1A784379D99DB42000000 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA0D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP5 DUP5 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA9F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA90 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB90 DUP4 DUP4 DUP4 PUSH2 0x1137 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x9F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB PUSH2 0x6D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1A JUMPI PUSH2 0xBDE PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xC DUP4 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP PUSH2 0xD4E DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x4 DUP7 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x4 DUP5 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xDE1 DUP6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x1 DUP7 PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x1 DUP5 PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE1B SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE74 DUP6 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x4 DUP7 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x4 DUP5 PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF07 DUP6 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x3 DUP7 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x3 DUP5 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4E SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF61 DUP6 DUP6 DUP4 PUSH2 0xAA5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1048 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1131 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1187 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1255 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1210 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1207 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1362 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137B PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13AA DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x13A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141B DUP3 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x1425 DUP2 DUP6 PUSH2 0x13E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1435 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1461 DUP2 DUP5 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x13A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1491 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14A0 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BB DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D7 JUMPI PUSH2 0x14D6 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E4 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152C PUSH0 DUP4 ADD DUP5 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1556 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1567 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1578 DUP7 DUP3 DUP8 ADD PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1597 DUP2 PUSH2 0x1582 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x158E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1605 DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165F JUMPI PUSH2 0x165E PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166C DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1687 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1734 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x174B JUMPI PUSH2 0x174A PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1789 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1752 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C4 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1816 PUSH1 0x18 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1821 DUP3 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1843 DUP2 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187E PUSH1 0x1D DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1889 DUP3 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18AB DUP2 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18C5 PUSH0 DUP4 ADD DUP7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x18D2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x18DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F1 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FC DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E636F75726167656D656E742046756E640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194E PUSH1 0x12 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x191A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1977 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1988 DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D657267656E63792046756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C4 PUSH1 0xE DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CF DUP3 PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19FE DUP2 PUSH2 0x19B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574696E670000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A PUSH1 0x9 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A45 DUP3 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A63 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH1 0x7 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AEA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F MSTORE8 SWAP2 SELFBALANCE 0xD1 0xAA CHAINID SUB MUL 0x25 PUSH19 0x3A4071938A6C19322FD2FB02C721B1379CFF1 0xAC LT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "231:2591:7:-:0;;;920:483;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1163:18:7::2;1143:17;;:38;;;;;;;;;;;;;;;;;;1207:14;1191:13;;:30;;;;;;;;;;;;;;;;;;1249:16;1231:15;;:34;;;;;;;;;;;;;;;;;;1291:14;1275:13;;:30;;;;;;;;;;;;;;;;;;1316:33;1322:10;332:18;1316:5;;;:33;;:::i;:::-;1392:4;1359:18;:30;1378:10;1359:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;920:483:::0;;;;231:2591;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:820::-;942:6;950;958;966;1015:3;1003:9;994:7;990:23;986:33;983:120;;;1022:79;;:::i;:::-;983:120;1142:1;1167:64;1223:7;1214:6;1203:9;1199:22;1167:64;:::i;:::-;1157:74;;1113:128;1280:2;1306:64;1362:7;1353:6;1342:9;1338:22;1306:64;:::i;:::-;1296:74;;1251:129;1419:2;1445:64;1501:7;1492:6;1481:9;1477:22;1445:64;:::i;:::-;1435:74;;1390:129;1558:2;1584:64;1640:7;1631:6;1620:9;1616:22;1584:64;:::i;:::-;1574:74;;1529:129;845:820;;;;;;;:::o;1671:99::-;1723:6;1757:5;1751:12;1741:22;;1671:99;;;:::o;1776:180::-;1824:77;1821:1;1814:88;1921:4;1918:1;1911:15;1945:4;1942:1;1935:15;1962:180;2010:77;2007:1;2000:88;2107:4;2104:1;2097:15;2131:4;2128:1;2121:15;2148:320;2192:6;2229:1;2223:4;2219:12;2209:22;;2276:1;2270:4;2266:12;2297:18;2287:81;;2353:4;2345:6;2341:17;2331:27;;2287:81;2415:2;2407:6;2404:14;2384:18;2381:38;2378:84;;2434:18;;:::i;:::-;2378:84;2199:269;2148:320;;;:::o;2474:141::-;2523:4;2546:3;2538:11;;2569:3;2566:1;2559:14;2603:4;2600:1;2590:18;2582:26;;2474:141;;;:::o;2621:93::-;2658:6;2705:2;2700;2693:5;2689:14;2685:23;2675:33;;2621:93;;;:::o;2720:107::-;2764:8;2814:5;2808:4;2804:16;2783:37;;2720:107;;;;:::o;2833:393::-;2902:6;2952:1;2940:10;2936:18;2975:97;3005:66;2994:9;2975:97;:::i;:::-;3093:39;3123:8;3112:9;3093:39;:::i;:::-;3081:51;;3165:4;3161:9;3154:5;3150:21;3141:30;;3214:4;3204:8;3200:19;3193:5;3190:30;3180:40;;2909:317;;2833:393;;;;;:::o;3232:77::-;3269:7;3298:5;3287:16;;3232:77;;;:::o;3315:60::-;3343:3;3364:5;3357:12;;3315:60;;;:::o;3381:142::-;3431:9;3464:53;3482:34;3491:24;3509:5;3491:24;:::i;:::-;3482:34;:::i;:::-;3464:53;:::i;:::-;3451:66;;3381:142;;;:::o;3529:75::-;3572:3;3593:5;3586:12;;3529:75;;;:::o;3610:269::-;3720:39;3751:7;3720:39;:::i;:::-;3781:91;3830:41;3854:16;3830:41;:::i;:::-;3822:6;3815:4;3809:11;3781:91;:::i;:::-;3775:4;3768:105;3686:193;3610:269;;;:::o;3885:73::-;3930:3;3885:73;:::o;3964:189::-;4041:32;;:::i;:::-;4082:65;4140:6;4132;4126:4;4082:65;:::i;:::-;4017:136;3964:189;;:::o;4159:186::-;4219:120;4236:3;4229:5;4226:14;4219:120;;;4290:39;4327:1;4320:5;4290:39;:::i;:::-;4263:1;4256:5;4252:13;4243:22;;4219:120;;;4159:186;;:::o;4351:543::-;4452:2;4447:3;4444:11;4441:446;;;4486:38;4518:5;4486:38;:::i;:::-;4570:29;4588:10;4570:29;:::i;:::-;4560:8;4556:44;4753:2;4741:10;4738:18;4735:49;;;4774:8;4759:23;;4735:49;4797:80;4853:22;4871:3;4853:22;:::i;:::-;4843:8;4839:37;4826:11;4797:80;:::i;:::-;4456:431;;4441:446;4351:543;;;:::o;4900:117::-;4954:8;5004:5;4998:4;4994:16;4973:37;;4900:117;;;;:::o;5023:169::-;5067:6;5100:51;5148:1;5144:6;5136:5;5133:1;5129:13;5100:51;:::i;:::-;5096:56;5181:4;5175;5171:15;5161:25;;5074:118;5023:169;;;;:::o;5197:295::-;5273:4;5419:29;5444:3;5438:4;5419:29;:::i;:::-;5411:37;;5481:3;5478:1;5474:11;5468:4;5465:21;5457:29;;5197:295;;;;:::o;5497:1395::-;5614:37;5647:3;5614:37;:::i;:::-;5716:18;5708:6;5705:30;5702:56;;;5738:18;;:::i;:::-;5702:56;5782:38;5814:4;5808:11;5782:38;:::i;:::-;5867:67;5927:6;5919;5913:4;5867:67;:::i;:::-;5961:1;5985:4;5972:17;;6017:2;6009:6;6006:14;6034:1;6029:618;;;;6691:1;6708:6;6705:77;;;6757:9;6752:3;6748:19;6742:26;6733:35;;6705:77;6808:67;6868:6;6861:5;6808:67;:::i;:::-;6802:4;6795:81;6664:222;5999:887;;6029:618;6081:4;6077:9;6069:6;6065:22;6115:37;6147:4;6115:37;:::i;:::-;6174:1;6188:208;6202:7;6199:1;6196:14;6188:208;;;6281:9;6276:3;6272:19;6266:26;6258:6;6251:42;6332:1;6324:6;6320:14;6310:24;;6379:2;6368:9;6364:18;6351:31;;6225:4;6222:1;6218:12;6213:17;;6188:208;;;6424:6;6415:7;6412:19;6409:179;;;6482:9;6477:3;6473:19;6467:26;6525:48;6567:4;6559:6;6555:17;6544:9;6525:48;:::i;:::-;6517:6;6510:64;6432:156;6409:179;6634:1;6630;6622:6;6618:14;6614:22;6608:4;6601:36;6036:611;;;5999:887;;5589:1303;;;5497:1395;;:::o;6898:118::-;6985:24;7003:5;6985:24;:::i;:::-;6980:3;6973:37;6898:118;;:::o;7022:222::-;7115:4;7153:2;7142:9;7138:18;7130:26;;7166:71;7234:1;7223:9;7219:17;7210:6;7166:71;:::i;:::-;7022:222;;;;:::o;7250:180::-;7298:77;7295:1;7288:88;7395:4;7392:1;7385:15;7419:4;7416:1;7409:15;7436:191;7476:3;7495:20;7513:1;7495:20;:::i;:::-;7490:25;;7529:20;7547:1;7529:20;:::i;:::-;7524:25;;7572:1;7569;7565:9;7558:16;;7593:3;7590:1;7587:10;7584:36;;;7600:18;;:::i;:::-;7584:36;7436:191;;;;:::o;7633:118::-;7720:24;7738:5;7720:24;:::i;:::-;7715:3;7708:37;7633:118;;:::o;7757:442::-;7906:4;7944:2;7933:9;7929:18;7921:26;;7957:71;8025:1;8014:9;8010:17;8001:6;7957:71;:::i;:::-;8038:72;8106:2;8095:9;8091:18;8082:6;8038:72;:::i;:::-;8120;8188:2;8177:9;8173:18;8164:6;8120:72;:::i;:::-;7757:442;;;;;;:::o;8205:222::-;8298:4;8336:2;8325:9;8321:18;8313:26;;8349:71;8417:1;8406:9;8402:17;8393:6;8349:71;:::i;:::-;8205:222;;;;:::o;231:2591:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUY_TAX_1043": {
									"entryPoint": 1150,
									"id": 1043,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_1016": {
									"entryPoint": 1425,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TX_1032": {
									"entryPoint": 2513,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_WALLET_1024": {
									"entryPoint": 2342,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SELL_TAX_1046": {
									"entryPoint": 1519,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SLIPPAGE_1049": {
									"entryPoint": 1448,
									"id": 1049,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 2560,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 3944,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2965,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 2553,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_863": {
									"entryPoint": 2578,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3100,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferWithTaxes_1271": {
									"entryPoint": 3295,
									"id": 1271,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 2725,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 4407,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 2212,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1336,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 1524,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 1440,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyFund_1036": {
									"entryPoint": 2175,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@encouragementFund_1034": {
									"entryPoint": 1482,
									"id": 1034,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFees_1053": {
									"entryPoint": 1453,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1038": {
									"entryPoint": 1708,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1192,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1745,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1593,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingWallet_1040": {
									"entryPoint": 1155,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 1785,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1370,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 1379,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2381,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1146": {
									"entryPoint": 1929,
									"id": 1146,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateExcludedAccountStatus_1287": {
									"entryPoint": 1612,
									"id": 1287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be": {
									"entryPoint": 6114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15238:8",
										"nodeType": "YulBlock",
										"src": "0:15238:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "487:81:8",
													"nodeType": "YulBlock",
													"src": "487:81:8",
													"statements": [
														{
															"nativeSrc": "497:65:8",
															"nodeType": "YulAssignment",
															"src": "497:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:8",
																		"nodeType": "YulLiteral",
																		"src": "519:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:8"
																},
																"nativeSrc": "508:54:8",
																"nodeType": "YulFunctionCall",
																"src": "508:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:8",
														"nodeType": "YulTypedName",
														"src": "469:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:8",
														"nodeType": "YulTypedName",
														"src": "479:7:8",
														"type": ""
													}
												],
												"src": "442:126:8"
											},
											{
												"body": {
													"nativeSrc": "619:51:8",
													"nodeType": "YulBlock",
													"src": "619:51:8",
													"statements": [
														{
															"nativeSrc": "629:35:8",
															"nodeType": "YulAssignment",
															"src": "629:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:8"
																},
																"nativeSrc": "640:24:8",
																"nodeType": "YulFunctionCall",
																"src": "640:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:8",
														"nodeType": "YulTypedName",
														"src": "601:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:8",
														"nodeType": "YulTypedName",
														"src": "611:7:8",
														"type": ""
													}
												],
												"src": "574:96:8"
											},
											{
												"body": {
													"nativeSrc": "741:53:8",
													"nodeType": "YulBlock",
													"src": "741:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:8"
																		},
																		"nativeSrc": "763:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:8"
																},
																"nativeSrc": "751:37:8",
																"nodeType": "YulFunctionCall",
																"src": "751:37:8"
															},
															"nativeSrc": "751:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:8",
														"nodeType": "YulTypedName",
														"src": "729:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:8",
														"nodeType": "YulTypedName",
														"src": "736:3:8",
														"type": ""
													}
												],
												"src": "676:118:8"
											},
											{
												"body": {
													"nativeSrc": "898:124:8",
													"nodeType": "YulBlock",
													"src": "898:124:8",
													"statements": [
														{
															"nativeSrc": "908:26:8",
															"nodeType": "YulAssignment",
															"src": "908:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:8",
																		"nodeType": "YulLiteral",
																		"src": "931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:8"
																},
																"nativeSrc": "916:18:8",
																"nodeType": "YulFunctionCall",
																"src": "916:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:8"
																		},
																		"nativeSrc": "997:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:8"
																},
																"nativeSrc": "944:71:8",
																"nodeType": "YulFunctionCall",
																"src": "944:71:8"
															},
															"nativeSrc": "944:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:8",
														"nodeType": "YulTypedName",
														"src": "870:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:8",
														"nodeType": "YulTypedName",
														"src": "882:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:8",
														"nodeType": "YulTypedName",
														"src": "893:4:8",
														"type": ""
													}
												],
												"src": "800:222:8"
											},
											{
												"body": {
													"nativeSrc": "1087:40:8",
													"nodeType": "YulBlock",
													"src": "1087:40:8",
													"statements": [
														{
															"nativeSrc": "1098:22:8",
															"nodeType": "YulAssignment",
															"src": "1098:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1114:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1108:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1108:5:8"
																},
																"nativeSrc": "1108:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1108:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1028:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1070:5:8",
														"nodeType": "YulTypedName",
														"src": "1070:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1080:6:8",
														"nodeType": "YulTypedName",
														"src": "1080:6:8",
														"type": ""
													}
												],
												"src": "1028:99:8"
											},
											{
												"body": {
													"nativeSrc": "1229:73:8",
													"nodeType": "YulBlock",
													"src": "1229:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1246:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1246:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1251:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1251:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:8"
																},
																"nativeSrc": "1239:19:8",
																"nodeType": "YulFunctionCall",
																"src": "1239:19:8"
															},
															"nativeSrc": "1239:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "1239:19:8"
														},
														{
															"nativeSrc": "1267:29:8",
															"nodeType": "YulAssignment",
															"src": "1267:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1286:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1286:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1291:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1282:3:8"
																},
																"nativeSrc": "1282:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1282:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1267:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "1267:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1133:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1201:3:8",
														"nodeType": "YulTypedName",
														"src": "1201:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1206:6:8",
														"nodeType": "YulTypedName",
														"src": "1206:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1217:11:8",
														"nodeType": "YulTypedName",
														"src": "1217:11:8",
														"type": ""
													}
												],
												"src": "1133:169:8"
											},
											{
												"body": {
													"nativeSrc": "1370:77:8",
													"nodeType": "YulBlock",
													"src": "1370:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1387:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1387:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1392:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1392:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1397:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1397:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1381:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1381:5:8"
																},
																"nativeSrc": "1381:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1381:23:8"
															},
															"nativeSrc": "1381:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "1381:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1424:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1424:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1429:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1420:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:8"
																		},
																		"nativeSrc": "1420:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1438:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1438:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1413:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:8"
																},
																"nativeSrc": "1413:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1413:27:8"
															},
															"nativeSrc": "1413:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1413:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1308:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1352:3:8",
														"nodeType": "YulTypedName",
														"src": "1352:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1357:3:8",
														"nodeType": "YulTypedName",
														"src": "1357:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1362:6:8",
														"nodeType": "YulTypedName",
														"src": "1362:6:8",
														"type": ""
													}
												],
												"src": "1308:139:8"
											},
											{
												"body": {
													"nativeSrc": "1501:54:8",
													"nodeType": "YulBlock",
													"src": "1501:54:8",
													"statements": [
														{
															"nativeSrc": "1511:38:8",
															"nodeType": "YulAssignment",
															"src": "1511:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1529:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1529:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1536:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:8"
																		},
																		"nativeSrc": "1525:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1545:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1545:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:8"
																		},
																		"nativeSrc": "1541:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1521:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:8"
																},
																"nativeSrc": "1521:28:8",
																"nodeType": "YulFunctionCall",
																"src": "1521:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1511:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1453:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1484:5:8",
														"nodeType": "YulTypedName",
														"src": "1484:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1494:6:8",
														"nodeType": "YulTypedName",
														"src": "1494:6:8",
														"type": ""
													}
												],
												"src": "1453:102:8"
											},
											{
												"body": {
													"nativeSrc": "1653:285:8",
													"nodeType": "YulBlock",
													"src": "1653:285:8",
													"statements": [
														{
															"nativeSrc": "1663:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1663:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1710:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1710:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1677:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "1677:32:8"
																},
																"nativeSrc": "1677:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1677:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1667:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1667:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1725:78:8",
															"nodeType": "YulAssignment",
															"src": "1725:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1791:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1791:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1796:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1796:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1732:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "1732:58:8"
																},
																"nativeSrc": "1732:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1732:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1725:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1858:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1858:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1847:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1847:3:8"
																		},
																		"nativeSrc": "1847:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1847:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1865:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1865:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1870:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1812:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "1812:34:8"
																},
																"nativeSrc": "1812:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1812:65:8"
															},
															"nativeSrc": "1812:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1812:65:8"
														},
														{
															"nativeSrc": "1886:46:8",
															"nodeType": "YulAssignment",
															"src": "1886:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1897:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1924:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1902:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "1902:21:8"
																		},
																		"nativeSrc": "1902:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1902:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1893:3:8"
																},
																"nativeSrc": "1893:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1893:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1561:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1634:5:8",
														"nodeType": "YulTypedName",
														"src": "1634:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1641:3:8",
														"nodeType": "YulTypedName",
														"src": "1641:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1649:3:8",
														"nodeType": "YulTypedName",
														"src": "1649:3:8",
														"type": ""
													}
												],
												"src": "1561:377:8"
											},
											{
												"body": {
													"nativeSrc": "2062:195:8",
													"nodeType": "YulBlock",
													"src": "2062:195:8",
													"statements": [
														{
															"nativeSrc": "2072:26:8",
															"nodeType": "YulAssignment",
															"src": "2072:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2084:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2095:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2095:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2080:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:8"
																},
																"nativeSrc": "2080:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2080:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2072:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2072:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2119:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2119:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2130:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2130:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2115:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2115:3:8"
																		},
																		"nativeSrc": "2115:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2115:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2138:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2138:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2144:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2144:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2134:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2134:3:8"
																		},
																		"nativeSrc": "2134:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2134:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:8"
																},
																"nativeSrc": "2108:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2108:47:8"
															},
															"nativeSrc": "2108:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "2108:47:8"
														},
														{
															"nativeSrc": "2164:86:8",
															"nodeType": "YulAssignment",
															"src": "2164:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2236:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2236:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2245:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2245:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2172:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "2172:63:8"
																},
																"nativeSrc": "2172:78:8",
																"nodeType": "YulFunctionCall",
																"src": "2172:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1944:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2034:9:8",
														"nodeType": "YulTypedName",
														"src": "2034:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2046:6:8",
														"nodeType": "YulTypedName",
														"src": "2046:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2057:4:8",
														"nodeType": "YulTypedName",
														"src": "2057:4:8",
														"type": ""
													}
												],
												"src": "1944:313:8"
											},
											{
												"body": {
													"nativeSrc": "2303:35:8",
													"nodeType": "YulBlock",
													"src": "2303:35:8",
													"statements": [
														{
															"nativeSrc": "2313:19:8",
															"nodeType": "YulAssignment",
															"src": "2313:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2323:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2323:5:8"
																},
																"nativeSrc": "2323:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2323:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2263:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2296:6:8",
														"nodeType": "YulTypedName",
														"src": "2296:6:8",
														"type": ""
													}
												],
												"src": "2263:75:8"
											},
											{
												"body": {
													"nativeSrc": "2433:28:8",
													"nodeType": "YulBlock",
													"src": "2433:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2453:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:8"
																},
																"nativeSrc": "2443:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2443:12:8"
															},
															"nativeSrc": "2443:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2443:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2344:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2344:117:8"
											},
											{
												"body": {
													"nativeSrc": "2556:28:8",
													"nodeType": "YulBlock",
													"src": "2556:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2573:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2576:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2576:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2566:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:8"
																},
																"nativeSrc": "2566:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2566:12:8"
															},
															"nativeSrc": "2566:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2566:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2467:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2467:117:8"
											},
											{
												"body": {
													"nativeSrc": "2633:79:8",
													"nodeType": "YulBlock",
													"src": "2633:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2690:16:8",
																"nodeType": "YulBlock",
																"src": "2690:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2699:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2699:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2702:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2692:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2692:6:8"
																			},
																			"nativeSrc": "2692:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2692:12:8"
																		},
																		"nativeSrc": "2692:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2692:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2656:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2681:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2681:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2663:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2663:17:8"
																				},
																				"nativeSrc": "2663:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2663:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2653:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2653:2:8"
																		},
																		"nativeSrc": "2653:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2646:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:8"
																},
																"nativeSrc": "2646:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2646:43:8"
															},
															"nativeSrc": "2643:63:8",
															"nodeType": "YulIf",
															"src": "2643:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2590:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2626:5:8",
														"nodeType": "YulTypedName",
														"src": "2626:5:8",
														"type": ""
													}
												],
												"src": "2590:122:8"
											},
											{
												"body": {
													"nativeSrc": "2770:87:8",
													"nodeType": "YulBlock",
													"src": "2770:87:8",
													"statements": [
														{
															"nativeSrc": "2780:29:8",
															"nodeType": "YulAssignment",
															"src": "2780:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2802:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2802:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2789:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2789:12:8"
																},
																"nativeSrc": "2789:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2789:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2780:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2845:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2818:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2818:26:8"
																},
																"nativeSrc": "2818:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2818:33:8"
															},
															"nativeSrc": "2818:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2818:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2718:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2748:6:8",
														"nodeType": "YulTypedName",
														"src": "2748:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2756:3:8",
														"nodeType": "YulTypedName",
														"src": "2756:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2764:5:8",
														"nodeType": "YulTypedName",
														"src": "2764:5:8",
														"type": ""
													}
												],
												"src": "2718:139:8"
											},
											{
												"body": {
													"nativeSrc": "2906:79:8",
													"nodeType": "YulBlock",
													"src": "2906:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2963:16:8",
																"nodeType": "YulBlock",
																"src": "2963:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2972:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2975:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2965:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:8"
																			},
																			"nativeSrc": "2965:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2965:12:8"
																		},
																		"nativeSrc": "2965:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2929:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2929:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2954:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2954:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2936:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2936:17:8"
																				},
																				"nativeSrc": "2936:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2936:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2926:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2926:2:8"
																		},
																		"nativeSrc": "2926:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2926:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2919:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:8"
																},
																"nativeSrc": "2919:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2919:43:8"
															},
															"nativeSrc": "2916:63:8",
															"nodeType": "YulIf",
															"src": "2916:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2863:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2899:5:8",
														"nodeType": "YulTypedName",
														"src": "2899:5:8",
														"type": ""
													}
												],
												"src": "2863:122:8"
											},
											{
												"body": {
													"nativeSrc": "3043:87:8",
													"nodeType": "YulBlock",
													"src": "3043:87:8",
													"statements": [
														{
															"nativeSrc": "3053:29:8",
															"nodeType": "YulAssignment",
															"src": "3053:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3075:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3062:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3062:12:8"
																},
																"nativeSrc": "3062:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3062:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3053:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3053:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3118:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3118:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3091:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3091:26:8"
																},
																"nativeSrc": "3091:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3091:33:8"
															},
															"nativeSrc": "3091:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3091:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2991:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3021:6:8",
														"nodeType": "YulTypedName",
														"src": "3021:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3029:3:8",
														"nodeType": "YulTypedName",
														"src": "3029:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3037:5:8",
														"nodeType": "YulTypedName",
														"src": "3037:5:8",
														"type": ""
													}
												],
												"src": "2991:139:8"
											},
											{
												"body": {
													"nativeSrc": "3219:391:8",
													"nodeType": "YulBlock",
													"src": "3219:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3265:83:8",
																"nodeType": "YulBlock",
																"src": "3265:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3267:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3267:77:8"
																			},
																			"nativeSrc": "3267:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3267:79:8"
																		},
																		"nativeSrc": "3267:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3267:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3240:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3240:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3249:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3249:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3236:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:8"
																		},
																		"nativeSrc": "3236:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3261:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3232:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3232:3:8"
																},
																"nativeSrc": "3232:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3232:32:8"
															},
															"nativeSrc": "3229:119:8",
															"nodeType": "YulIf",
															"src": "3229:119:8"
														},
														{
															"nativeSrc": "3358:117:8",
															"nodeType": "YulBlock",
															"src": "3358:117:8",
															"statements": [
																{
																	"nativeSrc": "3373:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3373:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3387:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3387:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3377:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3377:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3402:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3402:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3437:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3437:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3448:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3448:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3433:3:8"
																				},
																				"nativeSrc": "3433:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3433:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3457:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3457:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3412:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3412:20:8"
																		},
																		"nativeSrc": "3412:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3412:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3402:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3402:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3485:118:8",
															"nodeType": "YulBlock",
															"src": "3485:118:8",
															"statements": [
																{
																	"nativeSrc": "3500:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3500:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3514:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3504:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3504:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3530:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3530:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3565:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3565:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3576:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3576:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3561:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3561:3:8"
																				},
																				"nativeSrc": "3561:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3561:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3585:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3585:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3540:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3540:20:8"
																		},
																		"nativeSrc": "3540:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3540:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3530:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3530:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3136:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3181:9:8",
														"nodeType": "YulTypedName",
														"src": "3181:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3192:7:8",
														"nodeType": "YulTypedName",
														"src": "3192:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3204:6:8",
														"nodeType": "YulTypedName",
														"src": "3204:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3212:6:8",
														"nodeType": "YulTypedName",
														"src": "3212:6:8",
														"type": ""
													}
												],
												"src": "3136:474:8"
											},
											{
												"body": {
													"nativeSrc": "3658:48:8",
													"nodeType": "YulBlock",
													"src": "3658:48:8",
													"statements": [
														{
															"nativeSrc": "3668:32:8",
															"nodeType": "YulAssignment",
															"src": "3668:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3693:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3693:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3686:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3686:6:8"
																		},
																		"nativeSrc": "3686:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3686:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3679:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:8"
																},
																"nativeSrc": "3679:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3679:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3668:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3668:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3616:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3640:5:8",
														"nodeType": "YulTypedName",
														"src": "3640:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3650:7:8",
														"nodeType": "YulTypedName",
														"src": "3650:7:8",
														"type": ""
													}
												],
												"src": "3616:90:8"
											},
											{
												"body": {
													"nativeSrc": "3771:50:8",
													"nodeType": "YulBlock",
													"src": "3771:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3788:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3808:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3808:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3793:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3793:14:8"
																		},
																		"nativeSrc": "3793:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3793:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:8"
																},
																"nativeSrc": "3781:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3781:34:8"
															},
															"nativeSrc": "3781:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3781:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3712:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3759:5:8",
														"nodeType": "YulTypedName",
														"src": "3759:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3766:3:8",
														"nodeType": "YulTypedName",
														"src": "3766:3:8",
														"type": ""
													}
												],
												"src": "3712:109:8"
											},
											{
												"body": {
													"nativeSrc": "3919:118:8",
													"nodeType": "YulBlock",
													"src": "3919:118:8",
													"statements": [
														{
															"nativeSrc": "3929:26:8",
															"nodeType": "YulAssignment",
															"src": "3929:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3941:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3941:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3952:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3952:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3937:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3937:3:8"
																},
																"nativeSrc": "3937:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3937:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3929:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:8"
																		},
																		"nativeSrc": "4012:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3965:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3965:37:8"
																},
																"nativeSrc": "3965:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3965:65:8"
															},
															"nativeSrc": "3965:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3827:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3891:9:8",
														"nodeType": "YulTypedName",
														"src": "3891:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3903:6:8",
														"nodeType": "YulTypedName",
														"src": "3903:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3914:4:8",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													}
												],
												"src": "3827:210:8"
											},
											{
												"body": {
													"nativeSrc": "4143:519:8",
													"nodeType": "YulBlock",
													"src": "4143:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4189:83:8",
																"nodeType": "YulBlock",
																"src": "4189:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4191:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:8"
																			},
																			"nativeSrc": "4191:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:8"
																		},
																		"nativeSrc": "4191:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4160:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:8"
																		},
																		"nativeSrc": "4160:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4156:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:8"
																},
																"nativeSrc": "4156:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:8"
															},
															"nativeSrc": "4153:119:8",
															"nodeType": "YulIf",
															"src": "4153:119:8"
														},
														{
															"nativeSrc": "4282:117:8",
															"nodeType": "YulBlock",
															"src": "4282:117:8",
															"statements": [
																{
																	"nativeSrc": "4297:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4297:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4311:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4311:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4301:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4301:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4326:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4326:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4361:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4361:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4372:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4372:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4357:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:8"
																				},
																				"nativeSrc": "4357:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4357:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4381:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4336:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4336:20:8"
																		},
																		"nativeSrc": "4336:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4326:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4326:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4409:118:8",
															"nodeType": "YulBlock",
															"src": "4409:118:8",
															"statements": [
																{
																	"nativeSrc": "4424:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4424:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4428:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4428:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:8"
																				},
																				"nativeSrc": "4485:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:8"
																		},
																		"nativeSrc": "4464:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4454:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:8",
															"nodeType": "YulBlock",
															"src": "4537:118:8",
															"statements": [
																{
																	"nativeSrc": "4552:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:8"
																				},
																				"nativeSrc": "4613:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4592:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:8"
																		},
																		"nativeSrc": "4592:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4582:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4043:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:8",
														"nodeType": "YulTypedName",
														"src": "4097:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4108:7:8",
														"nodeType": "YulTypedName",
														"src": "4108:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4120:6:8",
														"nodeType": "YulTypedName",
														"src": "4120:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:8",
														"nodeType": "YulTypedName",
														"src": "4128:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4136:6:8",
														"nodeType": "YulTypedName",
														"src": "4136:6:8",
														"type": ""
													}
												],
												"src": "4043:619:8"
											},
											{
												"body": {
													"nativeSrc": "4711:43:8",
													"nodeType": "YulBlock",
													"src": "4711:43:8",
													"statements": [
														{
															"nativeSrc": "4721:27:8",
															"nodeType": "YulAssignment",
															"src": "4721:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4736:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4736:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4732:3:8"
																},
																"nativeSrc": "4732:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4732:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4721:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4721:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4668:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4693:5:8",
														"nodeType": "YulTypedName",
														"src": "4693:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4703:7:8",
														"nodeType": "YulTypedName",
														"src": "4703:7:8",
														"type": ""
													}
												],
												"src": "4668:86:8"
											},
											{
												"body": {
													"nativeSrc": "4821:51:8",
													"nodeType": "YulBlock",
													"src": "4821:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4838:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4859:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4859:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4843:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4843:15:8"
																		},
																		"nativeSrc": "4843:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:8"
																},
																"nativeSrc": "4831:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4831:35:8"
															},
															"nativeSrc": "4831:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4831:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4760:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4809:5:8",
														"nodeType": "YulTypedName",
														"src": "4809:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4816:3:8",
														"nodeType": "YulTypedName",
														"src": "4816:3:8",
														"type": ""
													}
												],
												"src": "4760:112:8"
											},
											{
												"body": {
													"nativeSrc": "4972:120:8",
													"nodeType": "YulBlock",
													"src": "4972:120:8",
													"statements": [
														{
															"nativeSrc": "4982:26:8",
															"nodeType": "YulAssignment",
															"src": "4982:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:8"
																},
																"nativeSrc": "4990:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4990:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4982:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:8"
																		},
																		"nativeSrc": "5067:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5018:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5018:39:8"
																},
																"nativeSrc": "5018:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5018:67:8"
															},
															"nativeSrc": "5018:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5018:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4878:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:8",
														"nodeType": "YulTypedName",
														"src": "4944:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4956:6:8",
														"nodeType": "YulTypedName",
														"src": "4956:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4967:4:8",
														"nodeType": "YulTypedName",
														"src": "4967:4:8",
														"type": ""
													}
												],
												"src": "4878:214:8"
											},
											{
												"body": {
													"nativeSrc": "5164:263:8",
													"nodeType": "YulBlock",
													"src": "5164:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:8",
																"nodeType": "YulBlock",
																"src": "5210:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:8"
																			},
																			"nativeSrc": "5212:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:8"
																		},
																		"nativeSrc": "5212:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:8"
																		},
																		"nativeSrc": "5181:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:8"
																},
																"nativeSrc": "5177:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:8"
															},
															"nativeSrc": "5174:119:8",
															"nodeType": "YulIf",
															"src": "5174:119:8"
														},
														{
															"nativeSrc": "5303:117:8",
															"nodeType": "YulBlock",
															"src": "5303:117:8",
															"statements": [
																{
																	"nativeSrc": "5318:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:8"
																				},
																				"nativeSrc": "5378:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:8"
																		},
																		"nativeSrc": "5357:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:8",
														"nodeType": "YulTypedName",
														"src": "5134:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:8",
														"nodeType": "YulTypedName",
														"src": "5145:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:8",
														"nodeType": "YulTypedName",
														"src": "5157:6:8",
														"type": ""
													}
												],
												"src": "5098:329:8"
											},
											{
												"body": {
													"nativeSrc": "5473:76:8",
													"nodeType": "YulBlock",
													"src": "5473:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5527:16:8",
																"nodeType": "YulBlock",
																"src": "5527:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5536:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5539:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5529:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:8"
																			},
																			"nativeSrc": "5529:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:8"
																		},
																		"nativeSrc": "5529:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5496:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5496:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5518:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5518:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5503:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5503:14:8"
																				},
																				"nativeSrc": "5503:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5503:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5493:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5493:2:8"
																		},
																		"nativeSrc": "5493:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5493:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5486:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:8"
																},
																"nativeSrc": "5486:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5486:40:8"
															},
															"nativeSrc": "5483:60:8",
															"nodeType": "YulIf",
															"src": "5483:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5433:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5466:5:8",
														"nodeType": "YulTypedName",
														"src": "5466:5:8",
														"type": ""
													}
												],
												"src": "5433:116:8"
											},
											{
												"body": {
													"nativeSrc": "5604:84:8",
													"nodeType": "YulBlock",
													"src": "5604:84:8",
													"statements": [
														{
															"nativeSrc": "5614:29:8",
															"nodeType": "YulAssignment",
															"src": "5614:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5636:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5623:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5623:12:8"
																},
																"nativeSrc": "5623:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5623:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5614:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5614:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5652:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "5652:23:8"
																},
																"nativeSrc": "5652:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5652:30:8"
															},
															"nativeSrc": "5652:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5652:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5555:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5582:6:8",
														"nodeType": "YulTypedName",
														"src": "5582:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5590:3:8",
														"nodeType": "YulTypedName",
														"src": "5590:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5598:5:8",
														"nodeType": "YulTypedName",
														"src": "5598:5:8",
														"type": ""
													}
												],
												"src": "5555:133:8"
											},
											{
												"body": {
													"nativeSrc": "5774:388:8",
													"nodeType": "YulBlock",
													"src": "5774:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5820:83:8",
																"nodeType": "YulBlock",
																"src": "5820:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5822:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5822:77:8"
																			},
																			"nativeSrc": "5822:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5822:79:8"
																		},
																		"nativeSrc": "5822:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5795:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5795:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5804:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5791:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:8"
																		},
																		"nativeSrc": "5791:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5816:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:8"
																},
																"nativeSrc": "5787:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5787:32:8"
															},
															"nativeSrc": "5784:119:8",
															"nodeType": "YulIf",
															"src": "5784:119:8"
														},
														{
															"nativeSrc": "5913:117:8",
															"nodeType": "YulBlock",
															"src": "5913:117:8",
															"statements": [
																{
																	"nativeSrc": "5928:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5928:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5942:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5942:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5932:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5932:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5957:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5957:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5992:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5992:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6003:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6003:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5988:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5988:3:8"
																				},
																				"nativeSrc": "5988:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5988:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6012:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6012:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5967:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5967:20:8"
																		},
																		"nativeSrc": "5967:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5967:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5957:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5957:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6040:115:8",
															"nodeType": "YulBlock",
															"src": "6040:115:8",
															"statements": [
																{
																	"nativeSrc": "6055:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6055:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6069:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6069:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6059:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6059:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6085:60:8",
																	"nodeType": "YulAssignment",
																	"src": "6085:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6117:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6117:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6128:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6128:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6113:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6113:3:8"
																				},
																				"nativeSrc": "6113:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6113:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6137:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6137:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6095:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6095:17:8"
																		},
																		"nativeSrc": "6095:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6095:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6085:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6085:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5694:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5736:9:8",
														"nodeType": "YulTypedName",
														"src": "5736:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5747:7:8",
														"nodeType": "YulTypedName",
														"src": "5747:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5759:6:8",
														"nodeType": "YulTypedName",
														"src": "5759:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5767:6:8",
														"nodeType": "YulTypedName",
														"src": "5767:6:8",
														"type": ""
													}
												],
												"src": "5694:468:8"
											},
											{
												"body": {
													"nativeSrc": "6251:391:8",
													"nodeType": "YulBlock",
													"src": "6251:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6297:83:8",
																"nodeType": "YulBlock",
																"src": "6297:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6299:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6299:77:8"
																			},
																			"nativeSrc": "6299:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6299:79:8"
																		},
																		"nativeSrc": "6299:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6299:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6272:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6272:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6281:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6281:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6268:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6268:3:8"
																		},
																		"nativeSrc": "6268:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6268:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6293:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6264:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:8"
																},
																"nativeSrc": "6264:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6264:32:8"
															},
															"nativeSrc": "6261:119:8",
															"nodeType": "YulIf",
															"src": "6261:119:8"
														},
														{
															"nativeSrc": "6390:117:8",
															"nodeType": "YulBlock",
															"src": "6390:117:8",
															"statements": [
																{
																	"nativeSrc": "6405:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6405:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6419:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6419:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6409:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6409:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6434:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6434:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6469:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6469:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6480:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6480:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6465:3:8"
																				},
																				"nativeSrc": "6465:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6465:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6489:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6489:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6444:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6444:20:8"
																		},
																		"nativeSrc": "6444:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6434:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6434:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6517:118:8",
															"nodeType": "YulBlock",
															"src": "6517:118:8",
															"statements": [
																{
																	"nativeSrc": "6532:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6532:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6546:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6546:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6536:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6536:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6562:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6562:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6597:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6597:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6608:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6608:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6593:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6593:3:8"
																				},
																				"nativeSrc": "6593:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6593:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6617:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6572:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6572:20:8"
																		},
																		"nativeSrc": "6572:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6572:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6562:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6562:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6168:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6213:9:8",
														"nodeType": "YulTypedName",
														"src": "6213:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6224:7:8",
														"nodeType": "YulTypedName",
														"src": "6224:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6236:6:8",
														"nodeType": "YulTypedName",
														"src": "6236:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6244:6:8",
														"nodeType": "YulTypedName",
														"src": "6244:6:8",
														"type": ""
													}
												],
												"src": "6168:474:8"
											},
											{
												"body": {
													"nativeSrc": "6676:152:8",
													"nodeType": "YulBlock",
													"src": "6676:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6693:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6693:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6696:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6696:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6686:6:8"
																},
																"nativeSrc": "6686:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6686:88:8"
															},
															"nativeSrc": "6686:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6686:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6790:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6790:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6793:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6793:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6783:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6783:6:8"
																},
																"nativeSrc": "6783:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6783:15:8"
															},
															"nativeSrc": "6783:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6783:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6814:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6814:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6817:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6817:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6807:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6807:6:8"
																},
																"nativeSrc": "6807:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6807:15:8"
															},
															"nativeSrc": "6807:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6807:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6648:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6648:180:8"
											},
											{
												"body": {
													"nativeSrc": "6885:269:8",
													"nodeType": "YulBlock",
													"src": "6885:269:8",
													"statements": [
														{
															"nativeSrc": "6895:22:8",
															"nodeType": "YulAssignment",
															"src": "6895:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6909:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6909:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6915:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6915:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6905:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:8"
																},
																"nativeSrc": "6905:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6905:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:8"
																}
															]
														},
														{
															"nativeSrc": "6926:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6926:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6956:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6956:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6962:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6962:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6952:3:8"
																},
																"nativeSrc": "6952:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6952:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6930:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6930:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:51:8",
																"nodeType": "YulBlock",
																"src": "7003:51:8",
																"statements": [
																	{
																		"nativeSrc": "7017:27:8",
																		"nodeType": "YulAssignment",
																		"src": "7017:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7031:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7031:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7039:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7039:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7027:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7027:3:8"
																			},
																			"nativeSrc": "7027:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7027:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7017:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7017:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6983:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6983:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6976:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:8"
																},
																"nativeSrc": "6976:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6976:26:8"
															},
															"nativeSrc": "6973:81:8",
															"nodeType": "YulIf",
															"src": "6973:81:8"
														},
														{
															"body": {
																"nativeSrc": "7106:42:8",
																"nodeType": "YulBlock",
																"src": "7106:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7120:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7120:16:8"
																			},
																			"nativeSrc": "7120:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7120:18:8"
																		},
																		"nativeSrc": "7120:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7120:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7070:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7070:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7093:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7093:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7101:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7101:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7090:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7090:2:8"
																		},
																		"nativeSrc": "7090:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7067:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7067:2:8"
																},
																"nativeSrc": "7067:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7067:38:8"
															},
															"nativeSrc": "7064:84:8",
															"nodeType": "YulIf",
															"src": "7064:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6834:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6869:4:8",
														"nodeType": "YulTypedName",
														"src": "6869:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6878:6:8",
														"nodeType": "YulTypedName",
														"src": "6878:6:8",
														"type": ""
													}
												],
												"src": "6834:320:8"
											},
											{
												"body": {
													"nativeSrc": "7188:152:8",
													"nodeType": "YulBlock",
													"src": "7188:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7205:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7205:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7208:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7198:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7198:6:8"
																},
																"nativeSrc": "7198:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7198:88:8"
															},
															"nativeSrc": "7198:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7198:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7302:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7302:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7305:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7305:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7295:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:8"
																},
																"nativeSrc": "7295:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7295:15:8"
															},
															"nativeSrc": "7295:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7295:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7326:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7326:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7329:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7319:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:8"
																},
																"nativeSrc": "7319:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7319:15:8"
															},
															"nativeSrc": "7319:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7319:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7160:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7160:180:8"
											},
											{
												"body": {
													"nativeSrc": "7394:362:8",
													"nodeType": "YulBlock",
													"src": "7394:362:8",
													"statements": [
														{
															"nativeSrc": "7404:25:8",
															"nodeType": "YulAssignment",
															"src": "7404:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7427:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7427:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7409:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7409:17:8"
																},
																"nativeSrc": "7409:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7409:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7404:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7404:1:8"
																}
															]
														},
														{
															"nativeSrc": "7438:25:8",
															"nodeType": "YulAssignment",
															"src": "7438:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7461:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7461:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7443:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7443:17:8"
																},
																"nativeSrc": "7443:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7443:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7438:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7438:1:8"
																}
															]
														},
														{
															"nativeSrc": "7472:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7472:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7495:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7495:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7498:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7498:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:8"
																},
																"nativeSrc": "7491:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7491:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7476:11:8",
																	"nodeType": "YulTypedName",
																	"src": "7476:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7509:41:8",
															"nodeType": "YulAssignment",
															"src": "7509:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7538:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "7538:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7520:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7520:17:8"
																},
																"nativeSrc": "7520:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7520:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7509:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7509:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7727:22:8",
																"nodeType": "YulBlock",
																"src": "7727:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7729:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7729:16:8"
																			},
																			"nativeSrc": "7729:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7729:18:8"
																		},
																		"nativeSrc": "7729:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7729:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7660:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7660:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7653:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7653:6:8"
																				},
																				"nativeSrc": "7653:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7653:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7683:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "7683:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7690:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "7690:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7699:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "7699:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7686:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7686:3:8"
																						},
																						"nativeSrc": "7686:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7686:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7680:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7680:2:8"
																				},
																				"nativeSrc": "7680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7680:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7633:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7633:2:8"
																		},
																		"nativeSrc": "7633:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7613:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:8"
																},
																"nativeSrc": "7613:113:8",
																"nodeType": "YulFunctionCall",
																"src": "7613:113:8"
															},
															"nativeSrc": "7610:139:8",
															"nodeType": "YulIf",
															"src": "7610:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7346:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7377:1:8",
														"nodeType": "YulTypedName",
														"src": "7377:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7380:1:8",
														"nodeType": "YulTypedName",
														"src": "7380:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7386:7:8",
														"nodeType": "YulTypedName",
														"src": "7386:7:8",
														"type": ""
													}
												],
												"src": "7346:410:8"
											},
											{
												"body": {
													"nativeSrc": "7790:152:8",
													"nodeType": "YulBlock",
													"src": "7790:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7807:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7810:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7810:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7800:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7800:6:8"
																},
																"nativeSrc": "7800:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7800:88:8"
															},
															"nativeSrc": "7800:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7800:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7904:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7904:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7907:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7907:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7897:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:8"
																},
																"nativeSrc": "7897:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7897:15:8"
															},
															"nativeSrc": "7897:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7897:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7928:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7928:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7931:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7931:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7921:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:6:8"
																},
																"nativeSrc": "7921:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7921:15:8"
															},
															"nativeSrc": "7921:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7921:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7762:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7762:180:8"
											},
											{
												"body": {
													"nativeSrc": "7990:143:8",
													"nodeType": "YulBlock",
													"src": "7990:143:8",
													"statements": [
														{
															"nativeSrc": "8000:25:8",
															"nodeType": "YulAssignment",
															"src": "8000:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8023:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8023:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8005:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8005:17:8"
																},
																"nativeSrc": "8005:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8005:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8000:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8000:1:8"
																}
															]
														},
														{
															"nativeSrc": "8034:25:8",
															"nodeType": "YulAssignment",
															"src": "8034:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8057:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8039:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8039:17:8"
																},
																"nativeSrc": "8039:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8039:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8034:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8081:22:8",
																"nodeType": "YulBlock",
																"src": "8081:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8083:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8083:16:8"
																			},
																			"nativeSrc": "8083:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8083:18:8"
																		},
																		"nativeSrc": "8083:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8083:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8078:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8078:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8071:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8071:6:8"
																},
																"nativeSrc": "8071:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8071:9:8"
															},
															"nativeSrc": "8068:35:8",
															"nodeType": "YulIf",
															"src": "8068:35:8"
														},
														{
															"nativeSrc": "8113:14:8",
															"nodeType": "YulAssignment",
															"src": "8113:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8122:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8122:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8125:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8125:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8118:3:8"
																},
																"nativeSrc": "8118:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8118:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8113:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8113:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7948:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7979:1:8",
														"nodeType": "YulTypedName",
														"src": "7979:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7982:1:8",
														"nodeType": "YulTypedName",
														"src": "7982:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7988:1:8",
														"nodeType": "YulTypedName",
														"src": "7988:1:8",
														"type": ""
													}
												],
												"src": "7948:185:8"
											},
											{
												"body": {
													"nativeSrc": "8183:147:8",
													"nodeType": "YulBlock",
													"src": "8183:147:8",
													"statements": [
														{
															"nativeSrc": "8193:25:8",
															"nodeType": "YulAssignment",
															"src": "8193:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8216:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8216:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8198:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8198:17:8"
																},
																"nativeSrc": "8198:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8198:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8193:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8193:1:8"
																}
															]
														},
														{
															"nativeSrc": "8227:25:8",
															"nodeType": "YulAssignment",
															"src": "8227:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8250:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8250:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8232:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8232:17:8"
																},
																"nativeSrc": "8232:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8232:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8227:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8227:1:8"
																}
															]
														},
														{
															"nativeSrc": "8261:16:8",
															"nodeType": "YulAssignment",
															"src": "8261:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8272:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8272:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8275:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8275:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8268:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:8"
																},
																"nativeSrc": "8268:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8268:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8261:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8301:22:8",
																"nodeType": "YulBlock",
																"src": "8301:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8303:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8303:16:8"
																			},
																			"nativeSrc": "8303:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8303:18:8"
																		},
																		"nativeSrc": "8303:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8303:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8293:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8293:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8296:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8296:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8290:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8290:2:8"
																},
																"nativeSrc": "8290:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8290:10:8"
															},
															"nativeSrc": "8287:36:8",
															"nodeType": "YulIf",
															"src": "8287:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8139:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8170:1:8",
														"nodeType": "YulTypedName",
														"src": "8170:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8173:1:8",
														"nodeType": "YulTypedName",
														"src": "8173:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8179:3:8",
														"nodeType": "YulTypedName",
														"src": "8179:3:8",
														"type": ""
													}
												],
												"src": "8139:191:8"
											},
											{
												"body": {
													"nativeSrc": "8442:68:8",
													"nodeType": "YulBlock",
													"src": "8442:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8464:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8464:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8472:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8472:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8460:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:8"
																		},
																		"nativeSrc": "8460:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8460:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"kind": "string",
																		"nativeSrc": "8476:26:8",
																		"nodeType": "YulLiteral",
																		"src": "8476:26:8",
																		"type": "",
																		"value": "Exceeds max wallet limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:8"
																},
																"nativeSrc": "8453:50:8",
																"nodeType": "YulFunctionCall",
																"src": "8453:50:8"
															},
															"nativeSrc": "8453:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "8453:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
												"nativeSrc": "8336:174:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8434:6:8",
														"nodeType": "YulTypedName",
														"src": "8434:6:8",
														"type": ""
													}
												],
												"src": "8336:174:8"
											},
											{
												"body": {
													"nativeSrc": "8662:220:8",
													"nodeType": "YulBlock",
													"src": "8662:220:8",
													"statements": [
														{
															"nativeSrc": "8672:74:8",
															"nodeType": "YulAssignment",
															"src": "8672:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8738:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8738:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8743:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8743:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8679:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8679:58:8"
																},
																"nativeSrc": "8679:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8679:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8672:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8844:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																	"nativeSrc": "8755:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8755:88:8"
																},
																"nativeSrc": "8755:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8755:93:8"
															},
															"nativeSrc": "8755:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8755:93:8"
														},
														{
															"nativeSrc": "8857:19:8",
															"nodeType": "YulAssignment",
															"src": "8857:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8868:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8868:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8873:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8873:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8864:3:8"
																},
																"nativeSrc": "8864:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8864:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8857:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8516:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8650:3:8",
														"nodeType": "YulTypedName",
														"src": "8650:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8658:3:8",
														"nodeType": "YulTypedName",
														"src": "8658:3:8",
														"type": ""
													}
												],
												"src": "8516:366:8"
											},
											{
												"body": {
													"nativeSrc": "9059:248:8",
													"nodeType": "YulBlock",
													"src": "9059:248:8",
													"statements": [
														{
															"nativeSrc": "9069:26:8",
															"nodeType": "YulAssignment",
															"src": "9069:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9081:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9081:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9092:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9092:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9077:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9077:3:8"
																},
																"nativeSrc": "9077:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9077:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9069:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9069:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9116:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9116:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9127:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9127:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9112:3:8"
																		},
																		"nativeSrc": "9112:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9112:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9135:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9135:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9141:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:8"
																		},
																		"nativeSrc": "9131:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9131:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9105:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:8"
																},
																"nativeSrc": "9105:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9105:47:8"
															},
															"nativeSrc": "9105:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9105:47:8"
														},
														{
															"nativeSrc": "9161:139:8",
															"nodeType": "YulAssignment",
															"src": "9161:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9295:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9295:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9169:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9169:124:8"
																},
																"nativeSrc": "9169:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9169:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9161:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9161:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8888:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9039:9:8",
														"nodeType": "YulTypedName",
														"src": "9039:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9054:4:8",
														"nodeType": "YulTypedName",
														"src": "9054:4:8",
														"type": ""
													}
												],
												"src": "8888:419:8"
											},
											{
												"body": {
													"nativeSrc": "9419:73:8",
													"nodeType": "YulBlock",
													"src": "9419:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9441:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9441:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9449:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9449:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9437:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:8"
																		},
																		"nativeSrc": "9437:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "9453:31:8",
																		"nodeType": "YulLiteral",
																		"src": "9453:31:8",
																		"type": "",
																		"value": "Exceeds max transaction limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9430:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9430:6:8"
																},
																"nativeSrc": "9430:55:8",
																"nodeType": "YulFunctionCall",
																"src": "9430:55:8"
															},
															"nativeSrc": "9430:55:8",
															"nodeType": "YulExpressionStatement",
															"src": "9430:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
												"nativeSrc": "9313:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9411:6:8",
														"nodeType": "YulTypedName",
														"src": "9411:6:8",
														"type": ""
													}
												],
												"src": "9313:179:8"
											},
											{
												"body": {
													"nativeSrc": "9644:220:8",
													"nodeType": "YulBlock",
													"src": "9644:220:8",
													"statements": [
														{
															"nativeSrc": "9654:74:8",
															"nodeType": "YulAssignment",
															"src": "9654:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9720:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9720:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9725:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9725:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9661:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9661:58:8"
																},
																"nativeSrc": "9661:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9661:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9654:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9654:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9826:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9826:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																	"nativeSrc": "9737:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9737:88:8"
																},
																"nativeSrc": "9737:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9737:93:8"
															},
															"nativeSrc": "9737:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9737:93:8"
														},
														{
															"nativeSrc": "9839:19:8",
															"nodeType": "YulAssignment",
															"src": "9839:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9850:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9850:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9855:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9855:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9846:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9846:3:8"
																},
																"nativeSrc": "9846:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9846:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9839:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9839:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9498:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9632:3:8",
														"nodeType": "YulTypedName",
														"src": "9632:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9640:3:8",
														"nodeType": "YulTypedName",
														"src": "9640:3:8",
														"type": ""
													}
												],
												"src": "9498:366:8"
											},
											{
												"body": {
													"nativeSrc": "10041:248:8",
													"nodeType": "YulBlock",
													"src": "10041:248:8",
													"statements": [
														{
															"nativeSrc": "10051:26:8",
															"nodeType": "YulAssignment",
															"src": "10051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10059:3:8"
																},
																"nativeSrc": "10059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10094:3:8"
																		},
																		"nativeSrc": "10094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10113:3:8"
																		},
																		"nativeSrc": "10113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10087:6:8"
																},
																"nativeSrc": "10087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10087:47:8"
															},
															"nativeSrc": "10087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10087:47:8"
														},
														{
															"nativeSrc": "10143:139:8",
															"nodeType": "YulAssignment",
															"src": "10143:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10277:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10277:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10151:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10151:124:8"
																},
																"nativeSrc": "10151:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10151:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9870:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10021:9:8",
														"nodeType": "YulTypedName",
														"src": "10021:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10036:4:8",
														"nodeType": "YulTypedName",
														"src": "10036:4:8",
														"type": ""
													}
												],
												"src": "9870:419:8"
											},
											{
												"body": {
													"nativeSrc": "10449:288:8",
													"nodeType": "YulBlock",
													"src": "10449:288:8",
													"statements": [
														{
															"nativeSrc": "10459:26:8",
															"nodeType": "YulAssignment",
															"src": "10459:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10471:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10471:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10482:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10482:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:8"
																},
																"nativeSrc": "10467:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10467:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10459:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10459:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10539:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10539:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10552:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10552:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10563:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10563:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10548:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10548:3:8"
																		},
																		"nativeSrc": "10548:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10548:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10495:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10495:43:8"
																},
																"nativeSrc": "10495:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10495:71:8"
															},
															"nativeSrc": "10495:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10495:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10620:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10620:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10633:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10633:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10644:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10644:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10629:3:8"
																		},
																		"nativeSrc": "10629:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10629:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10576:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10576:43:8"
																},
																"nativeSrc": "10576:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10576:72:8"
															},
															"nativeSrc": "10576:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10576:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10702:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10702:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10715:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10715:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10726:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10726:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:8"
																		},
																		"nativeSrc": "10711:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10711:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10658:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10658:43:8"
																},
																"nativeSrc": "10658:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10658:72:8"
															},
															"nativeSrc": "10658:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10658:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10295:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10405:9:8",
														"nodeType": "YulTypedName",
														"src": "10405:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10417:6:8",
														"nodeType": "YulTypedName",
														"src": "10417:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10425:6:8",
														"nodeType": "YulTypedName",
														"src": "10425:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10433:6:8",
														"nodeType": "YulTypedName",
														"src": "10433:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10444:4:8",
														"nodeType": "YulTypedName",
														"src": "10444:4:8",
														"type": ""
													}
												],
												"src": "10295:442:8"
											},
											{
												"body": {
													"nativeSrc": "10788:149:8",
													"nodeType": "YulBlock",
													"src": "10788:149:8",
													"statements": [
														{
															"nativeSrc": "10798:25:8",
															"nodeType": "YulAssignment",
															"src": "10798:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10821:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10821:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10803:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10803:17:8"
																},
																"nativeSrc": "10803:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10803:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10798:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10798:1:8"
																}
															]
														},
														{
															"nativeSrc": "10832:25:8",
															"nodeType": "YulAssignment",
															"src": "10832:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10855:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10855:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10837:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10837:17:8"
																},
																"nativeSrc": "10837:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10837:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10832:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10832:1:8"
																}
															]
														},
														{
															"nativeSrc": "10866:17:8",
															"nodeType": "YulAssignment",
															"src": "10866:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10878:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10878:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10881:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10881:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10874:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10874:3:8"
																},
																"nativeSrc": "10874:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10874:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10866:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10866:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10908:22:8",
																"nodeType": "YulBlock",
																"src": "10908:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10910:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10910:16:8"
																			},
																			"nativeSrc": "10910:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10910:18:8"
																		},
																		"nativeSrc": "10910:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10910:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10899:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10899:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10905:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10905:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10896:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10896:2:8"
																},
																"nativeSrc": "10896:11:8",
																"nodeType": "YulFunctionCall",
																"src": "10896:11:8"
															},
															"nativeSrc": "10893:37:8",
															"nodeType": "YulIf",
															"src": "10893:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10743:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10774:1:8",
														"nodeType": "YulTypedName",
														"src": "10774:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10777:1:8",
														"nodeType": "YulTypedName",
														"src": "10777:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10783:4:8",
														"nodeType": "YulTypedName",
														"src": "10783:4:8",
														"type": ""
													}
												],
												"src": "10743:194:8"
											},
											{
												"body": {
													"nativeSrc": "11049:62:8",
													"nodeType": "YulBlock",
													"src": "11049:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11071:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11071:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11079:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11079:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11067:3:8"
																		},
																		"nativeSrc": "11067:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11067:14:8"
																	},
																	{
																		"hexValue": "456e636f75726167656d656e742046756e64",
																		"kind": "string",
																		"nativeSrc": "11083:20:8",
																		"nodeType": "YulLiteral",
																		"src": "11083:20:8",
																		"type": "",
																		"value": "Encouragement Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11060:6:8"
																},
																"nativeSrc": "11060:44:8",
																"nodeType": "YulFunctionCall",
																"src": "11060:44:8"
															},
															"nativeSrc": "11060:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "11060:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
												"nativeSrc": "10943:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11041:6:8",
														"nodeType": "YulTypedName",
														"src": "11041:6:8",
														"type": ""
													}
												],
												"src": "10943:168:8"
											},
											{
												"body": {
													"nativeSrc": "11263:220:8",
													"nodeType": "YulBlock",
													"src": "11263:220:8",
													"statements": [
														{
															"nativeSrc": "11273:74:8",
															"nodeType": "YulAssignment",
															"src": "11273:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11339:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11339:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11344:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11344:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11280:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11280:58:8"
																},
																"nativeSrc": "11280:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11280:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11273:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11445:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11445:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																	"nativeSrc": "11356:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11356:88:8"
																},
																"nativeSrc": "11356:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11356:93:8"
															},
															"nativeSrc": "11356:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11356:93:8"
														},
														{
															"nativeSrc": "11458:19:8",
															"nodeType": "YulAssignment",
															"src": "11458:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11469:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11469:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11474:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11465:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:8"
																},
																"nativeSrc": "11465:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11465:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11458:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11458:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11117:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11251:3:8",
														"nodeType": "YulTypedName",
														"src": "11251:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11259:3:8",
														"nodeType": "YulTypedName",
														"src": "11259:3:8",
														"type": ""
													}
												],
												"src": "11117:366:8"
											},
											{
												"body": {
													"nativeSrc": "11688:330:8",
													"nodeType": "YulBlock",
													"src": "11688:330:8",
													"statements": [
														{
															"nativeSrc": "11698:26:8",
															"nodeType": "YulAssignment",
															"src": "11698:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11710:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11710:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11721:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11721:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11706:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11706:3:8"
																},
																"nativeSrc": "11706:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11706:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11698:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11698:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11778:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11778:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11791:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11802:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11802:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11787:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11787:3:8"
																		},
																		"nativeSrc": "11787:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11787:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11734:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11734:43:8"
																},
																"nativeSrc": "11734:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11734:71:8"
															},
															"nativeSrc": "11734:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11734:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11826:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11837:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11837:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11822:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11822:3:8"
																		},
																		"nativeSrc": "11822:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11846:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11846:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11852:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11852:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11842:3:8"
																		},
																		"nativeSrc": "11842:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11842:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11815:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:8"
																},
																"nativeSrc": "11815:48:8",
																"nodeType": "YulFunctionCall",
																"src": "11815:48:8"
															},
															"nativeSrc": "11815:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "11815:48:8"
														},
														{
															"nativeSrc": "11872:139:8",
															"nodeType": "YulAssignment",
															"src": "11872:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12006:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12006:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11880:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11880:124:8"
																},
																"nativeSrc": "11880:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11880:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11872:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11872:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11489:529:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11660:9:8",
														"nodeType": "YulTypedName",
														"src": "11660:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11672:6:8",
														"nodeType": "YulTypedName",
														"src": "11672:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11683:4:8",
														"nodeType": "YulTypedName",
														"src": "11683:4:8",
														"type": ""
													}
												],
												"src": "11489:529:8"
											},
											{
												"body": {
													"nativeSrc": "12130:58:8",
													"nodeType": "YulBlock",
													"src": "12130:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12152:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12152:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12160:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12160:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12148:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12148:3:8"
																		},
																		"nativeSrc": "12148:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12148:14:8"
																	},
																	{
																		"hexValue": "456d657267656e63792046756e64",
																		"kind": "string",
																		"nativeSrc": "12164:16:8",
																		"nodeType": "YulLiteral",
																		"src": "12164:16:8",
																		"type": "",
																		"value": "Emergency Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12141:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12141:6:8"
																},
																"nativeSrc": "12141:40:8",
																"nodeType": "YulFunctionCall",
																"src": "12141:40:8"
															},
															"nativeSrc": "12141:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "12141:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
												"nativeSrc": "12024:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12122:6:8",
														"nodeType": "YulTypedName",
														"src": "12122:6:8",
														"type": ""
													}
												],
												"src": "12024:164:8"
											},
											{
												"body": {
													"nativeSrc": "12340:220:8",
													"nodeType": "YulBlock",
													"src": "12340:220:8",
													"statements": [
														{
															"nativeSrc": "12350:74:8",
															"nodeType": "YulAssignment",
															"src": "12350:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12416:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12416:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12421:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12357:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12357:58:8"
																},
																"nativeSrc": "12357:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12357:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12350:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12522:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12522:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																	"nativeSrc": "12433:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12433:88:8"
																},
																"nativeSrc": "12433:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12433:93:8"
															},
															"nativeSrc": "12433:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12433:93:8"
														},
														{
															"nativeSrc": "12535:19:8",
															"nodeType": "YulAssignment",
															"src": "12535:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12546:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12546:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12551:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12551:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12542:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12542:3:8"
																},
																"nativeSrc": "12542:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12542:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12535:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12194:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12328:3:8",
														"nodeType": "YulTypedName",
														"src": "12328:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12336:3:8",
														"nodeType": "YulTypedName",
														"src": "12336:3:8",
														"type": ""
													}
												],
												"src": "12194:366:8"
											},
											{
												"body": {
													"nativeSrc": "12765:330:8",
													"nodeType": "YulBlock",
													"src": "12765:330:8",
													"statements": [
														{
															"nativeSrc": "12775:26:8",
															"nodeType": "YulAssignment",
															"src": "12775:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12787:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12787:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12798:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12783:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12783:3:8"
																},
																"nativeSrc": "12783:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12783:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12775:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12775:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12855:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12855:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12868:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12868:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12879:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12879:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12864:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12864:3:8"
																		},
																		"nativeSrc": "12864:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12864:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12811:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12811:43:8"
																},
																"nativeSrc": "12811:71:8",
																"nodeType": "YulFunctionCall",
																"src": "12811:71:8"
															},
															"nativeSrc": "12811:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "12811:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12903:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12903:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12914:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12914:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12899:3:8"
																		},
																		"nativeSrc": "12899:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12899:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12923:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12923:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12929:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12929:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12919:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12919:3:8"
																		},
																		"nativeSrc": "12919:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12919:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:8"
																},
																"nativeSrc": "12892:48:8",
																"nodeType": "YulFunctionCall",
																"src": "12892:48:8"
															},
															"nativeSrc": "12892:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "12892:48:8"
														},
														{
															"nativeSrc": "12949:139:8",
															"nodeType": "YulAssignment",
															"src": "12949:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13083:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13083:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12957:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12957:124:8"
																},
																"nativeSrc": "12957:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12957:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12949:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12949:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12566:529:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12737:9:8",
														"nodeType": "YulTypedName",
														"src": "12737:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12749:6:8",
														"nodeType": "YulTypedName",
														"src": "12749:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12760:4:8",
														"nodeType": "YulTypedName",
														"src": "12760:4:8",
														"type": ""
													}
												],
												"src": "12566:529:8"
											},
											{
												"body": {
													"nativeSrc": "13207:53:8",
													"nodeType": "YulBlock",
													"src": "13207:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13229:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13229:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13237:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13237:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13225:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13225:3:8"
																		},
																		"nativeSrc": "13225:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13225:14:8"
																	},
																	{
																		"hexValue": "4d61726b6574696e67",
																		"kind": "string",
																		"nativeSrc": "13241:11:8",
																		"nodeType": "YulLiteral",
																		"src": "13241:11:8",
																		"type": "",
																		"value": "Marketing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13218:6:8"
																},
																"nativeSrc": "13218:35:8",
																"nodeType": "YulFunctionCall",
																"src": "13218:35:8"
															},
															"nativeSrc": "13218:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "13218:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
												"nativeSrc": "13101:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13199:6:8",
														"nodeType": "YulTypedName",
														"src": "13199:6:8",
														"type": ""
													}
												],
												"src": "13101:159:8"
											},
											{
												"body": {
													"nativeSrc": "13412:219:8",
													"nodeType": "YulBlock",
													"src": "13412:219:8",
													"statements": [
														{
															"nativeSrc": "13422:73:8",
															"nodeType": "YulAssignment",
															"src": "13422:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13488:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13488:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13493:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13493:1:8",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13429:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13429:58:8"
																},
																"nativeSrc": "13429:66:8",
																"nodeType": "YulFunctionCall",
																"src": "13429:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13422:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13593:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13593:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																	"nativeSrc": "13504:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13504:88:8"
																},
																"nativeSrc": "13504:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13504:93:8"
															},
															"nativeSrc": "13504:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13504:93:8"
														},
														{
															"nativeSrc": "13606:19:8",
															"nodeType": "YulAssignment",
															"src": "13606:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13617:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13617:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13622:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13613:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13613:3:8"
																},
																"nativeSrc": "13613:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13613:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13606:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13266:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13400:3:8",
														"nodeType": "YulTypedName",
														"src": "13400:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13408:3:8",
														"nodeType": "YulTypedName",
														"src": "13408:3:8",
														"type": ""
													}
												],
												"src": "13266:365:8"
											},
											{
												"body": {
													"nativeSrc": "13836:330:8",
													"nodeType": "YulBlock",
													"src": "13836:330:8",
													"statements": [
														{
															"nativeSrc": "13846:26:8",
															"nodeType": "YulAssignment",
															"src": "13846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13858:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13858:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13869:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13869:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13854:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13854:3:8"
																},
																"nativeSrc": "13854:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13846:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13926:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13926:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13939:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13939:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13950:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13950:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:8"
																		},
																		"nativeSrc": "13935:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13935:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13882:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13882:43:8"
																},
																"nativeSrc": "13882:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13882:71:8"
															},
															"nativeSrc": "13882:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13882:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13974:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13974:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13985:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13985:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13970:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13970:3:8"
																		},
																		"nativeSrc": "13970:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13970:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13994:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13994:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14000:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14000:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13990:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:8"
																		},
																		"nativeSrc": "13990:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13990:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13963:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13963:6:8"
																},
																"nativeSrc": "13963:48:8",
																"nodeType": "YulFunctionCall",
																"src": "13963:48:8"
															},
															"nativeSrc": "13963:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "13963:48:8"
														},
														{
															"nativeSrc": "14020:139:8",
															"nodeType": "YulAssignment",
															"src": "14020:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14154:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14154:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14028:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14028:124:8"
																},
																"nativeSrc": "14028:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14028:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14020:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14020:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13637:529:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13808:9:8",
														"nodeType": "YulTypedName",
														"src": "13808:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13820:6:8",
														"nodeType": "YulTypedName",
														"src": "13820:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13831:4:8",
														"nodeType": "YulTypedName",
														"src": "13831:4:8",
														"type": ""
													}
												],
												"src": "13637:529:8"
											},
											{
												"body": {
													"nativeSrc": "14278:51:8",
													"nodeType": "YulBlock",
													"src": "14278:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14300:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14300:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14308:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14308:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14296:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14296:3:8"
																		},
																		"nativeSrc": "14296:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14296:14:8"
																	},
																	{
																		"hexValue": "5374616b696e67",
																		"kind": "string",
																		"nativeSrc": "14312:9:8",
																		"nodeType": "YulLiteral",
																		"src": "14312:9:8",
																		"type": "",
																		"value": "Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14289:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14289:6:8"
																},
																"nativeSrc": "14289:33:8",
																"nodeType": "YulFunctionCall",
																"src": "14289:33:8"
															},
															"nativeSrc": "14289:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "14289:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
												"nativeSrc": "14172:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14270:6:8",
														"nodeType": "YulTypedName",
														"src": "14270:6:8",
														"type": ""
													}
												],
												"src": "14172:157:8"
											},
											{
												"body": {
													"nativeSrc": "14481:219:8",
													"nodeType": "YulBlock",
													"src": "14481:219:8",
													"statements": [
														{
															"nativeSrc": "14491:73:8",
															"nodeType": "YulAssignment",
															"src": "14491:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14557:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14562:1:8",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14498:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14498:58:8"
																},
																"nativeSrc": "14498:66:8",
																"nodeType": "YulFunctionCall",
																"src": "14498:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14491:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14662:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14662:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																	"nativeSrc": "14573:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14573:88:8"
																},
																"nativeSrc": "14573:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14573:93:8"
															},
															"nativeSrc": "14573:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14573:93:8"
														},
														{
															"nativeSrc": "14675:19:8",
															"nodeType": "YulAssignment",
															"src": "14675:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14686:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14686:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14691:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14691:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14682:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14682:3:8"
																},
																"nativeSrc": "14682:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14682:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14675:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14675:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14335:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14469:3:8",
														"nodeType": "YulTypedName",
														"src": "14469:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14477:3:8",
														"nodeType": "YulTypedName",
														"src": "14477:3:8",
														"type": ""
													}
												],
												"src": "14335:365:8"
											},
											{
												"body": {
													"nativeSrc": "14905:330:8",
													"nodeType": "YulBlock",
													"src": "14905:330:8",
													"statements": [
														{
															"nativeSrc": "14915:26:8",
															"nodeType": "YulAssignment",
															"src": "14915:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14927:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14927:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14938:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14938:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14923:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14923:3:8"
																},
																"nativeSrc": "14923:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14923:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14915:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14915:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14995:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14995:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15008:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15008:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15019:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15019:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15004:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15004:3:8"
																		},
																		"nativeSrc": "15004:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15004:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14951:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14951:43:8"
																},
																"nativeSrc": "14951:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14951:71:8"
															},
															"nativeSrc": "14951:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14951:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15043:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15043:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15054:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15054:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15039:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15039:3:8"
																		},
																		"nativeSrc": "15039:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15039:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15063:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15063:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15069:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15069:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15059:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:8"
																		},
																		"nativeSrc": "15059:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15059:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15032:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15032:6:8"
																},
																"nativeSrc": "15032:48:8",
																"nodeType": "YulFunctionCall",
																"src": "15032:48:8"
															},
															"nativeSrc": "15032:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "15032:48:8"
														},
														{
															"nativeSrc": "15089:139:8",
															"nodeType": "YulAssignment",
															"src": "15089:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15223:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15223:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15097:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15097:124:8"
																},
																"nativeSrc": "15097:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15097:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15089:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15089:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14706:529:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14877:9:8",
														"nodeType": "YulTypedName",
														"src": "14877:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14889:6:8",
														"nodeType": "YulTypedName",
														"src": "14889:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14900:4:8",
														"nodeType": "YulTypedName",
														"src": "14900:4:8",
														"type": ""
													}
												],
												"src": "14706:529:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max wallet limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max transaction limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771(memPtr) {\n\n        mstore(add(memPtr, 0), \"Encouragement Fund\")\n\n    }\n\n    function abi_encode_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Emergency Fund\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketing\")\n\n    }\n\n    function abi_encode_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking\")\n\n    }\n\n    function abi_encode_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c806370a08231116100c1578063a9059cbb1161007a578063a9059cbb146103a8578063cc859378146103d8578063dd62ed3e146103f6578063df7787a414610426578063f2fde38b14610444578063f3b2db3f1461046057610156565b806370a08231146102f8578063715018a614610328578063753cafc31461033257806375f0a8741461034e5780638da5cb5b1461036c57806395d89b411461038a57610156565b80632ff2e9dc116101135780632ff2e9dc14610232578063313ce5671461025057806336b4134a1461026e5780634fbee1931461028c57806352a6a9ec146102bc57806354ad8aee146102da57610156565b806302af37bb1461015a57806306ee6ad81461017857806306fdde0314610196578063095ea7b3146101b457806318160ddd146101e457806323b872dd14610202575b5f80fd5b61016261047e565b60405161016f9190611368565b60405180910390f35b610180610483565b60405161018d91906113c0565b60405180910390f35b61019e6104a8565b6040516101ab9190611449565b60405180910390f35b6101ce60048036038101906101c991906114c1565b610538565b6040516101db9190611519565b60405180910390f35b6101ec61055a565b6040516101f99190611368565b60405180910390f35b61021c60048036038101906102179190611532565b610563565b6040516102299190611519565b60405180910390f35b61023a610591565b6040516102479190611368565b60405180910390f35b6102586105a0565b604051610265919061159d565b60405180910390f35b6102766105a8565b6040516102839190611368565b60405180910390f35b6102a660048036038101906102a191906115b6565b6105ad565b6040516102b39190611519565b60405180910390f35b6102c46105ca565b6040516102d191906113c0565b60405180910390f35b6102e26105ef565b6040516102ef9190611368565b60405180910390f35b610312600480360381019061030d91906115b6565b6105f4565b60405161031f9190611368565b60405180910390f35b610330610639565b005b61034c6004803603810190610347919061160b565b61064c565b005b6103566106ac565b60405161036391906113c0565b60405180910390f35b6103746106d1565b60405161038191906113c0565b60405180910390f35b6103926106f9565b60405161039f9190611449565b60405180910390f35b6103c260048036038101906103bd91906114c1565b610789565b6040516103cf9190611519565b60405180910390f35b6103e061087f565b6040516103ed91906113c0565b60405180910390f35b610410600480360381019061040b9190611649565b6108a4565b60405161041d9190611368565b60405180910390f35b61042e610926565b60405161043b9190611368565b60405180910390f35b61045e600480360381019061045991906115b6565b61094d565b005b6104686109d1565b6040516104759190611368565b60405180910390f35b600a81565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600380546104b7906116b4565b80601f01602080910402602001604051908101604052809291908181526020018280546104e3906116b4565b801561052e5780601f106105055761010080835404028352916020019161052e565b820191905f5260205f20905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b5f806105426109f9565b905061054f818585610a00565b600191505092915050565b5f600254905090565b5f8061056d6109f9565b905061057a858285610a12565b610585858585610aa5565b60019150509392505050565b6a01a784379d99db4200000081565b5f6012905090565b600d81565b600b602052805f5260405f205f915054906101000a900460ff1681565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c81565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610641610b95565b61064a5f610c1c565b565b610654610b95565b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610708906116b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610734906116b4565b801561077f5780601f106107565761010080835404028352916020019161077f565b820191905f5260205f20905b81548152906001019060200180831161076257829003601f168201915b5050505050905090565b5f606460016a01a784379d99db420000006107a49190611711565b6107ae919061177f565b826107b8856105f4565b6107c291906117af565b1115610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa9061182c565b60405180910390fd5b61271060056a01a784379d99db4200000061081e9190611711565b610828919061177f565b82111561086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611894565b60405180910390fd5b610875338484610cdf565b6001905092915050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b606460016a01a784379d99db420000006109409190611711565b61094a919061177f565b81565b610955610b95565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109bc91906113c0565b60405180910390fd5b6109ce81610c1c565b50565b61271060056a01a784379d99db420000006109ec9190611711565b6109f6919061177f565b81565b5f33905090565b610a0d8383836001610f68565b505050565b5f610a1d84846108a4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a9f5781811015610a90578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a87939291906118b2565b60405180910390fd5b610a9e84848484035f610f68565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b15575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0c91906113c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b85575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7c91906113c0565b60405180910390fd5b610b90838383611137565b505050565b610b9d6109f9565b73ffffffffffffffffffffffffffffffffffffffff16610bbb6106d1565b73ffffffffffffffffffffffffffffffffffffffff1614610c1a57610bde6109f9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c1191906113c0565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6064600c83610cef9190611711565b610cf9919061177f565b90505f8183610d0891906118e7565b9050610d4e8560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c600486610d3f9190611711565b610d49919061177f565b610aa5565b7f6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984600c600484610d7e9190611711565b610d88919061177f565b604051610d959190611964565b60405180910390a1610de18560085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c600186610dd29190611711565b610ddc919061177f565b610aa5565b7f6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984600c600184610e119190611711565b610e1b919061177f565b604051610e2891906119da565b60405180910390a1610e748560095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c600486610e659190611711565b610e6f919061177f565b610aa5565b7f6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984600c600484610ea49190611711565b610eae919061177f565b604051610ebb9190611a50565b60405180910390a1610f0785600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c600386610ef89190611711565b610f02919061177f565b610aa5565b7f6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984600c600384610f379190611711565b610f41919061177f565b604051610f4e9190611ac6565b60405180910390a1610f61858583610aa5565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fd8575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fcf91906113c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611048575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161103f91906113c0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611131578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111289190611368565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611187578060025f82825461117b91906117af565b92505081905550611255565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611210578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611207939291906118b2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129c578060025f82825403925050819055506112e6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113439190611368565b60405180910390a3505050565b5f819050919050565b61136281611350565b82525050565b5f60208201905061137b5f830184611359565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113aa82611381565b9050919050565b6113ba816113a0565b82525050565b5f6020820190506113d35f8301846113b1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61141b826113d9565b61142581856113e3565b93506114358185602086016113f3565b61143e81611401565b840191505092915050565b5f6020820190508181035f8301526114618184611411565b905092915050565b5f80fd5b611476816113a0565b8114611480575f80fd5b50565b5f813590506114918161146d565b92915050565b6114a081611350565b81146114aa575f80fd5b50565b5f813590506114bb81611497565b92915050565b5f80604083850312156114d7576114d6611469565b5b5f6114e485828601611483565b92505060206114f5858286016114ad565b9150509250929050565b5f8115159050919050565b611513816114ff565b82525050565b5f60208201905061152c5f83018461150a565b92915050565b5f805f6060848603121561154957611548611469565b5b5f61155686828701611483565b935050602061156786828701611483565b9250506040611578868287016114ad565b9150509250925092565b5f60ff82169050919050565b61159781611582565b82525050565b5f6020820190506115b05f83018461158e565b92915050565b5f602082840312156115cb576115ca611469565b5b5f6115d884828501611483565b91505092915050565b6115ea816114ff565b81146115f4575f80fd5b50565b5f81359050611605816115e1565b92915050565b5f806040838503121561162157611620611469565b5b5f61162e85828601611483565b925050602061163f858286016115f7565b9150509250929050565b5f806040838503121561165f5761165e611469565b5b5f61166c85828601611483565b925050602061167d85828601611483565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116cb57607f821691505b6020821081036116de576116dd611687565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61171b82611350565b915061172683611350565b925082820261173481611350565b9150828204841483151761174b5761174a6116e4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61178982611350565b915061179483611350565b9250826117a4576117a3611752565b5b828204905092915050565b5f6117b982611350565b91506117c483611350565b92508282019050808211156117dc576117db6116e4565b5b92915050565b7f45786365656473206d61782077616c6c6574206c696d697400000000000000005f82015250565b5f6118166018836113e3565b9150611821826117e2565b602082019050919050565b5f6020820190508181035f8301526118438161180a565b9050919050565b7f45786365656473206d6178207472616e73616374696f6e206c696d69740000005f82015250565b5f61187e601d836113e3565b91506118898261184a565b602082019050919050565b5f6020820190508181035f8301526118ab81611872565b9050919050565b5f6060820190506118c55f8301866113b1565b6118d26020830185611359565b6118df6040830184611359565b949350505050565b5f6118f182611350565b91506118fc83611350565b9250828203905081811115611914576119136116e4565b5b92915050565b7f456e636f75726167656d656e742046756e6400000000000000000000000000005f82015250565b5f61194e6012836113e3565b91506119598261191a565b602082019050919050565b5f6040820190506119775f830184611359565b818103602083015261198881611942565b905092915050565b7f456d657267656e63792046756e640000000000000000000000000000000000005f82015250565b5f6119c4600e836113e3565b91506119cf82611990565b602082019050919050565b5f6040820190506119ed5f830184611359565b81810360208301526119fe816119b8565b905092915050565b7f4d61726b6574696e6700000000000000000000000000000000000000000000005f82015250565b5f611a3a6009836113e3565b9150611a4582611a06565b602082019050919050565b5f604082019050611a635f830184611359565b8181036020830152611a7481611a2e565b905092915050565b7f5374616b696e67000000000000000000000000000000000000000000000000005f82015250565b5f611ab06007836113e3565b9150611abb82611a7c565b602082019050919050565b5f604082019050611ad95f830184611359565b8181036020830152611aea81611aa4565b90509291505056fea26469706673582212202f539147d1aa460302257203a4071938a6c19322fd2fb02c721b1379cff1ac1064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x460 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x36B4134A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x2DA JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x202 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH2 0x639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x542 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x54F DUP2 DUP6 DUP6 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x56D PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x57A DUP6 DUP3 DUP6 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x585 DUP6 DUP6 DUP6 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x641 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x64A PUSH0 PUSH2 0xC1C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x654 PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x708 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x756 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x762 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x1 PUSH11 0x1A784379D99DB42000000 PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP3 PUSH2 0x7B8 DUP6 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST GT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x5 PUSH11 0x1A784379D99DB42000000 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x875 CALLER DUP5 DUP5 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x1 PUSH11 0x1A784379D99DB42000000 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x955 PUSH2 0xB95 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CE DUP2 PUSH2 0xC1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x5 PUSH11 0x1A784379D99DB42000000 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA0D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP5 DUP5 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA9F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA90 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB90 DUP4 DUP4 DUP4 PUSH2 0x1137 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x9F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB PUSH2 0x6D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1A JUMPI PUSH2 0xBDE PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xC DUP4 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP PUSH2 0xD4E DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x4 DUP7 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x4 DUP5 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xDE1 DUP6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x1 DUP7 PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x1 DUP5 PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE1B SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE74 DUP6 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x4 DUP7 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x4 DUP5 PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF07 DUP6 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x3 DUP7 PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST PUSH32 0x6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984 PUSH1 0xC PUSH1 0x3 DUP5 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4E SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF61 DUP6 DUP6 DUP4 PUSH2 0xAA5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1048 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1131 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1187 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1255 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1210 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1207 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1362 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137B PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13AA DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x13A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141B DUP3 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x1425 DUP2 DUP6 PUSH2 0x13E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1435 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1461 DUP2 DUP5 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x13A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1491 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14A0 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BB DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D7 JUMPI PUSH2 0x14D6 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E4 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152C PUSH0 DUP4 ADD DUP5 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1556 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1567 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1578 DUP7 DUP3 DUP8 ADD PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1597 DUP2 PUSH2 0x1582 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x158E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1605 DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165F JUMPI PUSH2 0x165E PUSH2 0x1469 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166C DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1687 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1734 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x174B JUMPI PUSH2 0x174A PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1789 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1752 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C4 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1816 PUSH1 0x18 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1821 DUP3 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1843 DUP2 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187E PUSH1 0x1D DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1889 DUP3 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18AB DUP2 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18C5 PUSH0 DUP4 ADD DUP7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x18D2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x18DF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F1 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FC DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x16E4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E636F75726167656D656E742046756E640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194E PUSH1 0x12 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP3 PUSH2 0x191A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1977 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1988 DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D657267656E63792046756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C4 PUSH1 0xE DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CF DUP3 PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19FE DUP2 PUSH2 0x19B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574696E670000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A PUSH1 0x9 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A45 DUP3 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A63 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH1 0x7 DUP4 PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AEA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F MSTORE8 SWAP2 SELFBALANCE 0xD1 0xAA CHAINID SUB MUL 0x25 PUSH19 0x3A4071938A6C19322FD2FB02C721B1379CFF1 0xAC LT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "231:2591:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;616:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;291:59:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;736:37:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;803:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;693:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2657:163:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;580:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1409:392:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;546:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:63:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:61:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:36;685:2;651:36;:::o;616:28::-;;;;;;;;;;;;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;291:59:7:-;332:18;291:59;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;736:37:7:-;771:2;736:37;:::o;803:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;508:32::-;;;;;;;;;;;;;:::o;693:37::-;728:2;693:37;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2657:163:7:-;1531:13:0;:11;:13::i;:::-;2805:8:7::1;2775:18;:27;2794:7;2775:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2657:163:::0;;:::o;580:30::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1409:392:7:-;1511:4;416:3;411:1;332:18;394;;;;:::i;:::-;393:26;;;;:::i;:::-;1575:6;1552:20;1562:9;1552;:20::i;:::-;:29;;;;:::i;:::-;:43;;1531:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;487:5;482:1;332:18;465;;;;:::i;:::-;464:28;;;;:::i;:::-;1663:6;:16;;1655:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:49;1743:10;1755:9;1766:6;1724:18;:49::i;:::-;1790:4;1783:11;;1409:392;;;;:::o;546:28::-;;;;;;;;;;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;356:63:7:-;416:3;411:1;332:18;394;;;;:::i;:::-;393:26;;;;:::i;:::-;356:63;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;431:61:7:-;487:5;482:1;332:18;465;;;;:::i;:::-;464:28;;;;:::i;:::-;431:61;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1807:844:7:-;1935:17;1977:3;728:2;1956:6;:17;;;;:::i;:::-;1955:25;;;;:::i;:::-;1935:45;;1990:18;2020:9;2011:6;:18;;;;:::i;:::-;1990:39;;2040:64;2056:6;2064:17;;;;;;;;;;;2101:2;2096:1;2084:9;:13;;;;:::i;:::-;2083:20;;;;:::i;:::-;2040:15;:64::i;:::-;2119:58;2152:2;2147:1;2135:9;:13;;;;:::i;:::-;2134:20;;;;:::i;:::-;2119:58;;;;;;:::i;:::-;;;;;;;;2188:60;2204:6;2212:13;;;;;;;;;;;2245:2;2240:1;2228:9;:13;;;;:::i;:::-;2227:20;;;;:::i;:::-;2188:15;:60::i;:::-;2263:54;2296:2;2291:1;2279:9;:13;;;;:::i;:::-;2278:20;;;;:::i;:::-;2263:54;;;;;;:::i;:::-;;;;;;;;2328:62;2344:6;2352:15;;;;;;;;;;;2387:2;2382:1;2370:9;:13;;;;:::i;:::-;2369:20;;;;:::i;:::-;2328:15;:62::i;:::-;2405:49;2438:2;2433:1;2421:9;:13;;;;:::i;:::-;2420:20;;;;:::i;:::-;2405:49;;;;;;:::i;:::-;;;;;;;;2465:60;2481:6;2489:13;;;;;;;;;;;2522:2;2517:1;2505:9;:13;;;;:::i;:::-;2504:20;;;;:::i;:::-;2465:15;:60::i;:::-;2540:47;2573:2;2568:1;2556:9;:13;;;;:::i;:::-;2555:20;;;;:::i;:::-;2540:47;;;;;;:::i;:::-;;;;;;;;2598:46;2614:6;2622:9;2633:10;2598:15;:46::i;:::-;1925:726;;1807:844;;;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:99::-;1080:6;1114:5;1108:12;1098:22;;1028:99;;;:::o;1133:169::-;1217:11;1251:6;1246:3;1239:19;1291:4;1286:3;1282:14;1267:29;;1133:169;;;;:::o;1308:139::-;1397:6;1392:3;1387;1381:23;1438:1;1429:6;1424:3;1420:16;1413:27;1308:139;;;:::o;1453:102::-;1494:6;1545:2;1541:7;1536:2;1529:5;1525:14;1521:28;1511:38;;1453:102;;;:::o;1561:377::-;1649:3;1677:39;1710:5;1677:39;:::i;:::-;1732:71;1796:6;1791:3;1732:71;:::i;:::-;1725:78;;1812:65;1870:6;1865:3;1858:4;1851:5;1847:16;1812:65;:::i;:::-;1902:29;1924:6;1902:29;:::i;:::-;1897:3;1893:39;1886:46;;1653:285;1561:377;;;;:::o;1944:313::-;2057:4;2095:2;2084:9;2080:18;2072:26;;2144:9;2138:4;2134:20;2130:1;2119:9;2115:17;2108:47;2172:78;2245:4;2236:6;2172:78;:::i;:::-;2164:86;;1944:313;;;;:::o;2344:117::-;2453:1;2450;2443:12;2590:122;2663:24;2681:5;2663:24;:::i;:::-;2656:5;2653:35;2643:63;;2702:1;2699;2692:12;2643:63;2590:122;:::o;2718:139::-;2764:5;2802:6;2789:20;2780:29;;2818:33;2845:5;2818:33;:::i;:::-;2718:139;;;;:::o;2863:122::-;2936:24;2954:5;2936:24;:::i;:::-;2929:5;2926:35;2916:63;;2975:1;2972;2965:12;2916:63;2863:122;:::o;2991:139::-;3037:5;3075:6;3062:20;3053:29;;3091:33;3118:5;3091:33;:::i;:::-;2991:139;;;;:::o;3136:474::-;3204:6;3212;3261:2;3249:9;3240:7;3236:23;3232:32;3229:119;;;3267:79;;:::i;:::-;3229:119;3387:1;3412:53;3457:7;3448:6;3437:9;3433:22;3412:53;:::i;:::-;3402:63;;3358:117;3514:2;3540:53;3585:7;3576:6;3565:9;3561:22;3540:53;:::i;:::-;3530:63;;3485:118;3136:474;;;;;:::o;3616:90::-;3650:7;3693:5;3686:13;3679:21;3668:32;;3616:90;;;:::o;3712:109::-;3793:21;3808:5;3793:21;:::i;:::-;3788:3;3781:34;3712:109;;:::o;3827:210::-;3914:4;3952:2;3941:9;3937:18;3929:26;;3965:65;4027:1;4016:9;4012:17;4003:6;3965:65;:::i;:::-;3827:210;;;;:::o;4043:619::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4043:619;;;;;:::o;4668:86::-;4703:7;4743:4;4736:5;4732:16;4721:27;;4668:86;;;:::o;4760:112::-;4843:22;4859:5;4843:22;:::i;:::-;4838:3;4831:35;4760:112;;:::o;4878:214::-;4967:4;5005:2;4994:9;4990:18;4982:26;;5018:67;5082:1;5071:9;5067:17;5058:6;5018:67;:::i;:::-;4878:214;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:116::-;5503:21;5518:5;5503:21;:::i;:::-;5496:5;5493:32;5483:60;;5539:1;5536;5529:12;5483:60;5433:116;:::o;5555:133::-;5598:5;5636:6;5623:20;5614:29;;5652:30;5676:5;5652:30;:::i;:::-;5555:133;;;;:::o;5694:468::-;5759:6;5767;5816:2;5804:9;5795:7;5791:23;5787:32;5784:119;;;5822:79;;:::i;:::-;5784:119;5942:1;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5913:117;6069:2;6095:50;6137:7;6128:6;6117:9;6113:22;6095:50;:::i;:::-;6085:60;;6040:115;5694:468;;;;;:::o;6168:474::-;6236:6;6244;6293:2;6281:9;6272:7;6268:23;6264:32;6261:119;;;6299:79;;:::i;:::-;6261:119;6419:1;6444:53;6489:7;6480:6;6469:9;6465:22;6444:53;:::i;:::-;6434:63;;6390:117;6546:2;6572:53;6617:7;6608:6;6597:9;6593:22;6572:53;:::i;:::-;6562:63;;6517:118;6168:474;;;;;:::o;6648:180::-;6696:77;6693:1;6686:88;6793:4;6790:1;6783:15;6817:4;6814:1;6807:15;6834:320;6878:6;6915:1;6909:4;6905:12;6895:22;;6962:1;6956:4;6952:12;6983:18;6973:81;;7039:4;7031:6;7027:17;7017:27;;6973:81;7101:2;7093:6;7090:14;7070:18;7067:38;7064:84;;7120:18;;:::i;:::-;7064:84;6885:269;6834:320;;;:::o;7160:180::-;7208:77;7205:1;7198:88;7305:4;7302:1;7295:15;7329:4;7326:1;7319:15;7346:410;7386:7;7409:20;7427:1;7409:20;:::i;:::-;7404:25;;7443:20;7461:1;7443:20;:::i;:::-;7438:25;;7498:1;7495;7491:9;7520:30;7538:11;7520:30;:::i;:::-;7509:41;;7699:1;7690:7;7686:15;7683:1;7680:22;7660:1;7653:9;7633:83;7610:139;;7729:18;;:::i;:::-;7610:139;7394:362;7346:410;;;;:::o;7762:180::-;7810:77;7807:1;7800:88;7907:4;7904:1;7897:15;7931:4;7928:1;7921:15;7948:185;7988:1;8005:20;8023:1;8005:20;:::i;:::-;8000:25;;8039:20;8057:1;8039:20;:::i;:::-;8034:25;;8078:1;8068:35;;8083:18;;:::i;:::-;8068:35;8125:1;8122;8118:9;8113:14;;7948:185;;;;:::o;8139:191::-;8179:3;8198:20;8216:1;8198:20;:::i;:::-;8193:25;;8232:20;8250:1;8232:20;:::i;:::-;8227:25;;8275:1;8272;8268:9;8261:16;;8296:3;8293:1;8290:10;8287:36;;;8303:18;;:::i;:::-;8287:36;8139:191;;;;:::o;8336:174::-;8476:26;8472:1;8464:6;8460:14;8453:50;8336:174;:::o;8516:366::-;8658:3;8679:67;8743:2;8738:3;8679:67;:::i;:::-;8672:74;;8755:93;8844:3;8755:93;:::i;:::-;8873:2;8868:3;8864:12;8857:19;;8516:366;;;:::o;8888:419::-;9054:4;9092:2;9081:9;9077:18;9069:26;;9141:9;9135:4;9131:20;9127:1;9116:9;9112:17;9105:47;9169:131;9295:4;9169:131;:::i;:::-;9161:139;;8888:419;;;:::o;9313:179::-;9453:31;9449:1;9441:6;9437:14;9430:55;9313:179;:::o;9498:366::-;9640:3;9661:67;9725:2;9720:3;9661:67;:::i;:::-;9654:74;;9737:93;9826:3;9737:93;:::i;:::-;9855:2;9850:3;9846:12;9839:19;;9498:366;;;:::o;9870:419::-;10036:4;10074:2;10063:9;10059:18;10051:26;;10123:9;10117:4;10113:20;10109:1;10098:9;10094:17;10087:47;10151:131;10277:4;10151:131;:::i;:::-;10143:139;;9870:419;;;:::o;10295:442::-;10444:4;10482:2;10471:9;10467:18;10459:26;;10495:71;10563:1;10552:9;10548:17;10539:6;10495:71;:::i;:::-;10576:72;10644:2;10633:9;10629:18;10620:6;10576:72;:::i;:::-;10658;10726:2;10715:9;10711:18;10702:6;10658:72;:::i;:::-;10295:442;;;;;;:::o;10743:194::-;10783:4;10803:20;10821:1;10803:20;:::i;:::-;10798:25;;10837:20;10855:1;10837:20;:::i;:::-;10832:25;;10881:1;10878;10874:9;10866:17;;10905:1;10899:4;10896:11;10893:37;;;10910:18;;:::i;:::-;10893:37;10743:194;;;;:::o;10943:168::-;11083:20;11079:1;11071:6;11067:14;11060:44;10943:168;:::o;11117:366::-;11259:3;11280:67;11344:2;11339:3;11280:67;:::i;:::-;11273:74;;11356:93;11445:3;11356:93;:::i;:::-;11474:2;11469:3;11465:12;11458:19;;11117:366;;;:::o;11489:529::-;11683:4;11721:2;11710:9;11706:18;11698:26;;11734:71;11802:1;11791:9;11787:17;11778:6;11734:71;:::i;:::-;11852:9;11846:4;11842:20;11837:2;11826:9;11822:18;11815:48;11880:131;12006:4;11880:131;:::i;:::-;11872:139;;11489:529;;;;:::o;12024:164::-;12164:16;12160:1;12152:6;12148:14;12141:40;12024:164;:::o;12194:366::-;12336:3;12357:67;12421:2;12416:3;12357:67;:::i;:::-;12350:74;;12433:93;12522:3;12433:93;:::i;:::-;12551:2;12546:3;12542:12;12535:19;;12194:366;;;:::o;12566:529::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12811:71;12879:1;12868:9;12864:17;12855:6;12811:71;:::i;:::-;12929:9;12923:4;12919:20;12914:2;12903:9;12899:18;12892:48;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12566:529;;;;:::o;13101:159::-;13241:11;13237:1;13229:6;13225:14;13218:35;13101:159;:::o;13266:365::-;13408:3;13429:66;13493:1;13488:3;13429:66;:::i;:::-;13422:73;;13504:93;13593:3;13504:93;:::i;:::-;13622:2;13617:3;13613:12;13606:19;;13266:365;;;:::o;13637:529::-;13831:4;13869:2;13858:9;13854:18;13846:26;;13882:71;13950:1;13939:9;13935:17;13926:6;13882:71;:::i;:::-;14000:9;13994:4;13990:20;13985:2;13974:9;13970:18;13963:48;14028:131;14154:4;14028:131;:::i;:::-;14020:139;;13637:529;;;;:::o;14172:157::-;14312:9;14308:1;14300:6;14296:14;14289:33;14172:157;:::o;14335:365::-;14477:3;14498:66;14562:1;14557:3;14498:66;:::i;:::-;14491:73;;14573:93;14662:3;14573:93;:::i;:::-;14691:2;14686:3;14682:12;14675:19;;14335:365;;;:::o;14706:529::-;14900:4;14938:2;14927:9;14923:18;14915:26;;14951:71;15019:1;15008:9;15004:17;14995:6;14951:71;:::i;:::-;15069:9;15063:4;15059:20;15054:2;15043:9;15039:18;15032:48;15097:131;15223:4;15097:131;:::i;:::-;15089:139;;14706:529;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1390400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BUY_TAX()": "349",
								"INITIAL_SUPPLY()": "348",
								"MAX_TX()": "infinite",
								"MAX_WALLET()": "infinite",
								"SELL_TAX()": "458",
								"SLIPPAGE()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "383",
								"emergencyFund()": "2552",
								"encouragementFund()": "2619",
								"isExcludedFromFees(address)": "2922",
								"marketingWallet()": "2597",
								"name()": "infinite",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"stakingWallet()": "2554",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateExcludedAccountStatus(address,bool)": "infinite"
							},
							"internal": {
								"_transferWithTaxes(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 920,
									"end": 1403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5845414D20546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5845414D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1160,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1143,
									"end": 1160,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1143,
									"end": 1181,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1221,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1204,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1191,
									"end": 1204,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1221,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1249,
									"end": 1265,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1231,
									"end": 1246,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1265,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1305,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1288,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1275,
									"end": 1288,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1275,
									"end": 1305,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1332,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 332,
									"end": 350,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1A784379D99DB42000000"
								},
								{
									"begin": 1316,
									"end": 1321,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1316,
									"end": 1321,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1321,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1349,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1349,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1349,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1349,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1388,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1396,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 942,
									"end": 948,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 956,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 958,
									"end": 964,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1015,
									"end": 1018,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1003,
									"end": 1012,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1001,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 990,
									"end": 1013,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1022,
									"end": 1101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1223,
									"end": 1230,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1212,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1199,
									"end": 1221,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1167,
									"end": 1231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1241,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1280,
									"end": 1282,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1306,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1380,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1501,
									"end": 1508,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1481,
									"end": 1490,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1499,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1445,
									"end": 1509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1519,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1560,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1640,
									"end": 1647,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1637,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1629,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1638,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1584,
									"end": 1648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1658,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1671,
									"end": 1770,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1671,
									"end": 1770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1757,
									"end": 1762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1751,
									"end": 1763,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1671,
									"end": 1770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1671,
									"end": 1770,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1671,
									"end": 1770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1671,
									"end": 1770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1776,
									"end": 1956,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1776,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1824,
									"end": 1901,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1821,
									"end": 1822,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1814,
									"end": 1902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1945,
									"end": 1949,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1942,
									"end": 1943,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1935,
									"end": 1950,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 2142,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1962,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2087,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2007,
									"end": 2008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2000,
									"end": 2088,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2097,
									"end": 2112,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2135,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2128,
									"end": 2129,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2136,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2468,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2148,
									"end": 2468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2192,
									"end": 2198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2223,
									"end": 2227,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2219,
									"end": 2231,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2231,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2297,
									"end": 2315,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2287,
									"end": 2368,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2357,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2341,
									"end": 2358,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2331,
									"end": 2358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2331,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 2368,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2287,
									"end": 2368,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2404,
									"end": 2418,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2402,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2419,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2378,
									"end": 2462,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2434,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2434,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2434,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2434,
									"end": 2452,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2434,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2462,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2378,
									"end": 2462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2199,
									"end": 2468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2468,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2468,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2468,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2615,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2474,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2546,
									"end": 2549,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2549,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2549,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2569,
									"end": 2572,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2559,
									"end": 2573,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2603,
									"end": 2607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2600,
									"end": 2601,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2590,
									"end": 2608,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2582,
									"end": 2608,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2582,
									"end": 2608,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2615,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2615,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2714,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2621,
									"end": 2714,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2705,
									"end": 2707,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2700,
									"end": 2702,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2693,
									"end": 2698,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2703,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2708,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2675,
									"end": 2708,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2675,
									"end": 2708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2714,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2714,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2714,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2772,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2814,
									"end": 2819,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2808,
									"end": 2812,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2804,
									"end": 2820,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2783,
									"end": 2820,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2783,
									"end": 2820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2827,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2902,
									"end": 2908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2952,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2940,
									"end": 2950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2936,
									"end": 2954,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3072,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 3005,
									"end": 3071,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2994,
									"end": 3003,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3072,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2975,
									"end": 3072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3072,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2975,
									"end": 3072,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3123,
									"end": 3131,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3121,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3093,
									"end": 3132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3132,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3093,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3081,
									"end": 3132,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3081,
									"end": 3132,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3165,
									"end": 3169,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3170,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3159,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3150,
									"end": 3171,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3171,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3214,
									"end": 3218,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3204,
									"end": 3212,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3200,
									"end": 3219,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3193,
									"end": 3198,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3190,
									"end": 3220,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3180,
									"end": 3220,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3180,
									"end": 3220,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2909,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2909,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3309,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3232,
									"end": 3309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3298,
									"end": 3303,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3309,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3309,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3375,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3315,
									"end": 3375,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3343,
									"end": 3346,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3369,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3369,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3375,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3375,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3523,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3381,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3431,
									"end": 3440,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3464,
									"end": 3517,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3482,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3491,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3509,
									"end": 3514,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3491,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3491,
									"end": 3515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3491,
									"end": 3515,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3491,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3482,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3482,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3482,
									"end": 3516,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3482,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3464,
									"end": 3517,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3464,
									"end": 3517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3464,
									"end": 3517,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3464,
									"end": 3517,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3517,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3523,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3523,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3523,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3604,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3529,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3575,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3598,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3879,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3610,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3720,
									"end": 3759,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3751,
									"end": 3758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3720,
									"end": 3759,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3720,
									"end": 3759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3720,
									"end": 3759,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3720,
									"end": 3759,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3872,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3830,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3854,
									"end": 3870,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3830,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3830,
									"end": 3871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3830,
									"end": 3871,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3830,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3822,
									"end": 3828,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3815,
									"end": 3819,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3809,
									"end": 3820,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3872,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3781,
									"end": 3872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3872,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3781,
									"end": 3872,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3775,
									"end": 3779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3768,
									"end": 3873,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3686,
									"end": 3879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3885,
									"end": 3958,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3885,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3930,
									"end": 3933,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3885,
									"end": 3958,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3885,
									"end": 3958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4153,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3964,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4041,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4041,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4073,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4041,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4082,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4140,
									"end": 4146,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4132,
									"end": 4138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4130,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4082,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4082,
									"end": 4147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4082,
									"end": 4147,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4082,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4153,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4153,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4153,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4345,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4159,
									"end": 4345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4236,
									"end": 4239,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4234,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4226,
									"end": 4240,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4327,
									"end": 4328,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4320,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4290,
									"end": 4329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4329,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4290,
									"end": 4329,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4263,
									"end": 4264,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4256,
									"end": 4261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4252,
									"end": 4265,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4243,
									"end": 4265,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4243,
									"end": 4265,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4219,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4351,
									"end": 4894,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4351,
									"end": 4894,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4452,
									"end": 4454,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4447,
									"end": 4450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4444,
									"end": 4455,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4441,
									"end": 4887,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4441,
									"end": 4887,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4441,
									"end": 4887,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4486,
									"end": 4524,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4518,
									"end": 4523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4486,
									"end": 4524,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4486,
									"end": 4524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4486,
									"end": 4524,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4486,
									"end": 4524,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4588,
									"end": 4598,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4570,
									"end": 4599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4599,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4570,
									"end": 4599,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4560,
									"end": 4568,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4556,
									"end": 4600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4753,
									"end": 4755,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4741,
									"end": 4751,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4756,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4735,
									"end": 4784,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4735,
									"end": 4784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4735,
									"end": 4784,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4759,
									"end": 4782,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4759,
									"end": 4782,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4735,
									"end": 4784,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4735,
									"end": 4784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4877,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4853,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4871,
									"end": 4874,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4853,
									"end": 4875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4875,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4853,
									"end": 4875,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4843,
									"end": 4851,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4839,
									"end": 4876,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4826,
									"end": 4837,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4877,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4797,
									"end": 4877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4797,
									"end": 4877,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4797,
									"end": 4877,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4456,
									"end": 4887,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4456,
									"end": 4887,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4441,
									"end": 4887,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4441,
									"end": 4887,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4351,
									"end": 4894,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4351,
									"end": 4894,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4351,
									"end": 4894,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4351,
									"end": 4894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4962,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5004,
									"end": 5009,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4998,
									"end": 5002,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5010,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 5010,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 5010,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4900,
									"end": 5017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5067,
									"end": 5073,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5100,
									"end": 5151,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5148,
									"end": 5149,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5144,
									"end": 5150,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5136,
									"end": 5141,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5133,
									"end": 5134,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5129,
									"end": 5142,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5151,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5100,
									"end": 5151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5151,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5100,
									"end": 5151,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5096,
									"end": 5152,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5181,
									"end": 5185,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5175,
									"end": 5179,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5171,
									"end": 5186,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5186,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5186,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5192,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5277,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5419,
									"end": 5448,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5444,
									"end": 5447,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5438,
									"end": 5442,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5419,
									"end": 5448,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5419,
									"end": 5448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5419,
									"end": 5448,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5419,
									"end": 5448,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5411,
									"end": 5448,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5411,
									"end": 5448,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5481,
									"end": 5484,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5478,
									"end": 5479,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5474,
									"end": 5485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5472,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5465,
									"end": 5486,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5457,
									"end": 5486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5457,
									"end": 5486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5497,
									"end": 6892,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5497,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5614,
									"end": 5651,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5647,
									"end": 5650,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5614,
									"end": 5651,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5614,
									"end": 5651,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5614,
									"end": 5651,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5614,
									"end": 5651,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5716,
									"end": 5734,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5708,
									"end": 5714,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5705,
									"end": 5735,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5758,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5758,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5702,
									"end": 5758,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5738,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5738,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5738,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5738,
									"end": 5756,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5738,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5758,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5702,
									"end": 5758,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5820,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5814,
									"end": 5818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5808,
									"end": 5819,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5820,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5782,
									"end": 5820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5820,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5782,
									"end": 5820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5867,
									"end": 5934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5927,
									"end": 5933,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5913,
									"end": 5917,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5867,
									"end": 5934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5867,
									"end": 5934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5867,
									"end": 5934,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5867,
									"end": 5934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5961,
									"end": 5962,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5985,
									"end": 5989,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5972,
									"end": 5989,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5972,
									"end": 5989,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6019,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6009,
									"end": 6015,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6034,
									"end": 6035,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6691,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6708,
									"end": 6714,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6705,
									"end": 6782,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6705,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6705,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6757,
									"end": 6766,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6752,
									"end": 6755,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6748,
									"end": 6767,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6742,
									"end": 6768,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6733,
									"end": 6768,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6733,
									"end": 6768,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6705,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6705,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6808,
									"end": 6875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6868,
									"end": 6874,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6861,
									"end": 6866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6808,
									"end": 6875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 6808,
									"end": 6875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6808,
									"end": 6875,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6808,
									"end": 6875,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6795,
									"end": 6876,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6664,
									"end": 6886,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5999,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5999,
									"end": 6886,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6029,
									"end": 6647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6085,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6077,
									"end": 6086,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6069,
									"end": 6075,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6087,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6115,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6147,
									"end": 6151,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6115,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 6115,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6115,
									"end": 6152,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6115,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6174,
									"end": 6175,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6202,
									"end": 6209,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6199,
									"end": 6200,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6196,
									"end": 6210,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6281,
									"end": 6290,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6276,
									"end": 6279,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6272,
									"end": 6291,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6266,
									"end": 6292,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6264,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6251,
									"end": 6293,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6332,
									"end": 6333,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6324,
									"end": 6330,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6334,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6310,
									"end": 6334,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6310,
									"end": 6334,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6381,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6368,
									"end": 6377,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6364,
									"end": 6382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6382,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6382,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6229,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6218,
									"end": 6230,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6213,
									"end": 6230,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6213,
									"end": 6230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6188,
									"end": 6396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6430,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6415,
									"end": 6422,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6412,
									"end": 6431,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6409,
									"end": 6588,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6409,
									"end": 6588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6409,
									"end": 6588,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6482,
									"end": 6491,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6480,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6473,
									"end": 6492,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6493,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6525,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6567,
									"end": 6571,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6565,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6572,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6544,
									"end": 6553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6525,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 6525,
									"end": 6573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6525,
									"end": 6573,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6525,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6517,
									"end": 6523,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6510,
									"end": 6574,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6432,
									"end": 6588,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6409,
									"end": 6588,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6409,
									"end": 6588,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6635,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6630,
									"end": 6631,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6622,
									"end": 6628,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6618,
									"end": 6632,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6614,
									"end": 6636,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6612,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6601,
									"end": 6637,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6036,
									"end": 6647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6036,
									"end": 6647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6036,
									"end": 6647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5999,
									"end": 6886,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5999,
									"end": 6886,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5999,
									"end": 6886,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5589,
									"end": 6892,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5589,
									"end": 6892,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5589,
									"end": 6892,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5497,
									"end": 6892,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5497,
									"end": 6892,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5497,
									"end": 6892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 7003,
									"end": 7008,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 6985,
									"end": 7009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6980,
									"end": 6983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6973,
									"end": 7010,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6898,
									"end": 7016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7115,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7153,
									"end": 7155,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7142,
									"end": 7151,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7138,
									"end": 7156,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7223,
									"end": 7232,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7236,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7210,
									"end": 7216,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7166,
									"end": 7237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7022,
									"end": 7244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7430,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7250,
									"end": 7430,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7298,
									"end": 7375,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7295,
									"end": 7296,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7288,
									"end": 7376,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7395,
									"end": 7399,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7392,
									"end": 7393,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7385,
									"end": 7400,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7419,
									"end": 7423,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7416,
									"end": 7417,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7409,
									"end": 7424,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7476,
									"end": 7479,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7495,
									"end": 7515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7513,
									"end": 7514,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7495,
									"end": 7515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7495,
									"end": 7515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7495,
									"end": 7515,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7495,
									"end": 7515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7490,
									"end": 7515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7490,
									"end": 7515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7529,
									"end": 7549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7549,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7529,
									"end": 7549,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7524,
									"end": 7549,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7524,
									"end": 7549,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7565,
									"end": 7574,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7558,
									"end": 7574,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7558,
									"end": 7574,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7587,
									"end": 7597,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7584,
									"end": 7620,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7584,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7584,
									"end": 7620,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7600,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7600,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7600,
									"end": 7618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7600,
									"end": 7618,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7600,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7584,
									"end": 7620,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7584,
									"end": 7620,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7436,
									"end": 7627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7751,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 7633,
									"end": 7751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7720,
									"end": 7744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7738,
									"end": 7743,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7720,
									"end": 7744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7720,
									"end": 7744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7720,
									"end": 7744,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7720,
									"end": 7744,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7715,
									"end": 7718,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7708,
									"end": 7745,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7633,
									"end": 7751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7906,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7944,
									"end": 7946,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7933,
									"end": 7942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7929,
									"end": 7947,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7947,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7947,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8028,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 8025,
									"end": 8026,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8014,
									"end": 8023,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8010,
									"end": 8027,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8001,
									"end": 8007,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8028,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7957,
									"end": 8028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 8028,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7957,
									"end": 8028,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8038,
									"end": 8110,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8106,
									"end": 8108,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8095,
									"end": 8104,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8109,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8082,
									"end": 8088,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8038,
									"end": 8110,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8038,
									"end": 8110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8038,
									"end": 8110,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8038,
									"end": 8110,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8120,
									"end": 8192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 8188,
									"end": 8190,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8177,
									"end": 8186,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8173,
									"end": 8191,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8164,
									"end": 8170,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8120,
									"end": 8192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8120,
									"end": 8192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8120,
									"end": 8192,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 8120,
									"end": 8192,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 8199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8298,
									"end": 8302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8325,
									"end": 8334,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8321,
									"end": 8339,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8417,
									"end": 8418,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8406,
									"end": 8415,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 8419,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8393,
									"end": 8399,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8420,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8349,
									"end": 8420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8349,
									"end": 8420,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8349,
									"end": 8420,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8205,
									"end": 8427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2822,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f539147d1aa460302257203a4071938a6c19322fd2fb02c721b1379cff1ac1064736f6c634300081a0033",
									".code": [
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "CC859378"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "DF7787A4"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "F3B2DB3F"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "753CAFC3"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "75F0A874"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "2FF2E9DC"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "2FF2E9DC"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "36B4134A"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "4FBEE193"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "52A6A9EC"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "54AD8AEE"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "2AF37BB"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "6EE6AD8"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 2822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 651,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 651,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 616,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 616,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 291,
											"end": 350,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 291,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 736,
											"end": 773,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 736,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 803,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 803,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 803,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 508,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 693,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 693,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2657,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2657,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 580,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 580,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1409,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1409,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1409,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 546,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 546,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 356,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 356,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 356,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 431,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 431,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 685,
											"end": 687,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 651,
											"end": 687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 291,
											"end": 350,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 291,
											"end": 350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 291,
											"end": 350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 736,
											"end": 773,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 803,
											"end": 853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 508,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 693,
											"end": 730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 693,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2801,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 394,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 393,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1562,
											"end": 1571,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1552,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1552,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 465,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1679,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1655,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1655,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1743,
											"end": 1753,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1724,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1773,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1724,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 546,
											"end": 574,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 356,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 416,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 394,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 394,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 394,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 393,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 356,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 431,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 465,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 465,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 2651,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1807,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1980,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1956,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1955,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2011,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2084,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2083,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2040,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2104,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2040,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984"
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2135,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2135,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2134,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2119,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2177,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2204,
											"end": 2210,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2228,
											"end": 2237,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2228,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2227,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2188,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2248,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2188,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984"
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2279,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2279,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2278,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2263,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2317,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2379,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2370,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2369,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2328,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2390,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2328,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984"
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2421,
											"end": 2430,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2421,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2420,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2405,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2454,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2481,
											"end": 2487,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2505,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2505,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2504,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2465,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2525,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2465,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "PUSH",
											"source": 7,
											"value": "6E232B0ACF46272DACF889AF6767574775A324B133D42B3B8CFFA9CD13159984"
										},
										{
											"begin": 2573,
											"end": 2575,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2556,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2555,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2555,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2540,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2587,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2598,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2598,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 2651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 2651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1028,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1308,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1397,
											"end": 1403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1390,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1413,
											"end": 1440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1453,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1541,
											"end": 1548,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1677,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1732,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1732,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1803,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1862,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1856,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1812,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1877,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1812,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1902,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2172,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2250,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2172,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 2257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2461,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2344,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2712,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2590,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2681,
											"end": 2686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2663,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2653,
											"end": 2688,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2818,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2818,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2985,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2863,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2936,
											"end": 2960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2960,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2936,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2961,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2916,
											"end": 2979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2979,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2916,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3082,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3091,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3247,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3259,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3348,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3229,
											"end": 3348,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3267,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3348,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3229,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3446,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3412,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3465,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3540,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3706,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3616,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3699,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3700,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3821,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3712,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3808,
											"end": 3813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3793,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3814,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3793,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3815,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3954,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3965,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4030,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3965,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4183,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4336,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4409,
											"end": 4527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4748,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4843,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5018,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5503,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5493,
											"end": 5525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5643,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5676,
											"end": 5681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5652,
											"end": 5682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5802,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5787,
											"end": 5819,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5822,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5967,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 6137,
											"end": 6144,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6126,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6095,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6290,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6272,
											"end": 6279,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6291,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6296,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6380,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6261,
											"end": 6380,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6299,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6299,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 6299,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6299,
											"end": 6378,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6299,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6380,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6261,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6478,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6465,
											"end": 6487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6444,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6497,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6390,
											"end": 6507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6617,
											"end": 6624,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6606,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6572,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6572,
											"end": 6625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6572,
											"end": 6625,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6572,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6828,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6648,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6773,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6790,
											"end": 6791,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 7154,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6834,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6878,
											"end": 6884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6917,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6956,
											"end": 6960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6964,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6973,
											"end": 7054,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7027,
											"end": 7044,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6973,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7104,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7067,
											"end": 7105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 7064,
											"end": 7148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 7120,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7148,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 7064,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 7154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 7154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 7154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 7154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 7154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7340,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 7160,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7285,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7309,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7310,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7333,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7326,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7334,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7386,
											"end": 7393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7409,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7427,
											"end": 7428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7409,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7409,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7461,
											"end": 7462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7443,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7463,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7443,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7438,
											"end": 7463,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7438,
											"end": 7463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7491,
											"end": 7500,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7538,
											"end": 7549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7520,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7701,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7680,
											"end": 7702,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7662,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7716,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7610,
											"end": 7749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 7729,
											"end": 7747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7749,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7610,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7942,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 7762,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7887,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7807,
											"end": 7808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7888,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7935,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7936,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 7989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8005,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8025,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8005,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8039,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8059,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8068,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8068,
											"end": 8103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8083,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8068,
											"end": 8103,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8068,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8127,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8179,
											"end": 8182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8198,
											"end": 8218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8218,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8198,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8193,
											"end": 8218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8193,
											"end": 8218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8232,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8252,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8261,
											"end": 8277,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8261,
											"end": 8277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8296,
											"end": 8299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8287,
											"end": 8323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 8303,
											"end": 8321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8323,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8287,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8510,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 8336,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8476,
											"end": 8502,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D61782077616C6C6574206C696D69740000000000000000"
										},
										{
											"begin": 8472,
											"end": 8473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8460,
											"end": 8474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8882,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 8516,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8658,
											"end": 8661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8679,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8743,
											"end": 8745,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8679,
											"end": 8746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8746,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8679,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8755,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8755,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 8755,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8755,
											"end": 8848,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8755,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8873,
											"end": 8875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8868,
											"end": 8871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8857,
											"end": 8876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 9307,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8888,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9081,
											"end": 9090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9151,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9127,
											"end": 9128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9105,
											"end": 9152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9169,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9169,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9169,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9169,
											"end": 9300,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9169,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 9300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 9300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 9307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 9307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 9307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9492,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9313,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9453,
											"end": 9484,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D6178207472616E73616374696F6E206C696D6974000000"
										},
										{
											"begin": 9449,
											"end": 9450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9430,
											"end": 9485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9640,
											"end": 9643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9725,
											"end": 9727,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 9720,
											"end": 9723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 9661,
											"end": 9728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9826,
											"end": 9829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9737,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9850,
											"end": 9853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9846,
											"end": 9858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10087,
											"end": 10134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10277,
											"end": 10281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 10151,
											"end": 10282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10143,
											"end": 10282,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10143,
											"end": 10282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 10289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10482,
											"end": 10484,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10471,
											"end": 10480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10495,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10566,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10495,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10644,
											"end": 10646,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10633,
											"end": 10642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10626,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10576,
											"end": 10648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10648,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10576,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10726,
											"end": 10728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10715,
											"end": 10724,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10658,
											"end": 10730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10658,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 10821,
											"end": 10822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10803,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10803,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10803,
											"end": 10823,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 10803,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 10837,
											"end": 10857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10857,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10837,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10878,
											"end": 10879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10883,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10905,
											"end": 10906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10899,
											"end": 10903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10896,
											"end": 10907,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10910,
											"end": 10928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10893,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10943,
											"end": 11111,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 10943,
											"end": 11111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "PUSH",
											"source": 8,
											"value": "456E636F75726167656D656E742046756E640000000000000000000000000000"
										},
										{
											"begin": 11079,
											"end": 11080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11060,
											"end": 11104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10943,
											"end": 11111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10943,
											"end": 11111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11483,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11117,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11344,
											"end": 11346,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11339,
											"end": 11342,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11280,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11280,
											"end": 11347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11280,
											"end": 11347,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11280,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11347,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11445,
											"end": 11448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 11356,
											"end": 11449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11449,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11356,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11474,
											"end": 11476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11469,
											"end": 11472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11465,
											"end": 11477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11458,
											"end": 11477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11683,
											"end": 11687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11698,
											"end": 11724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11698,
											"end": 11724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 11802,
											"end": 11803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11778,
											"end": 11784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11734,
											"end": 11805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11805,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 11734,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11846,
											"end": 11850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 11862,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11837,
											"end": 11839,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11815,
											"end": 11863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11880,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12011,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11880,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 12011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 12011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 12018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12188,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12024,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12164,
											"end": 12180,
											"name": "PUSH",
											"source": 8,
											"value": "456D657267656E63792046756E64000000000000000000000000000000000000"
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12148,
											"end": 12162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12336,
											"end": 12339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12421,
											"end": 12423,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12357,
											"end": 12424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12350,
											"end": 12424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12350,
											"end": 12424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 12522,
											"end": 12525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12433,
											"end": 12526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12542,
											"end": 12554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12535,
											"end": 12554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12535,
											"end": 12554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12760,
											"end": 12764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12800,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12787,
											"end": 12796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12775,
											"end": 12801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12775,
											"end": 12801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 12879,
											"end": 12880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12868,
											"end": 12877,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12864,
											"end": 12881,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 12811,
											"end": 12882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12882,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 12811,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12923,
											"end": 12927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12914,
											"end": 12916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12912,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12892,
											"end": 12940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13083,
											"end": 13087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12957,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 13088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 13088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 13095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13260,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 13101,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13252,
											"name": "PUSH",
											"source": 8,
											"value": "4D61726B6574696E670000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13237,
											"end": 13238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13225,
											"end": 13239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13218,
											"end": 13253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13266,
											"end": 13631,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 13266,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13429,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 13493,
											"end": 13494,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 13488,
											"end": 13491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13429,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13429,
											"end": 13495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13429,
											"end": 13495,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 13429,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13504,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 13593,
											"end": 13596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13504,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 13504,
											"end": 13597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13504,
											"end": 13597,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 13504,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13622,
											"end": 13624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13266,
											"end": 13631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13266,
											"end": 13631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13266,
											"end": 13631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13266,
											"end": 13631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13831,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13869,
											"end": 13871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13950,
											"end": 13951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13935,
											"end": 13952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13926,
											"end": 13932,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 13882,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13953,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13882,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 13998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13990,
											"end": 14010,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13985,
											"end": 13987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13974,
											"end": 13983,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 13988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13963,
											"end": 14011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 14154,
											"end": 14158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 14028,
											"end": 14159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 14028,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14020,
											"end": 14159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14020,
											"end": 14159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 14166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14329,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 14172,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14312,
											"end": 14321,
											"name": "PUSH",
											"source": 8,
											"value": "5374616B696E6700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14310,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14289,
											"end": 14322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14700,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 14335,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14498,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 14562,
											"end": 14563,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 14557,
											"end": 14560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14498,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 14498,
											"end": 14564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14498,
											"end": 14564,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 14498,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14491,
											"end": 14564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14491,
											"end": 14564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14573,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 14662,
											"end": 14665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14573,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 14573,
											"end": 14666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14573,
											"end": 14666,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 14573,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14691,
											"end": 14693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14686,
											"end": 14689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14335,
											"end": 14700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14900,
											"end": 14904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14923,
											"end": 14941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14915,
											"end": 14941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14915,
											"end": 14941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14951,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 15019,
											"end": 15020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15017,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15004,
											"end": 15021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14995,
											"end": 15001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14951,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 14951,
											"end": 15022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14951,
											"end": 15022,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 14951,
											"end": 15022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15069,
											"end": 15078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15063,
											"end": 15067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15059,
											"end": 15079,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15043,
											"end": 15052,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15032,
											"end": 15080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15223,
											"end": 15227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 15097,
											"end": 15228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15089,
											"end": 15228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15089,
											"end": 15228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 15235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"indentity_test_2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BUY_TAX()": "02af37bb",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_TX()": "f3b2db3f",
							"MAX_WALLET()": "df7787a4",
							"SELL_TAX()": "54ad8aee",
							"SLIPPAGE()": "36b4134a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"emergencyFund()": "cc859378",
							"encouragementFund()": "52a6a9ec",
							"isExcludedFromFees(address)": "4fbee193",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakingWallet()": "06ee6ad8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateExcludedAccountStatus(address,bool)": "753cafc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_encouragementFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_emergencyFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"TaxDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUY_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELL_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLIPPAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encouragementFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"updateExcludedAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_2.sol\":\"XEAMToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"indentity_test_2.sol\":{\"keccak256\":\"0x4fe791a9d6e14fb0f5b96c632eda996aec90c5f53d887dae337f9c732dc3f51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81120c1d433bbb4bfb160b78419aa4cb71c127487a98eceee4f4da42a27f57c5\",\"dweb:/ipfs/QmP6UeqazjfpwPErsyy59PwpuqWdw9QBdpL4JLwTU7rZEL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1034,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "encouragementFund",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1036,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "emergencyFund",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1038,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1040,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1053,
								"contract": "indentity_test_2.sol:XEAMToken",
								"label": "isExcludedFromFees",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"indentity_test_2.sol": {
				"ast": {
					"absolutePath": "indentity_test_2.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"XEAMToken": [
							1288
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 865,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 350,
							"src": "167:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1004,
										"name": "ERC20",
										"nameLocations": [
											"253:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "253:5:7"
									},
									"id": 1005,
									"nodeType": "InheritanceSpecifier",
									"src": "253:5:7"
								},
								{
									"baseName": {
										"id": 1006,
										"name": "Ownable",
										"nameLocations": [
											"260:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "260:7:7"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "260:7:7"
								},
								{
									"baseName": {
										"id": 1008,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"269:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "269:15:7"
									},
									"id": 1009,
									"nodeType": "InheritanceSpecifier",
									"src": "269:15:7"
								}
							],
							"canonicalName": "XEAMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1288,
							"linearizedBaseContracts": [
								1288,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "XEAMToken",
							"nameLocation": "240:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1016,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "315:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "291:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1010,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "291:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										},
										"id": 1015,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "325f3030305f303030",
											"id": 1011,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "332:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000000_by_1",
												"typeString": "int_const 2000000"
											},
											"value": "2_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1014,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1012,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "344:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1013,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "348:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "344:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "332:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "df7787a4",
									"id": 1024,
									"mutability": "constant",
									"name": "MAX_WALLET",
									"nameLocation": "380:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "356:63:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1023,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "394:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "411:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "394:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1021,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "393:20:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1022,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "416:3:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "393:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3b2db3f",
									"id": 1032,
									"mutability": "constant",
									"name": "MAX_TX",
									"nameLocation": "455:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "431:61:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1025,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "431:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1031,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "465:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "482:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "465:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1029,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "464:20:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130303030",
											"id": 1030,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "487:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"src": "464:28:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52a6a9ec",
									"id": 1034,
									"mutability": "mutable",
									"name": "encouragementFund",
									"nameLocation": "523:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "508:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1033,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "508:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc859378",
									"id": 1036,
									"mutability": "mutable",
									"name": "emergencyFund",
									"nameLocation": "561:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "546:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1035,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "546:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1038,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "595:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "580:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1037,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06ee6ad8",
									"id": 1040,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "631:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "616:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1039,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02af37bb",
									"id": 1043,
									"mutability": "constant",
									"name": "BUY_TAX",
									"nameLocation": "675:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "651:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1042,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "685:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54ad8aee",
									"id": 1046,
									"mutability": "constant",
									"name": "SELL_TAX",
									"nameLocation": "717:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "693:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 1045,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "728:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36b4134a",
									"id": 1049,
									"mutability": "constant",
									"name": "SLIPPAGE",
									"nameLocation": "760:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "736:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "736:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fbee193",
									"id": 1053,
									"mutability": "mutable",
									"name": "isExcludedFromFees",
									"nameLocation": "835:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1288,
									"src": "803:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1052,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1050,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "811:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "803:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1051,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "822:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984",
									"id": 1059,
									"name": "TaxDistributed",
									"nameLocation": "866:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "889:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "881:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "904:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "897:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "897:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:33:7"
									},
									"src": "860:54:7"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1120:283:7",
										"statements": [
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1143:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1079,
														"name": "_encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "1163:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1143:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1143:38:7"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1191:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1083,
														"name": "_emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "1207:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1191:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1191:30:7"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1086,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1231:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1087,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1249:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1231:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "1231:34:7"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1090,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1275:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1091,
														"name": "_stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "1291:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1275:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "1275:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1095,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1322:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1326:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1322:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "1334:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1316:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "1316:33:7"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1100,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1359:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1103,
														"indexExpression": {
															"expression": {
																"id": 1101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1378:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1382:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1378:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1359:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1392:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1359:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1359:37:7"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5845414d20546f6b656e",
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1078:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98e1b9db00eaaf366b935ad530b190d9773aad50d000749d85e219b8a5ba6845",
														"typeString": "literal_string \"XEAM Token\""
													},
													"value": "XEAM Token"
												},
												{
													"hexValue": "5845414d",
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1092:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_86097711d31c646e79eccbaca29da45b57f182582f3ece5f934788d25ae5c98b",
														"typeString": "literal_string \"XEAM\""
													},
													"value": "XEAM"
												}
											],
											"id": 1072,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1069,
												"name": "ERC20",
												"nameLocations": [
													"1072:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1072:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1072:27:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1074,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1108:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1112:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1108:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1076,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1073,
												"name": "Ownable",
												"nameLocations": [
													"1100:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1100:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1100:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_encouragementFund",
												"nameLocation": "949:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "941:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_emergencyFund",
												"nameLocation": "985:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "977:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1017:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1009:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_stakingWallet",
												"nameLocation": "1051:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1043:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:140:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:7"
									},
									"scope": 1288,
									"src": "920:483:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "1521:280:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1120,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "1562:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1119,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "1552:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1552:20:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1122,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "1575:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1552:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1124,
																"name": "MAX_WALLET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "1585:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1552:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1609:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																"typeString": "literal_string \"Exceeds max wallet limit\""
															},
															"value": "Exceeds max wallet limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																"typeString": "literal_string \"Exceeds max wallet limit\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1531:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "1531:114:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1663:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1131,
																"name": "MAX_TX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "1673:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1663:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1681:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																"typeString": "literal_string \"Exceeds max transaction limit\""
															},
															"value": "Exceeds max transaction limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																"typeString": "literal_string \"Exceeds max transaction limit\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1655:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1655:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1655:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1743:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1747:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1743:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1755:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1766:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "1724:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1724:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1724:49:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1790:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1117,
												"id": 1144,
												"nodeType": "Return",
												"src": "1783:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1418:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1485:8:7"
									},
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1435:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1427:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1454:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1446:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:35:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1511:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:6:7"
									},
									"scope": 1288,
									"src": "1409:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "1925:726:7",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "1943:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "1935:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1935:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1157,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "1956:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1158,
																	"name": "SELL_TAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "1965:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1956:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1955:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1977:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1955:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1935:45:7"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "1998:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "1990:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1990:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1166,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2011:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1167,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2020:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2011:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1990:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1173,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2056:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "encouragementFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2064:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1175,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2084:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2096:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "2084:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2083:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2083:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1170,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2040:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1288_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2046:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "2040:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2040:64:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1184,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2135:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2147:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "2135:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2134:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2152:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2134:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456e636f75726167656d656e742046756e64",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															},
															"value": "Encouragement Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															}
														],
														"id": 1183,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2119:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "2114:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2204:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "emergencyFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "2212:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1198,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2228:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2240:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2228:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2227:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2227:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1193,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2188:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1288_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2194:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "2188:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2188:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "2188:60:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1207,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2279:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2291:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2279:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2278:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2296:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2278:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456d657267656e63792046756e64",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2300:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															},
															"value": "Emergency Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															}
														],
														"id": 1206,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2263:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "2258:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2344:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "2352:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1221,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2370:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2382:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "2370:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1224,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2369:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2387:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2369:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1216,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2328:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1288_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2334:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "2328:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "2328:62:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1230,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2421:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2433:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "2421:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2420:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2438:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2420:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4d61726b6574696e67",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2442:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															},
															"value": "Marketing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															}
														],
														"id": 1229,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2405:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "2400:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2481:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "stakingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "2489:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1244,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2505:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2517:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "2505:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2504:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2522:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2504:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1239,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2465:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1288_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2471:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "2465:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2465:60:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1253,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "2556:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2568:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "2556:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2555:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2573:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2555:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5374616b696e67",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															},
															"value": "Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															}
														],
														"id": 1252,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2540:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2540:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "EmitStatement",
												"src": "2535:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2614:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2622:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "2633:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1262,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2598:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1288_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2604:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "2598:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2598:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2598:46:7"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWithTaxes",
									"nameLocation": "1816:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1852:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1844:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1876:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1868:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1903:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1895:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:81:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1925:0:7"
									},
									"scope": 1288,
									"src": "1807:844:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "2765:55:7",
										"statements": [
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1280,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2775:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1282,
														"indexExpression": {
															"id": 1281,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2794:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2775:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1283,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "2805:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2775:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "2775:38:7"
											}
										]
									},
									"functionSelector": "753cafc3",
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1277,
												"name": "onlyOwner",
												"nameLocations": [
													"2751:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2751:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2751:9:7"
										}
									],
									"name": "updateExcludedAccountStatus",
									"nameLocation": "2666:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2702:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2694:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "2716:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2711:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2711:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:32:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:0:7"
									},
									"scope": 1288,
									"src": "2657:163:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1289,
							"src": "231:2591:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1059
							]
						}
					],
					"src": "32:2792:7"
				},
				"id": 7
			}
		}
	}
}