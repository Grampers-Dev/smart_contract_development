{
	"id": "6085b9ac744cd7261773bbed946b8ef7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"xeam_test_contract_1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {\r\n    uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18;\r\n    uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100; // 1%\r\n    uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000; // 0.05%\r\n\r\n    address public encouragementFund;\r\n    address public emergencyFund;\r\n    address public marketingWallet;\r\n    address public stakingWallet;\r\n    address public uniswapPair;\r\n\r\n    uint256 public buyTax = 10;\r\n    uint256 public sellTax = 12;\r\n\r\n    mapping(address => bool) public isExcludedFromFees;\r\n\r\n    event TaxDistributed(uint256 amount, string category);\r\n    event UniswapPairUpdated(address newPair);\r\n    event TaxesUpdated(uint256 newBuyTax, uint256 newSellTax);\r\n    event LPFundsWithdrawn(uint256 amount);\r\n\r\n    constructor(\r\n        address _encouragementFund,\r\n        address _emergencyFund,\r\n        address _marketingWallet,\r\n        address _stakingWallet,\r\n        address _initialUniswapPair\r\n    ) ERC20(\"XEAM Token\", \"XEAM\") Ownable(msg.sender) {\r\n        encouragementFund = _encouragementFund;\r\n        emergencyFund = _emergencyFund;\r\n        marketingWallet = _marketingWallet;\r\n        stakingWallet = _stakingWallet;\r\n        uniswapPair = _initialUniswapPair;\r\n\r\n        _mint(msg.sender, INITIAL_SUPPLY);\r\n        isExcludedFromFees[msg.sender] = true;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\r\n        _applyTransferLimits(msg.sender, recipient, amount);\r\n        _transferWithTaxes(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\r\n        _applyTransferLimits(sender, recipient, amount);\r\n        _transferWithTaxes(sender, recipient, amount);\r\n        _approve(sender, msg.sender, allowance(sender, msg.sender) - amount);\r\n        return true;\r\n    }\r\n\r\n    function _applyTransferLimits(address sender, address recipient, uint256 amount) internal view {\r\n        if (!isExcludedFromFees[sender]) {\r\n            require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\");\r\n            require(amount <= MAX_TX, \"Exceeds max transaction limit\");\r\n        }\r\n    }\r\n\r\n    function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {\r\n        uint256 tax = (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100;\r\n        require(amount >= tax, \"Tax exceeds transfer amount\");\r\n\r\n        uint256 netAmount = amount - tax;\r\n        uint256 lpShare = (tax * 4) / 12;\r\n        uint256 encouragementShare = (tax * 4) / 12;\r\n        uint256 emergencyShare = (tax * 1) / 12;\r\n        uint256 marketingShare = (tax * 2) / 12;\r\n        uint256 stakingShare = (tax * 1) / 12;\r\n\r\n        super._transfer(sender, encouragementFund, encouragementShare);\r\n        emit TaxDistributed(encouragementShare, \"Encouragement Fund\");\r\n\r\n        super._transfer(sender, emergencyFund, emergencyShare);\r\n        emit TaxDistributed(emergencyShare, \"Emergency Fund\");\r\n\r\n        super._transfer(sender, marketingWallet, marketingShare);\r\n        emit TaxDistributed(marketingShare, \"Marketing\");\r\n\r\n        super._transfer(sender, stakingWallet, stakingShare);\r\n        emit TaxDistributed(stakingShare, \"Staking\");\r\n\r\n        super._transfer(sender, address(this), lpShare);\r\n        emit TaxDistributed(lpShare, \"Liquidity Pool\");\r\n\r\n        super._transfer(sender, recipient, netAmount);\r\n    }\r\n\r\n    function withdrawLPFunds() external onlyOwner {\r\n        uint256 balance = balanceOf(address(this));\r\n        require(balance > 0, \"No LP funds available\");\r\n        super._transfer(address(this), owner(), balance);\r\n        emit LPFundsWithdrawn(balance);\r\n    }\r\n\r\n    function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {\r\n        isExcludedFromFees[account] = excluded;\r\n    }\r\n\r\n    function updateUniswapPair(address newPair) external onlyOwner {\r\n        require(newPair != address(0), \"New pair address cannot be zero\");\r\n        uniswapPair = newPair;\r\n        emit UniswapPairUpdated(newPair);\r\n    }\r\n\r\n    function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {\r\n        require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\");\r\n        buyTax = _buyTax;\r\n        sellTax = _sellTax;\r\n        emit TaxesUpdated(_buyTax, _sellTax);\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"xeam_test_contract_1.sol": {
				"XEAMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_encouragementFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_emergencyFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialUniswapPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LPFundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "TaxDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyTax",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellTax",
									"type": "uint256"
								}
							],
							"name": "TaxesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "UniswapPairUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encouragementFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "updateExcludedAccountStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellTax",
									"type": "uint256"
								}
							],
							"name": "updateTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "updateUniswapPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawLPFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"xeam_test_contract_1.sol\":295:4948  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"xeam_test_contract_1.sol\":792:794  10 */\n  0x0a\n    /* \"xeam_test_contract_1.sol\":768:794  uint256 public buyTax = 10 */\n  0x0c\n  sstore\n    /* \"xeam_test_contract_1.sol\":826:828  12 */\n  0x0c\n    /* \"xeam_test_contract_1.sol\":801:828  uint256 public sellTax = 12 */\n  0x0d\n  sstore\n    /* \"xeam_test_contract_1.sol\":1115:1680  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"xeam_test_contract_1.sol\":1346:1356  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2c22a0a6902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x5845414d)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x07\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x01))\n    /* \"xeam_test_contract_1.sol\":1369:1407  encouragementFund = _encouragementFund */\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1.sol\":1369:1407  encouragementFund = _encouragementFund */\n  dup9\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xeam_test_contract_1.sol\":1418:1431  emergencyFund */\n  0x08\n    /* \"xeam_test_contract_1.sol\":1418:1448  emergencyFund = _emergencyFund */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xeam_test_contract_1.sol\":1459:1474  marketingWallet */\n  0x09\n    /* \"xeam_test_contract_1.sol\":1459:1493  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1.sol\":1504:1517  stakingWallet */\n  0x0a\n    /* \"xeam_test_contract_1.sol\":1504:1534  stakingWallet = _stakingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup6\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1.sol\":1545:1556  uniswapPair */\n  0x0b\n    /* \"xeam_test_contract_1.sol\":1545:1578  uniswapPair = _initialUniswapPair */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  dup4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1.sol\":1591:1624  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_22\n    /* \"xeam_test_contract_1.sol\":1597:1607  msg.sender */\n  caller\n    /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n  0x01a784379d99db42000000\n    /* \"xeam_test_contract_1.sol\":1591:1596  _mint */\n  tag_23\n    /* \"xeam_test_contract_1.sol\":1591:1624  _mint(msg.sender, INITIAL_SUPPLY) */\n  jump\t// in\ntag_22:\n  pop\n  pop\n    /* \"xeam_test_contract_1.sol\":1654:1664  msg.sender */\n  caller\n    /* \"xeam_test_contract_1.sol\":1635:1665  isExcludedFromFees[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"xeam_test_contract_1.sol\":1635:1653  isExcludedFromFees */\n  0x0e\n    /* \"xeam_test_contract_1.sol\":1635:1665  isExcludedFromFees[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xeam_test_contract_1.sol\":1635:1672  isExcludedFromFees[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"xeam_test_contract_1.sol\":1668:1672  true */\n  0x01\n    /* \"xeam_test_contract_1.sol\":1635:1672  isExcludedFromFees[msg.sender] = true */\n  or\n  swap1\n  sstore\n  pop\n    /* \"xeam_test_contract_1.sol\":295:4948  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  tag_49\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_15\n    /* \"#utility.yul\":3392:3595   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_35\n  swap1\n  pop\n  jump\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4047:4079   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4029:4080   */\n  mstore\n    /* \"#utility.yul\":4096:4114   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4089:4123   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4139:4157   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4132:4166   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4002:4020   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_15\n    /* \"#utility.yul\":3827:4172   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n    /* \"#utility.yul\":4323:4348   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4311:4313   */\n  0x20\n    /* \"#utility.yul\":4296:4314   */\n  add\n  swap1\n    /* \"#utility.yul\":4177:4354   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_43:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_51:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_53:\n    /* \"#utility.yul\":427:467   */\n  tag_54\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_43\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_55\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_43\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_56\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_43\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_57\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_43\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_58\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_43\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":751:878   */\ntag_44:\n    /* \"#utility.yul\":812:822   */\n  0x4e487b71\n    /* \"#utility.yul\":807:810   */\n  0xe0\n    /* \"#utility.yul\":803:823   */\n  shl\n    /* \"#utility.yul\":800:801   */\n  0x00\n    /* \"#utility.yul\":793:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":883:1263   */\ntag_45:\n    /* \"#utility.yul\":962:963   */\n  0x01\n    /* \"#utility.yul\":958:970   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1005:1017   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1026:1087   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1080:1084   */\n  0x7f\n    /* \"#utility.yul\":1072:1078   */\n  dup3\n    /* \"#utility.yul\":1068:1085   */\n  and\n    /* \"#utility.yul\":1058:1085   */\n  swap2\n  pop\n    /* \"#utility.yul\":1026:1087   */\ntag_61:\n    /* \"#utility.yul\":1133:1135   */\n  0x20\n    /* \"#utility.yul\":1125:1131   */\n  dup3\n    /* \"#utility.yul\":1122:1136   */\n  lt\n    /* \"#utility.yul\":1102:1120   */\n  dup2\n    /* \"#utility.yul\":1099:1137   */\n  sub\n    /* \"#utility.yul\":1096:1257   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1179:1189   */\n  0x4e487b71\n    /* \"#utility.yul\":1174:1177   */\n  0xe0\n    /* \"#utility.yul\":1170:1190   */\n  shl\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1160:1191   */\n  mstore\n    /* \"#utility.yul\":1214:1218   */\n  0x22\n    /* \"#utility.yul\":1211:1212   */\n  0x04\n    /* \"#utility.yul\":1204:1219   */\n  mstore\n    /* \"#utility.yul\":1242:1246   */\n  0x24\n    /* \"#utility.yul\":1239:1240   */\n  0x00\n    /* \"#utility.yul\":1232:1247   */\n  revert\n    /* \"#utility.yul\":1096:1257   */\ntag_62:\n  pop\n    /* \"#utility.yul\":883:1263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1912   */\ntag_47:\n    /* \"#utility.yul\":1496:1498   */\n  0x1f\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1488:1499   */\n  gt\n    /* \"#utility.yul\":1485:1906   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1532:1537   */\n  dup1\n    /* \"#utility.yul\":1529:1530   */\n  0x00\n    /* \"#utility.yul\":1522:1538   */\n  mstore\n    /* \"#utility.yul\":1576:1580   */\n  0x20\n    /* \"#utility.yul\":1573:1574   */\n  0x00\n    /* \"#utility.yul\":1563:1581   */\n  keccak256\n    /* \"#utility.yul\":1646:1648   */\n  0x1f\n    /* \"#utility.yul\":1634:1644   */\n  dup5\n    /* \"#utility.yul\":1630:1649   */\n  add\n    /* \"#utility.yul\":1627:1628   */\n  0x05\n    /* \"#utility.yul\":1623:1650   */\n  shr\n    /* \"#utility.yul\":1617:1621   */\n  dup2\n    /* \"#utility.yul\":1613:1651   */\n  add\n    /* \"#utility.yul\":1682:1686   */\n  0x20\n    /* \"#utility.yul\":1670:1680   */\n  dup6\n    /* \"#utility.yul\":1667:1687   */\n  lt\n    /* \"#utility.yul\":1664:1711   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":1705:1709   */\n  dup1\n    /* \"#utility.yul\":1664:1711   */\ntag_66:\n    /* \"#utility.yul\":1760:1762   */\n  0x1f\n    /* \"#utility.yul\":1755:1758   */\n  dup5\n    /* \"#utility.yul\":1751:1763   */\n  add\n    /* \"#utility.yul\":1748:1749   */\n  0x05\n    /* \"#utility.yul\":1744:1764   */\n  shr\n    /* \"#utility.yul\":1738:1742   */\n  dup3\n    /* \"#utility.yul\":1734:1765   */\n  add\n    /* \"#utility.yul\":1724:1765   */\n  swap2\n  pop\n    /* \"#utility.yul\":1815:1896   */\ntag_67:\n    /* \"#utility.yul\":1833:1835   */\n  dup2\n    /* \"#utility.yul\":1826:1831   */\n  dup2\n    /* \"#utility.yul\":1823:1836   */\n  lt\n    /* \"#utility.yul\":1815:1896   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1878:1894   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1859:1860   */\n  0x01\n    /* \"#utility.yul\":1848:1861   */\n  add\n    /* \"#utility.yul\":1815:1896   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1819:1822   */\n  pop\n  pop\n    /* \"#utility.yul\":1485:1906   */\ntag_65:\n    /* \"#utility.yul\":1394:1912   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2088:3387   */\ntag_11:\n    /* \"#utility.yul\":2208:2218   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2230:2260   */\n  dup2\n  gt\n    /* \"#utility.yul\":2227:2283   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2263:2281   */\n  tag_73\n  tag_44\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2292:2389   */\n  tag_74\n    /* \"#utility.yul\":2382:2388   */\n  dup2\n    /* \"#utility.yul\":2342:2380   */\n  tag_75\n    /* \"#utility.yul\":2374:2378   */\n  dup5\n    /* \"#utility.yul\":2368:2379   */\n  sload\n    /* \"#utility.yul\":2342:2380   */\n  tag_45\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2336:2340   */\n  dup5\n    /* \"#utility.yul\":2292:2389   */\n  tag_47\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2438:2442   */\n  0x20\n    /* \"#utility.yul\":2469:2471   */\n  0x1f\n    /* \"#utility.yul\":2458:2472   */\n  dup3\n  gt\n    /* \"#utility.yul\":2486:2487   */\n  0x01\n    /* \"#utility.yul\":2481:3130   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3174:3175   */\n  0x00\n    /* \"#utility.yul\":3191:3197   */\n  dup4\n    /* \"#utility.yul\":3188:3277   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":3243:3262   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3237:3263   */\n  mload\n    /* \"#utility.yul\":3188:3277   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":2045:2046   */\n  0x03\n    /* \"#utility.yul\":2041:2052   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2037:2061   */\n  shr\n    /* \"#utility.yul\":2033:2062   */\n  not\n    /* \"#utility.yul\":2023:2063   */\n  and\n    /* \"#utility.yul\":2069:2070   */\n  0x01\n    /* \"#utility.yul\":2065:2076   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2020:2077   */\n  or\n    /* \"#utility.yul\":3290:3371   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2451:3381   */\n  jump(tag_69)\n    /* \"#utility.yul\":2481:3130   */\ntag_77:\n    /* \"#utility.yul\":1341:1342   */\n  0x00\n    /* \"#utility.yul\":1334:1348   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1378:1382   */\n  0x20\n    /* \"#utility.yul\":1365:1383   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2517:2537   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2635:2857   */\ntag_81:\n    /* \"#utility.yul\":2649:2656   */\n  dup3\n    /* \"#utility.yul\":2646:2647   */\n  dup2\n    /* \"#utility.yul\":2643:2657   */\n  lt\n    /* \"#utility.yul\":2635:2857   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2731:2750   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2725:2751   */\n  mload\n    /* \"#utility.yul\":2710:2752   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2838:2842   */\n  0x20\n    /* \"#utility.yul\":2823:2843   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2791:2792   */\n  0x01\n    /* \"#utility.yul\":2779:2793   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2665:2677   */\n  add\n    /* \"#utility.yul\":2635:2857   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":2639:2642   */\n  pop\n    /* \"#utility.yul\":2885:2891   */\n  dup5\n    /* \"#utility.yul\":2876:2883   */\n  dup3\n    /* \"#utility.yul\":2873:2892   */\n  lt\n    /* \"#utility.yul\":2870:3071   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2946:2965   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2940:2966   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3029:3030   */\n  0x03\n    /* \"#utility.yul\":3025:3039   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3041:3044   */\n  0xf8\n    /* \"#utility.yul\":3021:3045   */\n  and\n    /* \"#utility.yul\":3017:3054   */\n  shr\n    /* \"#utility.yul\":3013:3055   */\n  not\n    /* \"#utility.yul\":2998:3056   */\n  and\n    /* \"#utility.yul\":2983:3057   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2870:3071   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3117:3118   */\n  0x01\n    /* \"#utility.yul\":3101:3115   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3097:3119   */\n  add\n    /* \"#utility.yul\":3084:3120   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2088:3387   */\n  jump\t// out\n    /* \"#utility.yul\":3600:3822   */\ntag_34:\n    /* \"#utility.yul\":3665:3674   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3686:3696   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3683:3816   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3738:3748   */\n  0x4e487b71\n    /* \"#utility.yul\":3733:3736   */\n  0xe0\n    /* \"#utility.yul\":3729:3749   */\n  shl\n    /* \"#utility.yul\":3726:3727   */\n  0x00\n    /* \"#utility.yul\":3719:3750   */\n  mstore\n    /* \"#utility.yul\":3773:3777   */\n  0x11\n    /* \"#utility.yul\":3770:3771   */\n  0x04\n    /* \"#utility.yul\":3763:3778   */\n  mstore\n    /* \"#utility.yul\":3801:3805   */\n  0x24\n    /* \"#utility.yul\":3798:3799   */\n  0x00\n    /* \"#utility.yul\":3791:3806   */\n  revert\n    /* \"#utility.yul\":3683:3816   */\ntag_87:\n    /* \"#utility.yul\":3600:3822   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4177:4354   */\ntag_49:\n    /* \"xeam_test_contract_1.sol\":295:4948  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"xeam_test_contract_1.sol\":295:4948  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x753cafc3\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc12b7c4e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdf7787a4\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf3b2db3f\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xc12b7c4e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcc859378\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbea9ea62\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x753cafc3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x313ce567\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x52a6a9ec\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x52a6a9ec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4fbee193\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x1006ee0c\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x1006ee0c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x06ee6ad8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"xeam_test_contract_1.sol\":698:726  address public stakingWallet */\n    tag_3:\n      sload(0x0a)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"xeam_test_contract_1.sol\":698:726  address public stakingWallet */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_42\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"xeam_test_contract_1.sol\":4546:4799  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_6:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":1817:1842   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"xeam_test_contract_1.sol\":1946:2287  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_8:\n      tag_48\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":366:425  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n    tag_9:\n      tag_58\n        /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1.sol\":366:425  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2374:2410   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2362:2364   */\n      0x20\n        /* \"#utility.yul\":2347:2365   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_42\n        /* \"#utility.yul\":2232:2416   */\n      jump\n        /* \"xeam_test_contract_1.sol\":4878:4945  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_54\n      tag_75\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":768:794  uint256 public buyTax = 10 */\n    tag_12:\n      tag_58\n      sload(0x0c)\n      dup2\n      jump\n        /* \"xeam_test_contract_1.sol\":837:887  mapping(address => bool) public isExcludedFromFees */\n    tag_13:\n      tag_48\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1.sol\":587:619  address public encouragementFund */\n    tag_14:\n      sload(0x07)\n      tag_40\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_48)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_58\n      tag_91\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_54\n      tag_95\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":4163:4308  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n    tag_18:\n      tag_54\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":661:691  address public marketingWallet */\n    tag_19:\n      sload(0x09)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1.sol\":4807:4870  function pause() external onlyOwner {... */\n    tag_20:\n      tag_54\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_44\n      tag_109\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":1688:1938  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_23:\n      tag_48\n      tag_112\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":3892:4155  function withdrawLPFunds() external onlyOwner {... */\n    tag_24:\n      tag_54\n      tag_116\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":4316:4538  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_25:\n      tag_54\n      tag_118\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":733:759  address public uniswapPair */\n    tag_26:\n      sload(0x0b)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1.sol\":801:828  uint256 public sellTax = 12 */\n    tag_27:\n      tag_58\n      sload(0x0d)\n      dup2\n      jump\n        /* \"xeam_test_contract_1.sol\":626:654  address public emergencyFund */\n    tag_28:\n      sload(0x08)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_58\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"xeam_test_contract_1.sol\":432:495  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_30:\n      tag_58\n      tag_135\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_54\n      tag_138\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":508:569  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_32:\n      tag_58\n      tag_141\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_145\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_150:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":4546:4799  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"xeam_test_contract_1.sol\":4651:4653  15 */\n      0x0f\n        /* \"xeam_test_contract_1.sol\":4640:4647  _buyTax */\n      dup3\n        /* \"xeam_test_contract_1.sol\":4640:4653  _buyTax <= 15 */\n      gt\n      iszero\n        /* \"xeam_test_contract_1.sol\":4640:4671  _buyTax <= 15 && _sellTax <= 20 */\n      dup1\n      iszero\n      tag_159\n      jumpi\n      pop\n        /* \"xeam_test_contract_1.sol\":4669:4671  20 */\n      0x14\n        /* \"xeam_test_contract_1.sol\":4657:4665  _sellTax */\n      dup2\n        /* \"xeam_test_contract_1.sol\":4657:4671  _sellTax <= 20 */\n      gt\n      iszero\n        /* \"xeam_test_contract_1.sol\":4640:4671  _buyTax <= 15 && _sellTax <= 20 */\n    tag_159:\n        /* \"xeam_test_contract_1.sol\":4632:4688  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3816:3818   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":4632:4688  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3798:3819   */\n      mstore\n        /* \"#utility.yul\":3855:3857   */\n      0x0c\n        /* \"#utility.yul\":3835:3853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3828:3858   */\n      mstore\n      shl(0xa3, 0x0a8c2f040e8dede40d0d2ced)\n        /* \"#utility.yul\":3874:3892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3867:3909   */\n      mstore\n        /* \"#utility.yul\":3926:3944   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":4632:4688  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"xeam_test_contract_1.sol\":4699:4705  buyTax */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":4699:4715  buyTax = _buyTax */\n      dup3\n      swap1\n      sstore\n        /* \"xeam_test_contract_1.sol\":4726:4733  sellTax */\n      0x0d\n        /* \"xeam_test_contract_1.sol\":4726:4744  sellTax = _sellTax */\n      dup2\n      swap1\n      sstore\n        /* \"xeam_test_contract_1.sol\":4760:4791  TaxesUpdated(_buyTax, _sellTax) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4129:4154   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4185:4187   */\n      0x20\n        /* \"#utility.yul\":4170:4188   */\n      dup2\n      add\n        /* \"#utility.yul\":4163:4197   */\n      dup4\n      swap1\n      mstore\n        /* \"xeam_test_contract_1.sol\":4760:4791  TaxesUpdated(_buyTax, _sellTax) */\n      0x35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4\n      swap2\n        /* \"#utility.yul\":4102:4120   */\n      add\n        /* \"xeam_test_contract_1.sol\":4760:4791  TaxesUpdated(_buyTax, _sellTax) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":4546:4799  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":1946:2287  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_65:\n        /* \"xeam_test_contract_1.sol\":2058:2062  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_167\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_167:\n        /* \"xeam_test_contract_1.sol\":2075:2122  _applyTransferLimits(sender, recipient, amount) */\n      tag_170\n        /* \"xeam_test_contract_1.sol\":2096:2102  sender */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2104:2113  recipient */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2115:2121  amount */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2075:2095  _applyTransferLimits */\n      tag_171\n        /* \"xeam_test_contract_1.sol\":2075:2122  _applyTransferLimits(sender, recipient, amount) */\n      jump\t// in\n    tag_170:\n        /* \"xeam_test_contract_1.sol\":2133:2178  _transferWithTaxes(sender, recipient, amount) */\n      tag_172\n        /* \"xeam_test_contract_1.sol\":2152:2158  sender */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2160:2169  recipient */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2171:2177  amount */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2133:2151  _transferWithTaxes */\n      tag_173\n        /* \"xeam_test_contract_1.sol\":2133:2178  _transferWithTaxes(sender, recipient, amount) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xeam_test_contract_1.sol\":2206:2216  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"xeam_test_contract_1.sol\":2189:2257  _approve(sender, msg.sender, allowance(sender, msg.sender) - amount) */\n      tag_174\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup7\n      swap2\n        /* \"xeam_test_contract_1.sol\":2218:2256  allowance(sender, msg.sender) - amount */\n      tag_176\n      swap1\n        /* \"xeam_test_contract_1.sol\":2250:2256  amount */\n      dup7\n      swap1\n        /* \"xeam_test_contract_1.sol\":2218:2256  allowance(sender, msg.sender) - amount */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"xeam_test_contract_1.sol\":2189:2197  _approve */\n      tag_154\n        /* \"xeam_test_contract_1.sol\":2189:2257  _approve(sender, msg.sender, allowance(sender, msg.sender) - amount) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"xeam_test_contract_1.sol\":2275:2279  true */\n      0x01\n        /* \"xeam_test_contract_1.sol\":1946:2287  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":4878:4945  function unpause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"xeam_test_contract_1.sol\":4927:4937  _unpause() */\n      tag_182\n        /* \"xeam_test_contract_1.sol\":4927:4935  _unpause */\n      tag_183\n        /* \"xeam_test_contract_1.sol\":4927:4937  _unpause() */\n      jump\t// in\n    tag_182:\n        /* \"xeam_test_contract_1.sol\":4878:4945  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":4163:4308  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":4262:4289  isExcludedFromFees[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1.sol\":4262:4280  isExcludedFromFees */\n      0x0e\n        /* \"xeam_test_contract_1.sol\":4262:4289  isExcludedFromFees[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xeam_test_contract_1.sol\":4262:4300  isExcludedFromFees[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"xeam_test_contract_1.sol\":4163:4308  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":4807:4870  function pause() external onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"xeam_test_contract_1.sol\":4854:4862  _pause() */\n      tag_182\n        /* \"xeam_test_contract_1.sol\":4854:4860  _pause */\n      tag_198\n        /* \"xeam_test_contract_1.sol\":4854:4862  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n        /* \"xeam_test_contract_1.sol\":1688:1938  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_113:\n        /* \"xeam_test_contract_1.sol\":1780:1784  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_207\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_207:\n        /* \"xeam_test_contract_1.sol\":1797:1848  _applyTransferLimits(msg.sender, recipient, amount) */\n      tag_209\n        /* \"xeam_test_contract_1.sol\":1818:1828  msg.sender */\n      caller\n        /* \"xeam_test_contract_1.sol\":1830:1839  recipient */\n      dup5\n        /* \"xeam_test_contract_1.sol\":1841:1847  amount */\n      dup5\n        /* \"xeam_test_contract_1.sol\":1797:1817  _applyTransferLimits */\n      tag_171\n        /* \"xeam_test_contract_1.sol\":1797:1848  _applyTransferLimits(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_209:\n        /* \"xeam_test_contract_1.sol\":1859:1908  _transferWithTaxes(msg.sender, recipient, amount) */\n      tag_210\n        /* \"xeam_test_contract_1.sol\":1878:1888  msg.sender */\n      caller\n        /* \"xeam_test_contract_1.sol\":1890:1899  recipient */\n      dup5\n        /* \"xeam_test_contract_1.sol\":1901:1907  amount */\n      dup5\n        /* \"xeam_test_contract_1.sol\":1859:1877  _transferWithTaxes */\n      tag_173\n        /* \"xeam_test_contract_1.sol\":1859:1908  _transferWithTaxes(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"xeam_test_contract_1.sol\":1926:1930  true */\n      0x01\n        /* \"xeam_test_contract_1.sol\":1688:1938  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":3892:4155  function withdrawLPFunds() external onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"xeam_test_contract_1.sol\":3985:3989  this */\n      address\n        /* \"xeam_test_contract_1.sol\":3949:3964  uint256 balance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"xeam_test_contract_1.sol\":4010:4021  balance > 0 */\n      dup1\n        /* \"xeam_test_contract_1.sol\":4002:4047  require(balance > 0, \"No LP funds available\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":4002:4047  require(balance > 0, \"No LP funds available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4657:4678   */\n      mstore\n        /* \"#utility.yul\":4714:4716   */\n      0x15\n        /* \"#utility.yul\":4694:4712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4687:4717   */\n      mstore\n      shl(0x58, 0x4e6f204c502066756e647320617661696c61626c65)\n        /* \"#utility.yul\":4733:4751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4726:4777   */\n      mstore\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":4002:4047  require(balance > 0, \"No LP funds available\") */\n      tag_161\n        /* \"#utility.yul\":4473:4818   */\n      jump\n        /* \"xeam_test_contract_1.sol\":4002:4047  require(balance > 0, \"No LP funds available\") */\n    tag_215:\n        /* \"xeam_test_contract_1.sol\":4058:4106  super._transfer(address(this), owner(), balance) */\n      tag_218\n        /* \"xeam_test_contract_1.sol\":4082:4086  this */\n      address\n        /* \"xeam_test_contract_1.sol\":4089:4096  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"xeam_test_contract_1.sol\":4089:4096  owner() */\n    tag_219:\n        /* \"xeam_test_contract_1.sol\":4098:4105  balance */\n      dup4\n        /* \"xeam_test_contract_1.sol\":4058:4073  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":4058:4106  super._transfer(address(this), owner(), balance) */\n      jump\t// in\n    tag_218:\n        /* \"xeam_test_contract_1.sol\":4122:4147  LPFundsWithdrawn(balance) */\n      mload(0x40)\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      dup2\n      mstore\n        /* \"xeam_test_contract_1.sol\":4122:4147  LPFundsWithdrawn(balance) */\n      0xbba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93\n      swap1\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n        /* \"xeam_test_contract_1.sol\":4122:4147  LPFundsWithdrawn(balance) */\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3938:4155  {... */\n      pop\n        /* \"xeam_test_contract_1.sol\":3892:4155  function withdrawLPFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":4316:4538  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":4398:4419  newPair != address(0) */\n      dup2\n      and\n        /* \"xeam_test_contract_1.sol\":4390:4455  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5025:5027   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":4390:4455  require(newPair != address(0), \"New pair address cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5007:5028   */\n      mstore\n        /* \"#utility.yul\":5064:5066   */\n      0x1f\n        /* \"#utility.yul\":5044:5062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5037:5067   */\n      mstore\n        /* \"#utility.yul\":5103:5136   */\n      0x4e6577207061697220616464726573732063616e6e6f74206265207a65726f00\n        /* \"#utility.yul\":5083:5101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5076:5137   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":4390:4455  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_161\n        /* \"#utility.yul\":4823:5178   */\n      jump\n        /* \"xeam_test_contract_1.sol\":4390:4455  require(newPair != address(0), \"New pair address cannot be zero\") */\n    tag_225:\n        /* \"xeam_test_contract_1.sol\":4466:4477  uniswapPair */\n      0x0b\n        /* \"xeam_test_contract_1.sol\":4466:4487  uniswapPair = newPair */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"xeam_test_contract_1.sol\":4503:4530  UniswapPairUpdated(newPair) */\n      mload(0x40)\n        /* \"#utility.yul\":160:211   */\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1.sol\":4503:4530  UniswapPairUpdated(newPair) */\n      0xdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"xeam_test_contract_1.sol\":4503:4530  UniswapPairUpdated(newPair) */\n      tag_221\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1.sol\":432:495  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_135:\n        /* \"xeam_test_contract_1.sol\":492:495  100 */\n      0x64\n        /* \"xeam_test_contract_1.sol\":470:488  INITIAL_SUPPLY * 1 */\n      tag_230\n        /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1.sol\":487:488  1 */\n      0x01\n        /* \"xeam_test_contract_1.sol\":470:488  INITIAL_SUPPLY * 1 */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"xeam_test_contract_1.sol\":469:495  (INITIAL_SUPPLY * 1) / 100 */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"xeam_test_contract_1.sol\":432:495  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1.sol\":508:569  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_141:\n        /* \"xeam_test_contract_1.sol\":564:569  10000 */\n      0x2710\n        /* \"xeam_test_contract_1.sol\":542:560  INITIAL_SUPPLY * 5 */\n      tag_230\n        /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1.sol\":559:560  5 */\n      0x05\n        /* \"xeam_test_contract_1.sol\":542:560  INITIAL_SUPPLY * 5 */\n      tag_231\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5762:5783   */\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x10\n        /* \"#utility.yul\":5799:5817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5792:5822   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5838:5856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5831:5877   */\n      mstore\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_161\n        /* \"#utility.yul\":5578:5918   */\n      jump\n        /* \"xeam_test_contract_1.sol\":2295:2621  function _applyTransferLimits(address sender, address recipient, uint256 amount) internal view {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":2406:2432  isExcludedFromFees[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1.sol\":2406:2424  isExcludedFromFees */\n      0x0e\n        /* \"xeam_test_contract_1.sol\":2406:2432  isExcludedFromFees[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"xeam_test_contract_1.sol\":2401:2614  if (!isExcludedFromFees[sender]) {... */\n      tag_244\n      jumpi\n        /* \"xeam_test_contract_1.sol\":492:495  100 */\n      0x64\n        /* \"xeam_test_contract_1.sol\":470:488  INITIAL_SUPPLY * 1 */\n      tag_259\n        /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1.sol\":487:488  1 */\n      0x01\n        /* \"xeam_test_contract_1.sol\":470:488  INITIAL_SUPPLY * 1 */\n      tag_231\n      jump\t// in\n    tag_259:\n        /* \"xeam_test_contract_1.sol\":469:495  (INITIAL_SUPPLY * 1) / 100 */\n      tag_260\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_260:\n        /* \"xeam_test_contract_1.sol\":2480:2486  amount */\n      dup2\n        /* \"xeam_test_contract_1.sol\":2457:2477  balanceOf(recipient) */\n      tag_261\n        /* \"xeam_test_contract_1.sol\":2467:2476  recipient */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"xeam_test_contract_1.sol\":2457:2477  balanceOf(recipient) */\n    tag_261:\n        /* \"xeam_test_contract_1.sol\":2457:2486  balanceOf(recipient) + amount */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"xeam_test_contract_1.sol\":2457:2500  balanceOf(recipient) + amount <= MAX_WALLET */\n      gt\n      iszero\n        /* \"xeam_test_contract_1.sol\":2449:2529  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6255:6257   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":2449:2529  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6237:6258   */\n      mstore\n        /* \"#utility.yul\":6294:6296   */\n      0x18\n        /* \"#utility.yul\":6274:6292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6267:6297   */\n      mstore\n        /* \"#utility.yul\":6333:6359   */\n      0x45786365656473206d61782077616c6c6574206c696d69740000000000000000\n        /* \"#utility.yul\":6313:6331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6306:6360   */\n      mstore\n        /* \"#utility.yul\":6377:6395   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":2449:2529  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      tag_161\n        /* \"#utility.yul\":6053:6401   */\n      jump\n        /* \"xeam_test_contract_1.sol\":2449:2529  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n    tag_264:\n        /* \"xeam_test_contract_1.sol\":564:569  10000 */\n      0x2710\n        /* \"xeam_test_contract_1.sol\":542:560  INITIAL_SUPPLY * 5 */\n      tag_267\n        /* \"xeam_test_contract_1.sol\":407:425  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1.sol\":559:560  5 */\n      0x05\n        /* \"xeam_test_contract_1.sol\":542:560  INITIAL_SUPPLY * 5 */\n      tag_231\n      jump\t// in\n    tag_267:\n        /* \"xeam_test_contract_1.sol\":541:569  (INITIAL_SUPPLY * 5) / 10000 */\n      tag_268\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_268:\n        /* \"xeam_test_contract_1.sol\":2552:2558  amount */\n      dup2\n        /* \"xeam_test_contract_1.sol\":2552:2568  amount <= MAX_TX */\n      gt\n      iszero\n        /* \"xeam_test_contract_1.sol\":2544:2602  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6608:6610   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":2544:2602  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6590:6611   */\n      mstore\n        /* \"#utility.yul\":6647:6649   */\n      0x1d\n        /* \"#utility.yul\":6627:6645   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6620:6650   */\n      mstore\n        /* \"#utility.yul\":6686:6717   */\n      0x45786365656473206d6178207472616e73616374696f6e206c696d6974000000\n        /* \"#utility.yul\":6666:6684   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6659:6718   */\n      mstore\n        /* \"#utility.yul\":6735:6753   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":2544:2602  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_161\n        /* \"#utility.yul\":6406:6759   */\n      jump\n        /* \"xeam_test_contract_1.sol\":2629:3884  function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {... */\n    tag_173:\n        /* \"xeam_test_contract_1.sol\":2756:2767  uniswapPair */\n      sload(0x0b)\n        /* \"xeam_test_contract_1.sol\":2728:2739  uint256 tax */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":2743:2767  recipient == uniswapPair */\n      dup5\n      dup2\n      and\n        /* \"xeam_test_contract_1.sol\":2756:2767  uniswapPair */\n      swap2\n      and\n        /* \"xeam_test_contract_1.sol\":2743:2767  recipient == uniswapPair */\n      eq\n        /* \"xeam_test_contract_1.sol\":2742:2821  (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      tag_273\n      jumpi\n        /* \"xeam_test_contract_1.sol\":2818:2821  100 */\n      0x64\n        /* \"xeam_test_contract_1.sol\":2808:2814  buyTax */\n      sload(0x0c)\n        /* \"xeam_test_contract_1.sol\":2799:2805  amount */\n      dup4\n        /* \"xeam_test_contract_1.sol\":2799:2814  amount * buyTax */\n      tag_274\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_274:\n        /* \"xeam_test_contract_1.sol\":2798:2821  (amount * buyTax) / 100 */\n      tag_275\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_275:\n        /* \"xeam_test_contract_1.sol\":2742:2821  (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      jump(tag_278)\n    tag_273:\n        /* \"xeam_test_contract_1.sol\":2792:2795  100 */\n      0x64\n        /* \"xeam_test_contract_1.sol\":2781:2788  sellTax */\n      sload(0x0d)\n        /* \"xeam_test_contract_1.sol\":2772:2778  amount */\n      dup4\n        /* \"xeam_test_contract_1.sol\":2772:2788  amount * sellTax */\n      tag_277\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_277:\n        /* \"xeam_test_contract_1.sol\":2771:2795  (amount * sellTax) / 100 */\n      tag_278\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_278:\n        /* \"xeam_test_contract_1.sol\":2728:2821  uint256 tax = (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":2850:2853  tax */\n      dup1\n        /* \"xeam_test_contract_1.sol\":2840:2846  amount */\n      dup3\n        /* \"xeam_test_contract_1.sol\":2840:2853  amount >= tax */\n      lt\n      iszero\n        /* \"xeam_test_contract_1.sol\":2832:2885  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"xeam_test_contract_1.sol\":2832:2885  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6948:6969   */\n      mstore\n        /* \"#utility.yul\":7005:7007   */\n      0x1b\n        /* \"#utility.yul\":6985:7003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6978:7008   */\n      mstore\n        /* \"#utility.yul\":7044:7073   */\n      0x5461782065786365656473207472616e7366657220616d6f756e740000000000\n        /* \"#utility.yul\":7024:7042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7017:7074   */\n      mstore\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      add\n        /* \"xeam_test_contract_1.sol\":2832:2885  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      tag_161\n        /* \"#utility.yul\":6764:7115   */\n      jump\n        /* \"xeam_test_contract_1.sol\":2832:2885  require(amount >= tax, \"Tax exceeds transfer amount\") */\n    tag_279:\n        /* \"xeam_test_contract_1.sol\":2898:2915  uint256 netAmount */\n      0x00\n        /* \"xeam_test_contract_1.sol\":2918:2930  amount - tax */\n      tag_282\n        /* \"xeam_test_contract_1.sol\":2927:2930  tax */\n      dup3\n        /* \"xeam_test_contract_1.sol\":2918:2924  amount */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2918:2930  amount - tax */\n      tag_177\n      jump\t// in\n    tag_282:\n        /* \"xeam_test_contract_1.sol\":2898:2930  uint256 netAmount = amount - tax */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":2941:2956  uint256 lpShare */\n      0x00\n        /* \"xeam_test_contract_1.sol\":2971:2973  12 */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":2960:2967  tax * 4 */\n      tag_283\n        /* \"xeam_test_contract_1.sol\":2960:2963  tax */\n      dup5\n        /* \"xeam_test_contract_1.sol\":2966:2967  4 */\n      0x04\n        /* \"xeam_test_contract_1.sol\":2960:2967  tax * 4 */\n      tag_231\n      jump\t// in\n    tag_283:\n        /* \"xeam_test_contract_1.sol\":2959:2973  (tax * 4) / 12 */\n      tag_284\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_284:\n        /* \"xeam_test_contract_1.sol\":2941:2973  uint256 lpShare = (tax * 4) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":2984:3010  uint256 encouragementShare */\n      0x00\n        /* \"xeam_test_contract_1.sol\":3025:3027  12 */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":3014:3021  tax * 4 */\n      tag_285\n        /* \"xeam_test_contract_1.sol\":3014:3017  tax */\n      dup6\n        /* \"xeam_test_contract_1.sol\":3020:3021  4 */\n      0x04\n        /* \"xeam_test_contract_1.sol\":3014:3021  tax * 4 */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"xeam_test_contract_1.sol\":3013:3027  (tax * 4) / 12 */\n      tag_286\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_286:\n        /* \"xeam_test_contract_1.sol\":2984:3027  uint256 encouragementShare = (tax * 4) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":3038:3060  uint256 emergencyShare */\n      0x00\n        /* \"xeam_test_contract_1.sol\":3075:3077  12 */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":3064:3071  tax * 1 */\n      tag_287\n        /* \"xeam_test_contract_1.sol\":3064:3067  tax */\n      dup7\n        /* \"xeam_test_contract_1.sol\":3070:3071  1 */\n      0x01\n        /* \"xeam_test_contract_1.sol\":3064:3071  tax * 1 */\n      tag_231\n      jump\t// in\n    tag_287:\n        /* \"xeam_test_contract_1.sol\":3063:3077  (tax * 1) / 12 */\n      tag_288\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_288:\n        /* \"xeam_test_contract_1.sol\":3038:3077  uint256 emergencyShare = (tax * 1) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":3088:3110  uint256 marketingShare */\n      0x00\n        /* \"xeam_test_contract_1.sol\":3125:3127  12 */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":3114:3121  tax * 2 */\n      tag_289\n        /* \"xeam_test_contract_1.sol\":3114:3117  tax */\n      dup8\n        /* \"xeam_test_contract_1.sol\":3120:3121  2 */\n      0x02\n        /* \"xeam_test_contract_1.sol\":3114:3121  tax * 2 */\n      tag_231\n      jump\t// in\n    tag_289:\n        /* \"xeam_test_contract_1.sol\":3113:3127  (tax * 2) / 12 */\n      tag_290\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_290:\n        /* \"xeam_test_contract_1.sol\":3088:3127  uint256 marketingShare = (tax * 2) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":3138:3158  uint256 stakingShare */\n      0x00\n        /* \"xeam_test_contract_1.sol\":3173:3175  12 */\n      0x0c\n        /* \"xeam_test_contract_1.sol\":3162:3169  tax * 1 */\n      tag_291\n        /* \"xeam_test_contract_1.sol\":3162:3165  tax */\n      dup9\n        /* \"xeam_test_contract_1.sol\":3168:3169  1 */\n      0x01\n        /* \"xeam_test_contract_1.sol\":3162:3169  tax * 1 */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"xeam_test_contract_1.sol\":3161:3175  (tax * 1) / 12 */\n      tag_292\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_292:\n        /* \"xeam_test_contract_1.sol\":3138:3175  uint256 stakingShare = (tax * 1) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1.sol\":3188:3250  super._transfer(sender, encouragementFund, encouragementShare) */\n      tag_293\n        /* \"xeam_test_contract_1.sol\":3204:3210  sender */\n      dup11\n        /* \"xeam_test_contract_1.sol\":3212:3229  encouragementFund */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"xeam_test_contract_1.sol\":3231:3249  encouragementShare */\n      dup7\n        /* \"xeam_test_contract_1.sol\":3188:3203  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3188:3250  super._transfer(sender, encouragementFund, encouragementShare) */\n      jump\t// in\n    tag_293:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1.sol\":3281:3299  encouragementShare */\n      dup5\n        /* \"xeam_test_contract_1.sol\":3266:3322  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n      mload(0x40)\n      tag_294\n      swap2\n        /* \"#utility.yul\":7332:7357   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x40\n        /* \"#utility.yul\":7388:7390   */\n      0x20\n        /* \"#utility.yul\":7373:7391   */\n      dup3\n      add\n        /* \"#utility.yul\":7366:7396   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7432:7434   */\n      0x12\n        /* \"#utility.yul\":7412:7430   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7405:7435   */\n      mstore\n      shl(0x72, 0x115b98dbdd5c9859d95b595b9d08119d5b99)\n        /* \"#utility.yul\":7466:7468   */\n      0x60\n        /* \"#utility.yul\":7451:7469   */\n      dup3\n      add\n        /* \"#utility.yul\":7444:7492   */\n      mstore\n        /* \"#utility.yul\":7524:7527   */\n      0x80\n        /* \"#utility.yul\":7509:7528   */\n      add\n      swap1\n        /* \"#utility.yul\":7120:7534   */\n      jump\n        /* \"xeam_test_contract_1.sol\":3266:3322  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3359:3372  emergencyFund */\n      sload(0x08)\n        /* \"xeam_test_contract_1.sol\":3335:3389  super._transfer(sender, emergencyFund, emergencyShare) */\n      tag_296\n      swap1\n        /* \"xeam_test_contract_1.sol\":3351:3357  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":3359:3372  emergencyFund */\n      and\n        /* \"xeam_test_contract_1.sol\":3374:3388  emergencyShare */\n      dup6\n        /* \"xeam_test_contract_1.sol\":3335:3350  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3335:3389  super._transfer(sender, emergencyFund, emergencyShare) */\n      jump\t// in\n    tag_296:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1.sol\":3420:3434  emergencyShare */\n      dup4\n        /* \"xeam_test_contract_1.sol\":3405:3453  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n      mload(0x40)\n      tag_297\n      swap2\n        /* \"#utility.yul\":7751:7776   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7812:7814   */\n      0x40\n        /* \"#utility.yul\":7807:7809   */\n      0x20\n        /* \"#utility.yul\":7792:7810   */\n      dup3\n      add\n        /* \"#utility.yul\":7785:7815   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7851:7853   */\n      0x0e\n        /* \"#utility.yul\":7831:7849   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7824:7854   */\n      mstore\n      shl(0x92, 0x115b595c99d95b98de48119d5b99)\n        /* \"#utility.yul\":7885:7887   */\n      0x60\n        /* \"#utility.yul\":7870:7888   */\n      dup3\n      add\n        /* \"#utility.yul\":7863:7907   */\n      mstore\n        /* \"#utility.yul\":7939:7942   */\n      0x80\n        /* \"#utility.yul\":7924:7943   */\n      add\n      swap1\n        /* \"#utility.yul\":7539:7949   */\n      jump\n        /* \"xeam_test_contract_1.sol\":3405:3453  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3490:3505  marketingWallet */\n      sload(0x09)\n        /* \"xeam_test_contract_1.sol\":3466:3522  super._transfer(sender, marketingWallet, marketingShare) */\n      tag_299\n      swap1\n        /* \"xeam_test_contract_1.sol\":3482:3488  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":3490:3505  marketingWallet */\n      and\n        /* \"xeam_test_contract_1.sol\":3507:3521  marketingShare */\n      dup5\n        /* \"xeam_test_contract_1.sol\":3466:3481  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3466:3522  super._transfer(sender, marketingWallet, marketingShare) */\n      jump\t// in\n    tag_299:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1.sol\":3553:3567  marketingShare */\n      dup3\n        /* \"xeam_test_contract_1.sol\":3538:3581  TaxDistributed(marketingShare, \"Marketing\") */\n      mload(0x40)\n      tag_300\n      swap2\n        /* \"#utility.yul\":8166:8191   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8227:8229   */\n      0x40\n        /* \"#utility.yul\":8222:8224   */\n      0x20\n        /* \"#utility.yul\":8207:8225   */\n      dup3\n      add\n        /* \"#utility.yul\":8200:8230   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8266:8267   */\n      0x09\n        /* \"#utility.yul\":8246:8264   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8239:8268   */\n      mstore\n      shl(0xb8, 0x4d61726b6574696e67)\n        /* \"#utility.yul\":8299:8301   */\n      0x60\n        /* \"#utility.yul\":8284:8302   */\n      dup3\n      add\n        /* \"#utility.yul\":8277:8316   */\n      mstore\n        /* \"#utility.yul\":8348:8351   */\n      0x80\n        /* \"#utility.yul\":8333:8352   */\n      add\n      swap1\n        /* \"#utility.yul\":7954:8358   */\n      jump\n        /* \"xeam_test_contract_1.sol\":3538:3581  TaxDistributed(marketingShare, \"Marketing\") */\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3618:3631  stakingWallet */\n      sload(0x0a)\n        /* \"xeam_test_contract_1.sol\":3594:3646  super._transfer(sender, stakingWallet, stakingShare) */\n      tag_302\n      swap1\n        /* \"xeam_test_contract_1.sol\":3610:3616  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1.sol\":3618:3631  stakingWallet */\n      and\n        /* \"xeam_test_contract_1.sol\":3633:3645  stakingShare */\n      dup4\n        /* \"xeam_test_contract_1.sol\":3594:3609  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3594:3646  super._transfer(sender, stakingWallet, stakingShare) */\n      jump\t// in\n    tag_302:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1.sol\":3677:3689  stakingShare */\n      dup2\n        /* \"xeam_test_contract_1.sol\":3662:3701  TaxDistributed(stakingShare, \"Staking\") */\n      mload(0x40)\n      tag_303\n      swap2\n        /* \"#utility.yul\":8575:8600   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8636:8638   */\n      0x40\n        /* \"#utility.yul\":8631:8633   */\n      0x20\n        /* \"#utility.yul\":8616:8634   */\n      dup3\n      add\n        /* \"#utility.yul\":8609:8639   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8675:8676   */\n      0x07\n        /* \"#utility.yul\":8655:8673   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8648:8677   */\n      mstore\n      shl(0xc8, 0x5374616b696e67)\n        /* \"#utility.yul\":8708:8710   */\n      0x60\n        /* \"#utility.yul\":8693:8711   */\n      dup3\n      add\n        /* \"#utility.yul\":8686:8723   */\n      mstore\n        /* \"#utility.yul\":8755:8758   */\n      0x80\n        /* \"#utility.yul\":8740:8759   */\n      add\n      swap1\n        /* \"#utility.yul\":8363:8765   */\n      jump\n        /* \"xeam_test_contract_1.sol\":3662:3701  TaxDistributed(stakingShare, \"Staking\") */\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3714:3761  super._transfer(sender, address(this), lpShare) */\n      tag_305\n        /* \"xeam_test_contract_1.sol\":3730:3736  sender */\n      dup11\n        /* \"xeam_test_contract_1.sol\":3746:3750  this */\n      address\n        /* \"xeam_test_contract_1.sol\":3753:3760  lpShare */\n      dup8\n        /* \"xeam_test_contract_1.sol\":3714:3729  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3714:3761  super._transfer(sender, address(this), lpShare) */\n      jump\t// in\n    tag_305:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1.sol\":3792:3799  lpShare */\n      dup6\n        /* \"xeam_test_contract_1.sol\":3777:3818  TaxDistributed(lpShare, \"Liquidity Pool\") */\n      mload(0x40)\n      tag_306\n      swap2\n        /* \"#utility.yul\":8982:9007   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9043:9045   */\n      0x40\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9023:9041   */\n      dup3\n      add\n        /* \"#utility.yul\":9016:9046   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9082:9084   */\n      0x0e\n        /* \"#utility.yul\":9062:9080   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9055:9085   */\n      mstore\n      shl(0x92, 0x131a5c5d5a591a5d1e48141bdbdb)\n        /* \"#utility.yul\":9116:9118   */\n      0x60\n        /* \"#utility.yul\":9101:9119   */\n      dup3\n      add\n        /* \"#utility.yul\":9094:9138   */\n      mstore\n        /* \"#utility.yul\":9170:9173   */\n      0x80\n        /* \"#utility.yul\":9155:9174   */\n      add\n      swap1\n        /* \"#utility.yul\":8770:9180   */\n      jump\n        /* \"xeam_test_contract_1.sol\":3777:3818  TaxDistributed(lpShare, \"Liquidity Pool\") */\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1.sol\":3831:3876  super._transfer(sender, recipient, netAmount) */\n      tag_308\n        /* \"xeam_test_contract_1.sol\":3847:3853  sender */\n      dup11\n        /* \"xeam_test_contract_1.sol\":3855:3864  recipient */\n      dup11\n        /* \"xeam_test_contract_1.sol\":3866:3875  netAmount */\n      dup9\n        /* \"xeam_test_contract_1.sol\":3831:3846  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1.sol\":3831:3876  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_308:\n        /* \"xeam_test_contract_1.sol\":2717:3884  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"xeam_test_contract_1.sol\":2629:3884  function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_310\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_311\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x07\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_313:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_317\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x07\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_313\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_334\n      swap2\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n      swap1\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9387:9389   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9369:9390   */\n      mstore\n        /* \"#utility.yul\":9426:9428   */\n      0x14\n        /* \"#utility.yul\":9406:9424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9399:9429   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9445:9463   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9438:9488   */\n      mstore\n        /* \"#utility.yul\":9505:9523   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_161\n        /* \"#utility.yul\":9185:9529   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_342\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_342:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_343\n      swap1\n      pop\n      jump\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9754:9786   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9736:9787   */\n      mstore\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9796:9830   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9846:9864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9839:9873   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9709:9727   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_161\n        /* \"#utility.yul\":9534:9879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_348)\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_349\n      swap2\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n      swap1\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_47:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_350:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_356:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_50:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_358:\n        /* \"#utility.yul\":991:1020   */\n      tag_359\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_350\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1320:1666   */\n    tag_56:\n        /* \"#utility.yul\":1388:1394   */\n      0x00\n        /* \"#utility.yul\":1396:1402   */\n      dup1\n        /* \"#utility.yul\":1449:1451   */\n      0x40\n        /* \"#utility.yul\":1437:1446   */\n      dup4\n        /* \"#utility.yul\":1428:1435   */\n      dup6\n        /* \"#utility.yul\":1424:1447   */\n      sub\n        /* \"#utility.yul\":1420:1452   */\n      slt\n        /* \"#utility.yul\":1417:1469   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1462:1463   */\n      dup1\n        /* \"#utility.yul\":1455:1467   */\n      revert\n        /* \"#utility.yul\":1417:1469   */\n    tag_362:\n      pop\n      pop\n        /* \"#utility.yul\":1510:1533   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1630:1632   */\n      0x20\n        /* \"#utility.yul\":1615:1633   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1602:1634   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1320:1666   */\n      jump\t// out\n        /* \"#utility.yul\":1853:2227   */\n    tag_64:\n        /* \"#utility.yul\":1930:1936   */\n      0x00\n        /* \"#utility.yul\":1938:1944   */\n      dup1\n        /* \"#utility.yul\":1946:1952   */\n      0x00\n        /* \"#utility.yul\":1999:2001   */\n      0x60\n        /* \"#utility.yul\":1987:1996   */\n      dup5\n        /* \"#utility.yul\":1978:1985   */\n      dup7\n        /* \"#utility.yul\":1974:1997   */\n      sub\n        /* \"#utility.yul\":1970:2002   */\n      slt\n        /* \"#utility.yul\":1967:2019   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2015:2016   */\n      0x00\n        /* \"#utility.yul\":2012:2013   */\n      dup1\n        /* \"#utility.yul\":2005:2017   */\n      revert\n        /* \"#utility.yul\":1967:2019   */\n    tag_365:\n        /* \"#utility.yul\":2038:2067   */\n      tag_366\n        /* \"#utility.yul\":2057:2066   */\n      dup5\n        /* \"#utility.yul\":2038:2067   */\n      tag_350\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2028:2067   */\n      swap3\n      pop\n        /* \"#utility.yul\":2086:2124   */\n      tag_367\n        /* \"#utility.yul\":2120:2122   */\n      0x20\n        /* \"#utility.yul\":2109:2118   */\n      dup6\n        /* \"#utility.yul\":2105:2123   */\n      add\n        /* \"#utility.yul\":2086:2124   */\n      tag_350\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1853:2227   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2076:2124   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2193:2195   */\n      0x40\n        /* \"#utility.yul\":2178:2196   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2165:2197   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1853:2227   */\n      jump\t// out\n        /* \"#utility.yul\":2421:2607   */\n    tag_81:\n        /* \"#utility.yul\":2480:2486   */\n      0x00\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"#utility.yul\":2521:2530   */\n      dup3\n        /* \"#utility.yul\":2512:2519   */\n      dup5\n        /* \"#utility.yul\":2508:2531   */\n      sub\n        /* \"#utility.yul\":2504:2536   */\n      slt\n        /* \"#utility.yul\":2501:2553   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":2549:2550   */\n      0x00\n        /* \"#utility.yul\":2546:2547   */\n      dup1\n        /* \"#utility.yul\":2539:2551   */\n      revert\n        /* \"#utility.yul\":2501:2553   */\n    tag_370:\n        /* \"#utility.yul\":2572:2601   */\n      tag_371\n        /* \"#utility.yul\":2591:2600   */\n      dup3\n        /* \"#utility.yul\":2572:2601   */\n      tag_350\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2562:2601   */\n      swap4\n        /* \"#utility.yul\":2421:2607   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:2959   */\n    tag_98:\n        /* \"#utility.yul\":2677:2683   */\n      0x00\n        /* \"#utility.yul\":2685:2691   */\n      dup1\n        /* \"#utility.yul\":2738:2740   */\n      0x40\n        /* \"#utility.yul\":2726:2735   */\n      dup4\n        /* \"#utility.yul\":2717:2724   */\n      dup6\n        /* \"#utility.yul\":2713:2736   */\n      sub\n        /* \"#utility.yul\":2709:2741   */\n      slt\n        /* \"#utility.yul\":2706:2758   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2754:2755   */\n      0x00\n        /* \"#utility.yul\":2751:2752   */\n      dup1\n        /* \"#utility.yul\":2744:2756   */\n      revert\n        /* \"#utility.yul\":2706:2758   */\n    tag_373:\n        /* \"#utility.yul\":2777:2806   */\n      tag_374\n        /* \"#utility.yul\":2796:2805   */\n      dup4\n        /* \"#utility.yul\":2777:2806   */\n      tag_350\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2767:2806   */\n      swap2\n      pop\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"#utility.yul\":2845:2854   */\n      dup4\n        /* \"#utility.yul\":2841:2859   */\n      add\n        /* \"#utility.yul\":2828:2860   */\n      calldataload\n        /* \"#utility.yul\":2903:2908   */\n      dup1\n        /* \"#utility.yul\":2896:2909   */\n      iszero\n        /* \"#utility.yul\":2889:2910   */\n      iszero\n        /* \"#utility.yul\":2882:2887   */\n      dup2\n        /* \"#utility.yul\":2879:2911   */\n      eq\n        /* \"#utility.yul\":2869:2929   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2922:2923   */\n      dup1\n        /* \"#utility.yul\":2915:2927   */\n      revert\n        /* \"#utility.yul\":2869:2929   */\n    tag_375:\n        /* \"#utility.yul\":2948:2953   */\n      dup1\n        /* \"#utility.yul\":2938:2953   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2612:2959   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3224   */\n    tag_131:\n        /* \"#utility.yul\":3032:3038   */\n      0x00\n        /* \"#utility.yul\":3040:3046   */\n      dup1\n        /* \"#utility.yul\":3093:3095   */\n      0x40\n        /* \"#utility.yul\":3081:3090   */\n      dup4\n        /* \"#utility.yul\":3072:3079   */\n      dup6\n        /* \"#utility.yul\":3068:3091   */\n      sub\n        /* \"#utility.yul\":3064:3096   */\n      slt\n        /* \"#utility.yul\":3061:3113   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3106:3107   */\n      dup1\n        /* \"#utility.yul\":3099:3111   */\n      revert\n        /* \"#utility.yul\":3061:3113   */\n    tag_377:\n        /* \"#utility.yul\":3132:3161   */\n      tag_378\n        /* \"#utility.yul\":3151:3160   */\n      dup4\n        /* \"#utility.yul\":3132:3161   */\n      tag_350\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3122:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3180:3218   */\n      tag_379\n        /* \"#utility.yul\":3214:3216   */\n      0x20\n        /* \"#utility.yul\":3203:3212   */\n      dup5\n        /* \"#utility.yul\":3199:3217   */\n      add\n        /* \"#utility.yul\":3180:3218   */\n      tag_350\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3170:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":2964:3224   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3609   */\n    tag_145:\n        /* \"#utility.yul\":3308:3309   */\n      0x01\n        /* \"#utility.yul\":3304:3316   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3351:3363   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3372:3433   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3426:3430   */\n      0x7f\n        /* \"#utility.yul\":3418:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3431   */\n      and\n        /* \"#utility.yul\":3404:3431   */\n      swap2\n      pop\n        /* \"#utility.yul\":3372:3433   */\n    tag_381:\n        /* \"#utility.yul\":3479:3481   */\n      0x20\n        /* \"#utility.yul\":3471:3477   */\n      dup3\n        /* \"#utility.yul\":3468:3482   */\n      lt\n        /* \"#utility.yul\":3448:3466   */\n      dup2\n        /* \"#utility.yul\":3445:3483   */\n      sub\n        /* \"#utility.yul\":3442:3603   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3525:3535   */\n      0x4e487b71\n        /* \"#utility.yul\":3520:3523   */\n      0xe0\n        /* \"#utility.yul\":3516:3536   */\n      shl\n        /* \"#utility.yul\":3513:3514   */\n      0x00\n        /* \"#utility.yul\":3506:3537   */\n      mstore\n        /* \"#utility.yul\":3560:3564   */\n      0x22\n        /* \"#utility.yul\":3557:3558   */\n      0x04\n        /* \"#utility.yul\":3550:3565   */\n      mstore\n        /* \"#utility.yul\":3588:3592   */\n      0x24\n        /* \"#utility.yul\":3585:3586   */\n      0x00\n        /* \"#utility.yul\":3578:3593   */\n      revert\n        /* \"#utility.yul\":3442:3603   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":3229:3609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4335   */\n    tag_351:\n        /* \"#utility.yul\":4269:4279   */\n      0x4e487b71\n        /* \"#utility.yul\":4264:4267   */\n      0xe0\n        /* \"#utility.yul\":4260:4280   */\n      shl\n        /* \"#utility.yul\":4257:4258   */\n      0x00\n        /* \"#utility.yul\":4250:4281   */\n      mstore\n        /* \"#utility.yul\":4300:4304   */\n      0x11\n        /* \"#utility.yul\":4297:4298   */\n      0x04\n        /* \"#utility.yul\":4290:4305   */\n      mstore\n        /* \"#utility.yul\":4324:4328   */\n      0x24\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4329   */\n      revert\n        /* \"#utility.yul\":4340:4468   */\n    tag_177:\n        /* \"#utility.yul\":4407:4416   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4428:4439   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4425:4462   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4442:4460   */\n      tag_150\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":5183:5351   */\n    tag_231:\n        /* \"#utility.yul\":5256:5265   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5287:5296   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5304:5319   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5298:5320   */\n      dup5\n      eq\n        /* \"#utility.yul\":5284:5321   */\n      or\n        /* \"#utility.yul\":5274:5345   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5325:5343   */\n      tag_150\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":5356:5573   */\n    tag_233:\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5422:5423   */\n      dup3\n        /* \"#utility.yul\":5412:5544   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5466:5476   */\n      0x4e487b71\n        /* \"#utility.yul\":5461:5464   */\n      0xe0\n        /* \"#utility.yul\":5457:5477   */\n      shl\n        /* \"#utility.yul\":5454:5455   */\n      0x00\n        /* \"#utility.yul\":5447:5478   */\n      mstore\n        /* \"#utility.yul\":5501:5505   */\n      0x12\n        /* \"#utility.yul\":5498:5499   */\n      0x04\n        /* \"#utility.yul\":5491:5506   */\n      mstore\n        /* \"#utility.yul\":5529:5533   */\n      0x24\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5519:5534   */\n      revert\n        /* \"#utility.yul\":5412:5544   */\n    tag_395:\n      pop\n        /* \"#utility.yul\":5558:5567   */\n      div\n      swap1\n        /* \"#utility.yul\":5356:5573   */\n      jump\t// out\n        /* \"#utility.yul\":5923:6048   */\n    tag_263:\n        /* \"#utility.yul\":5988:5997   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6009:6019   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6006:6042   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":6022:6040   */\n      tag_150\n      tag_351\n      jump\t// in\n    stop\n    data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146 6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n\n    auxdata: 0xa26469706673582212204cd1936726e61034d3f90f1aeb65d2df8a28dbd1e6197f4122c409eb743b5fab64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1238": {
									"entryPoint": null,
									"id": 1238,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 453,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 372,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 509,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4356:9",
										"nodeType": "YulBlock",
										"src": "0:4356:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:9",
													"nodeType": "YulBlock",
													"src": "74:117:9",
													"statements": [
														{
															"nativeSrc": "84:22:9",
															"nodeType": "YulAssignment",
															"src": "84:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:9"
																},
																"nativeSrc": "93:13:9",
																"nodeType": "YulFunctionCall",
																"src": "93:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:9",
																"nodeType": "YulBlock",
																"src": "169:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:9",
																					"nodeType": "YulLiteral",
																					"src": "178:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:9",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:9"
																			},
																			"nativeSrc": "171:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:9"
																		},
																		"nativeSrc": "171:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:9",
																										"nodeType": "YulLiteral",
																										"src": "154:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:9",
																										"nodeType": "YulLiteral",
																										"src": "159:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:9"
																								},
																								"nativeSrc": "150:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:9",
																								"nodeType": "YulLiteral",
																								"src": "163:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:9"
																						},
																						"nativeSrc": "146:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:9"
																				},
																				"nativeSrc": "135:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:9"
																		},
																		"nativeSrc": "125:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:9"
																},
																"nativeSrc": "118:50:9",
																"nodeType": "YulFunctionCall",
																"src": "118:50:9"
															},
															"nativeSrc": "115:70:9",
															"nodeType": "YulIf",
															"src": "115:70:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:9",
														"nodeType": "YulTypedName",
														"src": "53:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:9",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nativeSrc": "345:401:9",
													"nodeType": "YulBlock",
													"src": "345:401:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:9",
																"nodeType": "YulBlock",
																"src": "392:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:9",
																					"nodeType": "YulLiteral",
																					"src": "401:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:9",
																					"nodeType": "YulLiteral",
																					"src": "404:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:9"
																			},
																			"nativeSrc": "394:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:9"
																		},
																		"nativeSrc": "394:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:9"
																		},
																		"nativeSrc": "362:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:9",
																		"nodeType": "YulLiteral",
																		"src": "387:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:9"
																},
																"nativeSrc": "358:33:9",
																"nodeType": "YulFunctionCall",
																"src": "358:33:9"
															},
															"nativeSrc": "355:53:9",
															"nodeType": "YulIf",
															"src": "355:53:9"
														},
														{
															"nativeSrc": "417:50:9",
															"nodeType": "YulAssignment",
															"src": "417:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:9"
																},
																"nativeSrc": "427:40:9",
																"nodeType": "YulFunctionCall",
																"src": "427:40:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:9"
																}
															]
														},
														{
															"nativeSrc": "476:59:9",
															"nodeType": "YulAssignment",
															"src": "476:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:9",
																				"nodeType": "YulLiteral",
																				"src": "531:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:9"
																		},
																		"nativeSrc": "516:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:9"
																},
																"nativeSrc": "486:49:9",
																"nodeType": "YulFunctionCall",
																"src": "486:49:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:9"
																}
															]
														},
														{
															"nativeSrc": "544:59:9",
															"nodeType": "YulAssignment",
															"src": "544:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:9",
																				"nodeType": "YulLiteral",
																				"src": "599:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:9"
																		},
																		"nativeSrc": "584:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:9"
																},
																"nativeSrc": "554:49:9",
																"nodeType": "YulFunctionCall",
																"src": "554:49:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																}
															]
														},
														{
															"nativeSrc": "612:59:9",
															"nodeType": "YulAssignment",
															"src": "612:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:9",
																				"nodeType": "YulLiteral",
																				"src": "667:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:9"
																},
																"nativeSrc": "622:49:9",
																"nodeType": "YulFunctionCall",
																"src": "622:49:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:9"
																}
															]
														},
														{
															"nativeSrc": "680:60:9",
															"nodeType": "YulAssignment",
															"src": "680:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:3:9",
																				"nodeType": "YulLiteral",
																				"src": "735:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:9"
																		},
																		"nativeSrc": "720:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:9"
																},
																"nativeSrc": "690:50:9",
																"nodeType": "YulFunctionCall",
																"src": "690:50:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "680:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:550:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:9",
														"nodeType": "YulTypedName",
														"src": "279:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:9",
														"nodeType": "YulTypedName",
														"src": "290:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:9",
														"nodeType": "YulTypedName",
														"src": "302:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:9",
														"nodeType": "YulTypedName",
														"src": "310:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:9",
														"nodeType": "YulTypedName",
														"src": "318:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:9",
														"nodeType": "YulTypedName",
														"src": "326:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:9",
														"nodeType": "YulTypedName",
														"src": "334:6:9",
														"type": ""
													}
												],
												"src": "196:550:9"
											},
											{
												"body": {
													"nativeSrc": "783:95:9",
													"nodeType": "YulBlock",
													"src": "783:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "800:1:9",
																		"nodeType": "YulLiteral",
																		"src": "800:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "807:3:9",
																				"nodeType": "YulLiteral",
																				"src": "807:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "812:10:9",
																				"nodeType": "YulLiteral",
																				"src": "812:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "803:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:9"
																		},
																		"nativeSrc": "803:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "803:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "793:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:9"
																},
																"nativeSrc": "793:31:9",
																"nodeType": "YulFunctionCall",
																"src": "793:31:9"
															},
															"nativeSrc": "793:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "793:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:9",
																		"nodeType": "YulLiteral",
																		"src": "840:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:9",
																		"nodeType": "YulLiteral",
																		"src": "843:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:9"
																},
																"nativeSrc": "833:15:9",
																"nodeType": "YulFunctionCall",
																"src": "833:15:9"
															},
															"nativeSrc": "833:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:9",
																		"nodeType": "YulLiteral",
																		"src": "864:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:9",
																		"nodeType": "YulLiteral",
																		"src": "867:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:9"
																},
																"nativeSrc": "857:15:9",
																"nodeType": "YulFunctionCall",
																"src": "857:15:9"
															},
															"nativeSrc": "857:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "751:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "751:127:9"
											},
											{
												"body": {
													"nativeSrc": "938:325:9",
													"nodeType": "YulBlock",
													"src": "938:325:9",
													"statements": [
														{
															"nativeSrc": "948:22:9",
															"nodeType": "YulAssignment",
															"src": "948:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "962:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "965:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "965:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "958:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:9"
																},
																"nativeSrc": "958:12:9",
																"nodeType": "YulFunctionCall",
																"src": "958:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "948:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:9"
																}
															]
														},
														{
															"nativeSrc": "979:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "979:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1009:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1009:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1005:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:9"
																},
																"nativeSrc": "1005:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "983:18:9",
																	"nodeType": "YulTypedName",
																	"src": "983:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1056:31:9",
																"nodeType": "YulBlock",
																"src": "1056:31:9",
																"statements": [
																	{
																		"nativeSrc": "1058:27:9",
																		"nodeType": "YulAssignment",
																		"src": "1058:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1072:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1072:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1080:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1080:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1068:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1068:3:9"
																			},
																			"nativeSrc": "1068:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1068:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1058:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1036:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1036:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:9"
																},
																"nativeSrc": "1029:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1029:26:9"
															},
															"nativeSrc": "1026:61:9",
															"nodeType": "YulIf",
															"src": "1026:61:9"
														},
														{
															"body": {
																"nativeSrc": "1146:111:9",
																"nodeType": "YulBlock",
																"src": "1146:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1174:3:9",
																							"nodeType": "YulLiteral",
																							"src": "1174:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1179:10:9",
																							"nodeType": "YulLiteral",
																							"src": "1179:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1170:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1170:3:9"
																					},
																					"nativeSrc": "1170:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1170:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1160:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:9"
																			},
																			"nativeSrc": "1160:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1160:31:9"
																		},
																		"nativeSrc": "1160:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1214:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1204:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:9"
																			},
																			"nativeSrc": "1204:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:15:9"
																		},
																		"nativeSrc": "1204:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1239:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1242:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1242:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1232:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:9"
																			},
																			"nativeSrc": "1232:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1232:15:9"
																		},
																		"nativeSrc": "1232:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1102:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1102:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1125:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1125:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1133:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1133:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1122:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:2:9"
																		},
																		"nativeSrc": "1122:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1122:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1099:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1099:2:9"
																},
																"nativeSrc": "1099:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1099:38:9"
															},
															"nativeSrc": "1096:161:9",
															"nodeType": "YulIf",
															"src": "1096:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "883:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "918:4:9",
														"nodeType": "YulTypedName",
														"src": "918:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "927:6:9",
														"nodeType": "YulTypedName",
														"src": "927:6:9",
														"type": ""
													}
												],
												"src": "883:380:9"
											},
											{
												"body": {
													"nativeSrc": "1324:65:9",
													"nodeType": "YulBlock",
													"src": "1324:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1344:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1344:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:9"
																},
																"nativeSrc": "1334:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1334:14:9"
															},
															"nativeSrc": "1334:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "1334:14:9"
														},
														{
															"nativeSrc": "1357:26:9",
															"nodeType": "YulAssignment",
															"src": "1357:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1375:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1378:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1378:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1365:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1365:9:9"
																},
																"nativeSrc": "1365:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1365:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1357:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1357:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1268:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1307:3:9",
														"nodeType": "YulTypedName",
														"src": "1307:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1315:4:9",
														"nodeType": "YulTypedName",
														"src": "1315:4:9",
														"type": ""
													}
												],
												"src": "1268:121:9"
											},
											{
												"body": {
													"nativeSrc": "1475:437:9",
													"nodeType": "YulBlock",
													"src": "1475:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1508:398:9",
																"nodeType": "YulBlock",
																"src": "1508:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1529:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1532:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1532:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1522:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:9"
																			},
																			"nativeSrc": "1522:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1522:16:9"
																		},
																		"nativeSrc": "1522:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:16:9"
																	},
																	{
																		"nativeSrc": "1551:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1551:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1573:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1573:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1576:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1576:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1563:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:9"
																			},
																			"nativeSrc": "1563:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1563:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1555:4:9",
																				"nodeType": "YulTypedName",
																				"src": "1555:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1594:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1594:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1617:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1617:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1627:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1627:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1634:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1634:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1646:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1646:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1630:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1630:3:9"
																							},
																							"nativeSrc": "1630:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1630:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1623:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1623:3:9"
																					},
																					"nativeSrc": "1623:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1623:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1613:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:9"
																			},
																			"nativeSrc": "1613:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1613:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1598:11:9",
																				"nodeType": "YulTypedName",
																				"src": "1598:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1688:23:9",
																			"nodeType": "YulBlock",
																			"src": "1688:23:9",
																			"statements": [
																				{
																					"nativeSrc": "1690:19:9",
																					"nodeType": "YulAssignment",
																					"src": "1690:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1705:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1705:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1690:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "1690:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1670:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "1670:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1682:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1682:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1667:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1667:2:9"
																			},
																			"nativeSrc": "1667:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1667:20:9"
																		},
																		"nativeSrc": "1664:47:9",
																		"nodeType": "YulIf",
																		"src": "1664:47:9"
																	},
																	{
																		"nativeSrc": "1724:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1724:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1738:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1738:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1748:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1748:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1755:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1755:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1760:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1760:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1751:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1751:3:9"
																							},
																							"nativeSrc": "1751:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1751:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1744:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1744:3:9"
																					},
																					"nativeSrc": "1744:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1744:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1734:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:9"
																			},
																			"nativeSrc": "1734:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1728:2:9",
																				"nodeType": "YulTypedName",
																				"src": "1728:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1778:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1778:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1791:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "1791:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1782:5:9",
																				"nodeType": "YulTypedName",
																				"src": "1782:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1876:20:9",
																			"nodeType": "YulBlock",
																			"src": "1876:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1885:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1885:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1892:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1892:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1878:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1878:6:9"
																						},
																						"nativeSrc": "1878:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1878:16:9"
																					},
																					"nativeSrc": "1878:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "1878:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1826:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1826:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1833:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1833:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1823:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1823:2:9"
																			},
																			"nativeSrc": "1823:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1823:13:9"
																		},
																		"nativeSrc": "1815:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1837:26:9",
																			"nodeType": "YulBlock",
																			"src": "1837:26:9",
																			"statements": [
																				{
																					"nativeSrc": "1839:22:9",
																					"nodeType": "YulAssignment",
																					"src": "1839:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1852:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1852:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1859:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1859:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1848:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1848:3:9"
																						},
																						"nativeSrc": "1848:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1848:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1839:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1839:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1819:3:9",
																			"nodeType": "YulBlock",
																			"src": "1819:3:9",
																			"statements": []
																		},
																		"src": "1815:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1491:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1496:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1488:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1488:2:9"
																},
																"nativeSrc": "1488:11:9",
																"nodeType": "YulFunctionCall",
																"src": "1488:11:9"
															},
															"nativeSrc": "1485:421:9",
															"nodeType": "YulIf",
															"src": "1485:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1394:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1447:5:9",
														"nodeType": "YulTypedName",
														"src": "1447:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1454:3:9",
														"nodeType": "YulTypedName",
														"src": "1454:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1459:10:9",
														"nodeType": "YulTypedName",
														"src": "1459:10:9",
														"type": ""
													}
												],
												"src": "1394:518:9"
											},
											{
												"body": {
													"nativeSrc": "2002:81:9",
													"nodeType": "YulBlock",
													"src": "2002:81:9",
													"statements": [
														{
															"nativeSrc": "2012:65:9",
															"nodeType": "YulAssignment",
															"src": "2012:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2027:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2027:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2045:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2045:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2048:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "2048:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2041:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:9"
																								},
																								"nativeSrc": "2041:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2041:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2058:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2058:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2054:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2054:3:9"
																								},
																								"nativeSrc": "2054:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2054:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2037:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2037:3:9"
																						},
																						"nativeSrc": "2037:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2037:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2033:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2033:3:9"
																				},
																				"nativeSrc": "2033:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2033:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2023:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:9"
																		},
																		"nativeSrc": "2023:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2069:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2069:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2072:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2072:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2065:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:9"
																		},
																		"nativeSrc": "2065:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2020:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2020:2:9"
																},
																"nativeSrc": "2020:57:9",
																"nodeType": "YulFunctionCall",
																"src": "2020:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2012:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2012:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1917:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1979:4:9",
														"nodeType": "YulTypedName",
														"src": "1979:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1985:3:9",
														"nodeType": "YulTypedName",
														"src": "1985:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1993:4:9",
														"nodeType": "YulTypedName",
														"src": "1993:4:9",
														"type": ""
													}
												],
												"src": "1917:166:9"
											},
											{
												"body": {
													"nativeSrc": "2184:1203:9",
													"nodeType": "YulBlock",
													"src": "2184:1203:9",
													"statements": [
														{
															"nativeSrc": "2194:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2214:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2214:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2208:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2208:5:9"
																},
																"nativeSrc": "2208:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2208:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2198:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2198:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2261:22:9",
																"nodeType": "YulBlock",
																"src": "2261:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2263:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2263:16:9"
																			},
																			"nativeSrc": "2263:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:18:9"
																		},
																		"nativeSrc": "2263:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2233:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2233:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2249:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2249:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2253:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2253:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2245:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2245:3:9"
																				},
																				"nativeSrc": "2245:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2245:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2257:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2257:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2241:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:9"
																		},
																		"nativeSrc": "2241:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2230:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2230:2:9"
																},
																"nativeSrc": "2230:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2230:30:9"
															},
															"nativeSrc": "2227:56:9",
															"nodeType": "YulIf",
															"src": "2227:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2336:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2336:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2374:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2374:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2368:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2368:5:9"
																				},
																				"nativeSrc": "2368:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2368:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2342:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "2342:25:9"
																		},
																		"nativeSrc": "2342:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2382:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2292:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2292:43:9"
																},
																"nativeSrc": "2292:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2292:97:9"
															},
															"nativeSrc": "2292:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "2292:97:9"
														},
														{
															"nativeSrc": "2398:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2398:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2415:1:9",
																"nodeType": "YulLiteral",
																"src": "2415:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2402:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2402:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2425:17:9",
															"nodeType": "YulAssignment",
															"src": "2425:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2438:4:9",
																"nodeType": "YulLiteral",
																"src": "2438:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2425:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2425:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2488:642:9",
																		"nodeType": "YulBlock",
																		"src": "2488:642:9",
																		"statements": [
																			{
																				"nativeSrc": "2502:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2502:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2521:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2521:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2533:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2533:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2529:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2529:3:9"
																							},
																							"nativeSrc": "2529:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2529:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2517:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2517:3:9"
																					},
																					"nativeSrc": "2517:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2517:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2506:7:9",
																						"nodeType": "YulTypedName",
																						"src": "2506:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2550:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2550:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2594:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2594:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2564:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "2564:29:9"
																					},
																					"nativeSrc": "2564:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2564:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2554:6:9",
																						"nodeType": "YulTypedName",
																						"src": "2554:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2612:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2612:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2621:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2616:1:9",
																						"nodeType": "YulTypedName",
																						"src": "2616:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2692:165:9",
																					"nodeType": "YulBlock",
																					"src": "2692:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2717:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2717:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2735:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "2735:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2740:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "2740:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2731:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2731:3:9"
																												},
																												"nativeSrc": "2731:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2731:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2725:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "2725:5:9"
																										},
																										"nativeSrc": "2725:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2725:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2710:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2710:6:9"
																								},
																								"nativeSrc": "2710:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2710:42:9"
																							},
																							"nativeSrc": "2710:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2710:42:9"
																						},
																						{
																							"nativeSrc": "2769:24:9",
																							"nodeType": "YulAssignment",
																							"src": "2769:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2783:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2783:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2791:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2791:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2779:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:9"
																								},
																								"nativeSrc": "2779:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2769:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2769:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2810:33:9",
																							"nodeType": "YulAssignment",
																							"src": "2810:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2827:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "2827:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2838:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2838:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2823:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2823:3:9"
																								},
																								"nativeSrc": "2823:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2823:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2810:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "2810:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2646:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "2646:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2649:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2649:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2643:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2643:2:9"
																					},
																					"nativeSrc": "2643:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:14:9"
																				},
																				"nativeSrc": "2635:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2658:21:9",
																					"nodeType": "YulBlock",
																					"src": "2658:21:9",
																					"statements": [
																						{
																							"nativeSrc": "2660:17:9",
																							"nodeType": "YulAssignment",
																							"src": "2660:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2669:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "2669:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2672:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2672:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2665:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2665:3:9"
																								},
																								"nativeSrc": "2665:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2665:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2660:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "2660:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2639:3:9",
																					"nodeType": "YulBlock",
																					"src": "2639:3:9",
																					"statements": []
																				},
																				"src": "2635:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "2905:166:9",
																					"nodeType": "YulBlock",
																					"src": "2905:166:9",
																					"statements": [
																						{
																							"nativeSrc": "2923:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2923:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2950:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2950:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2955:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2955:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2946:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2946:3:9"
																										},
																										"nativeSrc": "2946:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2946:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2940:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2940:5:9"
																								},
																								"nativeSrc": "2940:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2940:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2927:9:9",
																									"nodeType": "YulTypedName",
																									"src": "2927:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2990:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2990:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3002:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3002:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3029:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "3029:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3032:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "3032:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3025:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "3025:3:9"
																																		},
																																		"nativeSrc": "3025:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3025:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3041:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3041:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3021:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3021:3:9"
																																},
																																"nativeSrc": "3021:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3021:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3051:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "3051:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3047:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "3047:3:9"
																																},
																																"nativeSrc": "3047:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "3047:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3017:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "3017:3:9"
																														},
																														"nativeSrc": "3017:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "3017:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3013:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3013:3:9"
																												},
																												"nativeSrc": "3013:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3013:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2998:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2998:3:9"
																										},
																										"nativeSrc": "2998:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2998:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2983:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2983:6:9"
																								},
																								"nativeSrc": "2983:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2983:74:9"
																							},
																							"nativeSrc": "2983:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2983:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2876:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2876:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2885:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2885:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2873:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2873:2:9"
																					},
																					"nativeSrc": "2873:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2873:19:9"
																				},
																				"nativeSrc": "2870:201:9",
																				"nodeType": "YulIf",
																				"src": "2870:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3091:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3091:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3105:1:9",
																											"nodeType": "YulLiteral",
																											"src": "3105:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3108:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "3108:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3101:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "3101:3:9"
																									},
																									"nativeSrc": "3101:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "3101:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3117:1:9",
																									"nodeType": "YulLiteral",
																									"src": "3117:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3097:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3097:3:9"
																							},
																							"nativeSrc": "3097:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3097:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3084:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3084:6:9"
																					},
																					"nativeSrc": "3084:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3084:36:9"
																				},
																				"nativeSrc": "3084:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3084:36:9"
																			}
																		]
																	},
																	"nativeSrc": "2481:649:9",
																	"nodeType": "YulCase",
																	"src": "2481:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2486:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2486:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3147:234:9",
																		"nodeType": "YulBlock",
																		"src": "3147:234:9",
																		"statements": [
																			{
																				"nativeSrc": "3161:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3161:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3165:5:9",
																						"nodeType": "YulTypedName",
																						"src": "3165:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3210:67:9",
																					"nodeType": "YulBlock",
																					"src": "3210:67:9",
																					"statements": [
																						{
																							"nativeSrc": "3228:35:9",
																							"nodeType": "YulAssignment",
																							"src": "3228:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3247:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "3247:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3252:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3252:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3243:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3243:3:9"
																										},
																										"nativeSrc": "3243:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3243:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3237:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3237:5:9"
																								},
																								"nativeSrc": "3237:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3237:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3228:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3228:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3191:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3191:6:9"
																				},
																				"nativeSrc": "3188:89:9",
																				"nodeType": "YulIf",
																				"src": "3188:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3297:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3297:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3356:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3356:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3363:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3363:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3303:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "3303:52:9"
																							},
																							"nativeSrc": "3303:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3303:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3290:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3290:6:9"
																					},
																					"nativeSrc": "3290:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3290:81:9"
																				},
																				"nativeSrc": "3290:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3290:81:9"
																			}
																		]
																	},
																	"nativeSrc": "3139:242:9",
																	"nodeType": "YulCase",
																	"src": "3139:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2461:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2461:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2469:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2469:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2458:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2458:2:9"
																},
																"nativeSrc": "2458:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2458:14:9"
															},
															"nativeSrc": "2451:930:9",
															"nodeType": "YulSwitch",
															"src": "2451:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2088:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2169:4:9",
														"nodeType": "YulTypedName",
														"src": "2169:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2175:3:9",
														"nodeType": "YulTypedName",
														"src": "2175:3:9",
														"type": ""
													}
												],
												"src": "2088:1299:9"
											},
											{
												"body": {
													"nativeSrc": "3493:102:9",
													"nodeType": "YulBlock",
													"src": "3493:102:9",
													"statements": [
														{
															"nativeSrc": "3503:26:9",
															"nodeType": "YulAssignment",
															"src": "3503:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3515:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3526:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:9"
																},
																"nativeSrc": "3511:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3511:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3503:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3503:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3545:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3560:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3576:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3576:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3581:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3581:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3572:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3572:3:9"
																						},
																						"nativeSrc": "3572:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3572:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3585:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3585:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3568:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:9"
																				},
																				"nativeSrc": "3568:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3568:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3556:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:9"
																		},
																		"nativeSrc": "3556:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:9"
																},
																"nativeSrc": "3538:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3538:51:9"
															},
															"nativeSrc": "3538:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3538:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3392:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3462:9:9",
														"nodeType": "YulTypedName",
														"src": "3462:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3473:6:9",
														"nodeType": "YulTypedName",
														"src": "3473:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3484:4:9",
														"nodeType": "YulTypedName",
														"src": "3484:4:9",
														"type": ""
													}
												],
												"src": "3392:203:9"
											},
											{
												"body": {
													"nativeSrc": "3648:174:9",
													"nodeType": "YulBlock",
													"src": "3648:174:9",
													"statements": [
														{
															"nativeSrc": "3658:16:9",
															"nodeType": "YulAssignment",
															"src": "3658:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3669:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3669:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3672:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3672:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3665:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:9"
																},
																"nativeSrc": "3665:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3665:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3658:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3705:111:9",
																"nodeType": "YulBlock",
																"src": "3705:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3726:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3726:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3733:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3733:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3738:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3738:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3729:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3729:3:9"
																					},
																					"nativeSrc": "3729:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3729:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3719:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:9"
																			},
																			"nativeSrc": "3719:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:31:9"
																		},
																		"nativeSrc": "3719:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3770:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3770:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3773:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3773:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3763:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:9"
																			},
																			"nativeSrc": "3763:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3763:15:9"
																		},
																		"nativeSrc": "3763:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3801:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3801:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3791:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:9"
																			},
																			"nativeSrc": "3791:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:15:9"
																		},
																		"nativeSrc": "3791:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3689:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3689:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3692:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3692:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3686:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3686:2:9"
																},
																"nativeSrc": "3686:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3686:10:9"
															},
															"nativeSrc": "3683:133:9",
															"nodeType": "YulIf",
															"src": "3683:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3600:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3631:1:9",
														"nodeType": "YulTypedName",
														"src": "3631:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3634:1:9",
														"nodeType": "YulTypedName",
														"src": "3634:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3640:3:9",
														"nodeType": "YulTypedName",
														"src": "3640:3:9",
														"type": ""
													}
												],
												"src": "3600:222:9"
											},
											{
												"body": {
													"nativeSrc": "3984:188:9",
													"nodeType": "YulBlock",
													"src": "3984:188:9",
													"statements": [
														{
															"nativeSrc": "3994:26:9",
															"nodeType": "YulAssignment",
															"src": "3994:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4006:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4006:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4017:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4017:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4002:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:9"
																},
																"nativeSrc": "4002:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4002:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3994:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3994:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4036:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4036:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4051:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4051:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4067:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4067:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4072:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4072:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4063:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4063:3:9"
																						},
																						"nativeSrc": "4063:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4063:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4076:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4076:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4059:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:9"
																				},
																				"nativeSrc": "4059:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4047:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:9"
																		},
																		"nativeSrc": "4047:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:9"
																},
																"nativeSrc": "4029:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4029:51:9"
															},
															"nativeSrc": "4029:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4029:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4100:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4100:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4111:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4096:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:9"
																		},
																		"nativeSrc": "4096:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4116:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4116:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4089:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:9"
																},
																"nativeSrc": "4089:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4089:34:9"
															},
															"nativeSrc": "4089:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4089:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4143:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4143:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4154:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4154:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4139:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:9"
																		},
																		"nativeSrc": "4139:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4159:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:9"
																},
																"nativeSrc": "4132:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4132:34:9"
															},
															"nativeSrc": "4132:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4132:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3827:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3937:9:9",
														"nodeType": "YulTypedName",
														"src": "3937:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3948:6:9",
														"nodeType": "YulTypedName",
														"src": "3948:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3956:6:9",
														"nodeType": "YulTypedName",
														"src": "3956:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3964:6:9",
														"nodeType": "YulTypedName",
														"src": "3964:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3975:4:9",
														"nodeType": "YulTypedName",
														"src": "3975:4:9",
														"type": ""
													}
												],
												"src": "3827:345:9"
											},
											{
												"body": {
													"nativeSrc": "4278:76:9",
													"nodeType": "YulBlock",
													"src": "4278:76:9",
													"statements": [
														{
															"nativeSrc": "4288:26:9",
															"nodeType": "YulAssignment",
															"src": "4288:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4300:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4300:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4311:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4311:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4296:3:9"
																},
																"nativeSrc": "4296:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4288:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4288:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4341:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4341:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:9"
																},
																"nativeSrc": "4323:25:9",
																"nodeType": "YulFunctionCall",
																"src": "4323:25:9"
															},
															"nativeSrc": "4323:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "4323:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4177:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4247:9:9",
														"nodeType": "YulTypedName",
														"src": "4247:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4258:6:9",
														"nodeType": "YulTypedName",
														"src": "4258:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4269:4:9",
														"nodeType": "YulTypedName",
														"src": "4269:4:9",
														"type": ""
													}
												],
												"src": "4177:177:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a600c55600c600d55348015610019575f80fd5b506040516118163803806118168339810160408190526100389161033e565b336040518060400160405280600a8152602001692c22a0a6902a37b5b2b760b11b815250604051806040016040528060048152602001635845414d60e01b81525081600390816100889190610437565b5060046100958282610437565b5050506001600160a01b0381166100c657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100cf81610174565b506001600655600780546001600160a81b0319166101006001600160a01b038881169190910291909117909155600880546001600160a01b031990811687841617909155600980548216868416179055600a80548216858416179055600b8054909116918316919091179055610150336a01a784379d99db420000006101c5565b5050335f908152600e60205260409020805460ff1916600117905550610516915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101ee5760405163ec442f0560e01b81525f60048201526024016100bd565b6101f95f83836101fd565b5050565b6001600160a01b038316610227578060025f82825461021c91906104f1565b909155506102979050565b6001600160a01b0383165f90815260208190526040902054818110156102795760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100bd565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166102b3576002805482900390556102d1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161031691815260200190565b60405180910390a3505050565b80516001600160a01b0381168114610339575f80fd5b919050565b5f805f805f60a08688031215610352575f80fd5b61035b86610323565b945061036960208701610323565b935061037760408701610323565b925061038560608701610323565b915061039360808701610323565b90509295509295909350565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806103c757607f821691505b6020821081036103e557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561043257805f5260205f20601f840160051c810160208510156104105750805b601f840160051c820191505b8181101561042f575f815560010161041c565b50505b505050565b81516001600160401b038111156104505761045061039f565b6104648161045e84546103b3565b846103eb565b6020601f821160018114610496575f831561047f5750848201515b5f19600385901b1c1916600184901b17845561042f565b5f84815260208120601f198516915b828110156104c557878501518255602094850194600190920191016104a5565b50848210156104e257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561051057634e487b7160e01b5f52601160045260245ffd5b92915050565b6112f3806105235f395ff3fe608060405234801561000f575f80fd5b50600436106101d1575f3560e01c8063753cafc3116100fe578063c12b7c4e1161009e578063dd62ed3e1161006e578063dd62ed3e146103c2578063df7787a4146103fa578063f2fde38b14610402578063f3b2db3f14610415575f80fd5b8063c12b7c4e14610380578063c816841b14610393578063cc1776d3146103a6578063cc859378146103af575f80fd5b80638da5cb5b116100d95780638da5cb5b1461034c57806395d89b411461035d578063a9059cbb14610365578063bea9ea6214610378575f80fd5b8063753cafc31461031e57806375f0a874146103315780638456cb5914610344575f80fd5b8063313ce5671161017457806352a6a9ec1161014457806352a6a9ec146102cb5780635c975abb146102e357806370a08231146102ee578063715018a614610316575f80fd5b8063313ce567146102895780633f4ba83a146102985780634f7041a5146102a05780634fbee193146102a9575f80fd5b80631006ee0c116101af5780631006ee0c1461023d57806318160ddd1461025257806323b872dd146102645780632ff2e9dc14610277575f80fd5b806306ee6ad8146101d557806306fdde0314610205578063095ea7b31461021a575b5f80fd5b600a546101e8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61020d61041d565b6040516101fc9190611099565b61022d6102283660046110e9565b6104ad565b60405190151581526020016101fc565b61025061024b366004611111565b6104c6565b005b6002545b6040519081526020016101fc565b61022d610272366004611131565b610567565b6102566a01a784379d99db4200000081565b604051601281526020016101fc565b6102506105ca565b610256600c5481565b61022d6102b736600461116b565b600e6020525f908152604090205460ff1681565b6007546101e89061010090046001600160a01b031681565b60075460ff1661022d565b6102566102fc36600461116b565b6001600160a01b03165f9081526020819052604090205490565b6102506105dc565b61025061032c36600461118b565b6105ed565b6009546101e8906001600160a01b031681565b61025061061f565b6005546001600160a01b03166101e8565b61020d61062f565b61022d6103733660046110e9565b61063e565b610250610666565b61025061038e36600461116b565b610715565b600b546101e8906001600160a01b031681565b610256600d5481565b6008546101e8906001600160a01b031681565b6102566103d03660046111c4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102566107c1565b61025061041036600461116b565b6107e6565b610256610823565b60606003805461042c906111f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610458906111f5565b80156104a35780601f1061047a576101008083540402835291602001916104a3565b820191905f5260205f20905b81548152906001019060200180831161048657829003601f168201915b5050505050905090565b5f336104ba81858561083c565b60019150505b92915050565b6104ce61084e565b600f82111580156104e0575060148111155b6105205760405162461bcd60e51b815260206004820152600c60248201526b0a8c2f040e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600c829055600d81905560408051838152602081018390527f35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4910160405180910390a15050565b5f61057061087b565b61057b8484846108c1565b6105868484846109eb565b6001600160a01b0384165f908152600160209081526040808320338085529252909120546105c09186916105bb908690611241565b61083c565b5060019392505050565b6105d261084e565b6105da610d1a565b565b6105e461084e565b6105da5f610d6c565b6105f561084e565b6001600160a01b03919091165f908152600e60205260409020805460ff1916911515919091179055565b61062761084e565b6105da610dbd565b60606004805461042c906111f5565b5f61064761087b565b6106523384846108c1565b61065d3384846109eb565b50600192915050565b61066e61084e565b305f90815260208190526040902054806106c25760405162461bcd60e51b81526020600482015260156024820152744e6f204c502066756e647320617661696c61626c6560581b6044820152606401610517565b6106de306106d86005546001600160a01b031690565b83610dfa565b6040518181527fbba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93906020015b60405180910390a150565b61071d61084e565b6001600160a01b0381166107735760405162461bcd60e51b815260206004820152601f60248201527f4e6577207061697220616464726573732063616e6e6f74206265207a65726f006044820152606401610517565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527fdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa842713449060200161070a565b60646107d96a01a784379d99db420000006001611254565b6107e3919061126b565b81565b6107ee61084e565b6001600160a01b03811661081757604051631e4fbdf760e01b81525f6004820152602401610517565b61082081610d6c565b50565b6127106107d96a01a784379d99db420000006005611254565b6108498383836001610e57565b505050565b6005546001600160a01b031633146105da5760405163118cdaa760e01b8152336004820152602401610517565b60075460ff16156105da5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610517565b6001600160a01b0383165f908152600e602052604090205460ff166108495760646108f86a01a784379d99db420000006001611254565b610902919061126b565b81610921846001600160a01b03165f9081526020819052604090205490565b61092b919061128a565b11156109795760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d697400000000000000006044820152606401610517565b6127106109926a01a784379d99db420000006005611254565b61099c919061126b565b8111156108495760405162461bcd60e51b815260206004820152601d60248201527f45786365656473206d6178207472616e73616374696f6e206c696d69740000006044820152606401610517565b600b545f906001600160a01b03848116911614610a21576064600c5483610a129190611254565b610a1c919061126b565b610a3b565b6064600d5483610a319190611254565b610a3b919061126b565b905080821015610a8d5760405162461bcd60e51b815260206004820152601b60248201527f5461782065786365656473207472616e7366657220616d6f756e7400000000006044820152606401610517565b5f610a988284611241565b90505f600c610aa8846004611254565b610ab2919061126b565b90505f600c610ac2856004611254565b610acc919061126b565b90505f600c610adc866001611254565b610ae6919061126b565b90505f600c610af6876002611254565b610b00919061126b565b90505f600c610b10886001611254565b610b1a919061126b565b9050610b3c8a600760019054906101000a90046001600160a01b031686610dfa565b5f8051602061129e83398151915284604051610b8491815260406020820181905260129082015271115b98dbdd5c9859d95b595b9d08119d5b9960721b606082015260800190565b60405180910390a1600854610ba4908b906001600160a01b031685610dfa565b5f8051602061129e83398151915283604051610be8918152604060208201819052600e908201526d115b595c99d95b98de48119d5b9960921b606082015260800190565b60405180910390a1600954610c08908b906001600160a01b031684610dfa565b5f8051602061129e83398151915282604051610c47918152604060208201819052600990820152684d61726b6574696e6760b81b606082015260800190565b60405180910390a1600a54610c67908b906001600160a01b031683610dfa565b5f8051602061129e83398151915281604051610ca4918152604060208201819052600790820152665374616b696e6760c81b606082015260800190565b60405180910390a1610cb78a3087610dfa565b5f8051602061129e83398151915285604051610cfb918152604060208201819052600e908201526d131a5c5d5a591a5d1e48141bdbdb60921b606082015260800190565b60405180910390a1610d0e8a8a88610dfa565b50505050505050505050565b610d22610f2a565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610dc561087b565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d4f3390565b6001600160a01b038316610e2357604051634b637e8f60e11b81525f6004820152602401610517565b6001600160a01b038216610e4c5760405163ec442f0560e01b81525f6004820152602401610517565b610849838383610f73565b6001600160a01b038416610e805760405163e602df0560e01b81525f6004820152602401610517565b6001600160a01b038316610ea957604051634a1406b160e11b81525f6004820152602401610517565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610f2457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1b91815260200190565b60405180910390a35b50505050565b60075460ff166105da5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610517565b6001600160a01b038316610f9d578060025f828254610f92919061128a565b9091555061100d9050565b6001600160a01b0383165f9081526020819052604090205481811015610fef5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610517565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661102957600280548290039055611047565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161108c91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146110e4575f80fd5b919050565b5f80604083850312156110fa575f80fd5b611103836110ce565b946020939093013593505050565b5f8060408385031215611122575f80fd5b50508035926020909101359150565b5f805f60608486031215611143575f80fd5b61114c846110ce565b925061115a602085016110ce565b929592945050506040919091013590565b5f6020828403121561117b575f80fd5b611184826110ce565b9392505050565b5f806040838503121561119c575f80fd5b6111a5836110ce565b9150602083013580151581146111b9575f80fd5b809150509250929050565b5f80604083850312156111d5575f80fd5b6111de836110ce565b91506111ec602084016110ce565b90509250929050565b600181811c9082168061120957607f821691505b60208210810361122757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104c0576104c061122d565b80820281158282048414176104c0576104c061122d565b5f8261128557634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156104c0576104c061122d56fe6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984a26469706673582212204cd1936726e61034d3f90f1aeb65d2df8a28dbd1e6197f4122c409eb743b5fab64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC SSTORE PUSH1 0xC PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1816 CODESIZE SUB DUP1 PUSH2 0x1816 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x38 SWAP2 PUSH2 0x33E JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2C22A0A6902A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x5845414D PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x95 DUP3 DUP3 PUSH2 0x437 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF DUP2 PUSH2 0x174 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP8 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x150 CALLER PUSH11 0x1A784379D99DB42000000 PUSH2 0x1C5 JUMP JUMPDEST POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0x516 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0x1F9 PUSH0 DUP4 DUP4 PUSH2 0x1FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x227 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x297 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35B DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP5 POP PUSH2 0x369 PUSH1 0x20 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP4 POP PUSH2 0x377 PUSH1 0x40 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP3 POP PUSH2 0x385 PUSH1 0x60 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP PUSH2 0x393 PUSH1 0x80 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x410 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x42F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x41C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x45E DUP5 SLOAD PUSH2 0x3B3 JUMP JUMPDEST DUP5 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x496 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x47F JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x42F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4A5 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4E2 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x510 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F3 DUP1 PUSH2 0x523 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x753CAFC3 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xBEA9EA62 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x52A6A9EC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1006EE0C GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1006EE0C EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x256 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x256 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x22D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x62F JUMP JUMPDEST PUSH2 0x22D PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4BA DUP2 DUP6 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x84E JUMP JUMPDEST PUSH1 0xF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x57B DUP5 DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x586 DUP5 DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x5C0 SWAP2 DUP7 SWAP2 PUSH2 0x5BB SWAP1 DUP7 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xD1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH0 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x627 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH0 PUSH2 0x647 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x652 CALLER DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0x84E JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F204C502066756E647320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x6DE ADDRESS PUSH2 0x6D8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xBBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x71D PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH2 0x70A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x849 JUMPI PUSH1 0x64 PUSH2 0x8F8 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 PUSH2 0x921 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x992 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xA21 JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0xD SLOAD DUP4 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461782065786365656473207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP3 DUP5 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAA8 DUP5 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAC2 DUP6 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xADC DUP7 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAF6 DUP8 PUSH1 0x2 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xB10 DUP9 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP11 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xBA4 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xC08 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xC67 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xCB7 DUP11 ADDRESS DUP8 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xCFB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD0E DUP11 DUP11 DUP9 PUSH2 0xDFA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD4F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x100D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1029 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x114C DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP PUSH2 0x115A PUSH1 0x20 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1184 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11DE DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC PUSH1 0x20 DUP5 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1209 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1285 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 0x4C 0xD1 SWAP4 PUSH8 0x26E61034D3F90F1A 0xEB PUSH6 0xD2DF8A28DBD1 0xE6 NOT PUSH32 0x4122C409EB743B5FAB64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "295:4653:8:-:0;;;792:2;768:26;;826:2;801:27;;1115:565;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1346:10;1601:113:4;;;;;;;;;;;;;-1:-1:-1;;;1601:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:4;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:4;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3538:51:9;3511:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:3;1821:7;:22;996:7:2;:15;;-1:-1:-1;;;;;;1369:38:8;996:15:2;-1:-1:-1;;;;;1369:38:8;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;1418:13:::2;:30:::0;;-1:-1:-1;;;;;;1418:30:8;;::::2;::::0;;::::2;;::::0;;;1459:15:::2;:34:::0;;;::::2;::::0;;::::2;;::::0;;1504:13:::2;:30:::0;;;::::2;::::0;;::::2;;::::0;;1545:11:::2;:33:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;1591::::2;1597:10;407:18;1591:5;:33::i;:::-;-1:-1:-1::0;;1654:10:8::2;1635:30;::::0;;;:18:::2;:30;::::0;;;;:37;;-1:-1:-1;;1635:37:8::2;1668:4;1635:37;::::0;;-1:-1:-1;295:4653:8;;-1:-1:-1;;295:4653:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:4:-;-1:-1:-1;;;;;7528:21:4;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:4;;7601:1;7572:32;;;3538:51:9;3511:18;;7572:32:4;3392:203:9;7524:91:4;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:4;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:4;;-1:-1:-1;6093:540:4;;-1:-1:-1;;;;;6307:15:4;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:4;;-1:-1:-1;;;;;4047:32:9;;6386:50:4;;;4029:51:9;4096:18;;;4089:34;;;4139:18;;;4132:34;;;4002:18;;6386:50:4;3827:345:9;6336:115:4;-1:-1:-1;;;;;6571:15:4;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:4;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:4;7092:4;-1:-1:-1;;;;;7083:25:4;;7102:5;7083:25;;;;4323::9;;4311:2;4296:18;;4177:177;7083:25:4;;;;;;;;6008:1107;;;:::o;14:177:9:-;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;751:127::-;812:10;807:3;803:20;800:1;793:31;843:4;840:1;833:15;867:4;864:1;857:15;883:380;962:1;958:12;;;;1005;;;1026:61;;1080:4;1072:6;1068:17;1058:27;;1026:61;1133:2;1125:6;1122:14;1102:18;1099:38;1096:161;;1179:10;1174:3;1170:20;1167:1;1160:31;1214:4;1211:1;1204:15;1242:4;1239:1;1232:15;1096:161;;883:380;;;:::o;1394:518::-;1496:2;1491:3;1488:11;1485:421;;;1532:5;1529:1;1522:16;1576:4;1573:1;1563:18;1646:2;1634:10;1630:19;1627:1;1623:27;1617:4;1613:38;1682:4;1670:10;1667:20;1664:47;;;-1:-1:-1;1705:4:9;1664:47;1760:2;1755:3;1751:12;1748:1;1744:20;1738:4;1734:31;1724:41;;1815:81;1833:2;1826:5;1823:13;1815:81;;;1892:1;1878:16;;1859:1;1848:13;1815:81;;;1819:3;;1485:421;1394:518;;;:::o;2088:1299::-;2208:10;;-1:-1:-1;;;;;2230:30:9;;2227:56;;;2263:18;;:::i;:::-;2292:97;2382:6;2342:38;2374:4;2368:11;2342:38;:::i;:::-;2336:4;2292:97;:::i;:::-;2438:4;2469:2;2458:14;;2486:1;2481:649;;;;3174:1;3191:6;3188:89;;;-1:-1:-1;3243:19:9;;;3237:26;3188:89;-1:-1:-1;;2045:1:9;2041:11;;;2037:24;2033:29;2023:40;2069:1;2065:11;;;2020:57;3290:81;;2451:930;;2481:649;1341:1;1334:14;;;1378:4;1365:18;;-1:-1:-1;;2517:20:9;;;2635:222;2649:7;2646:1;2643:14;2635:222;;;2731:19;;;2725:26;2710:42;;2838:4;2823:20;;;;2791:1;2779:14;;;;2665:12;2635:222;;;2639:3;2885:6;2876:7;2873:19;2870:201;;;2946:19;;;2940:26;-1:-1:-1;;3029:1:9;3025:14;;;3041:3;3021:24;3017:37;3013:42;2998:58;2983:74;;2870:201;-1:-1:-1;;;;3117:1:9;3101:14;;;3097:22;3084:36;;-1:-1:-1;2088:1299:9:o;3600:222::-;3665:9;;;3686:10;;;3683:133;;;3738:10;3733:3;3729:20;3726:1;3719:31;3773:4;3770:1;3763:15;3801:4;3798:1;3791:15;3683:133;3600:222;;;;:::o;4177:177::-;295:4653:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INITIAL_SUPPLY_1127": {
									"entryPoint": null,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TX_1143": {
									"entryPoint": 2083,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_WALLET_1135": {
									"entryPoint": 1985,
									"id": 1135,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_applyTransferLimits_1343": {
									"entryPoint": 2241,
									"id": 1343,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_863": {
									"entryPoint": 2108,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 3671,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2126,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1088": {
									"entryPoint": null,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 3517,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 2171,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 3882,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3436,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferWithTaxes_1507": {
									"entryPoint": 2539,
									"id": 1507,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 3578,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 3354,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 3955,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1197,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTax_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": null,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyFund_1147": {
									"entryPoint": null,
									"id": 1147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@encouragementFund_1145": {
									"entryPoint": null,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFees_1163": {
									"entryPoint": null,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_518": {
									"entryPoint": 1053,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1630": {
									"entryPoint": 1567,
									"id": 1630,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1500,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingWallet_1151": {
									"entryPoint": null,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 1583,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_545": {
									"entryPoint": null,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1309": {
									"entryPoint": 1383,
									"id": 1309,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2022,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1267": {
									"entryPoint": 1598,
									"id": 1267,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1153": {
									"entryPoint": null,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1639": {
									"entryPoint": 1482,
									"id": 1639,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateExcludedAccountStatus_1561": {
									"entryPoint": 1517,
									"id": 1561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateTaxes_1621": {
									"entryPoint": 1222,
									"id": 1621,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateUniswapPair_1587": {
									"entryPoint": 1813,
									"id": 1587,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawLPFunds_1545": {
									"entryPoint": 1638,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9881:9",
										"nodeType": "YulBlock",
										"src": "0:9881:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:9",
													"nodeType": "YulBlock",
													"src": "115:102:9",
													"statements": [
														{
															"nativeSrc": "125:26:9",
															"nodeType": "YulAssignment",
															"src": "125:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:9",
																		"nodeType": "YulLiteral",
																		"src": "148:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:9"
																},
																"nativeSrc": "133:18:9",
																"nodeType": "YulFunctionCall",
																"src": "133:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:9",
																								"nodeType": "YulLiteral",
																								"src": "198:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:9",
																								"nodeType": "YulLiteral",
																								"src": "203:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:9"
																						},
																						"nativeSrc": "194:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:9",
																						"nodeType": "YulLiteral",
																						"src": "207:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:9"
																				},
																				"nativeSrc": "190:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:9"
																		},
																		"nativeSrc": "178:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:9"
																},
																"nativeSrc": "160:51:9",
																"nodeType": "YulFunctionCall",
																"src": "160:51:9"
															},
															"nativeSrc": "160:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:9",
														"nodeType": "YulTypedName",
														"src": "84:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:9",
														"nodeType": "YulTypedName",
														"src": "95:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:9",
														"nodeType": "YulTypedName",
														"src": "106:4:9",
														"type": ""
													}
												],
												"src": "14:203:9"
											},
											{
												"body": {
													"nativeSrc": "343:297:9",
													"nodeType": "YulBlock",
													"src": "343:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:9",
																		"nodeType": "YulLiteral",
																		"src": "371:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:9"
																},
																"nativeSrc": "353:21:9",
																"nodeType": "YulFunctionCall",
																"src": "353:21:9"
															},
															"nativeSrc": "353:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:9"
														},
														{
															"nativeSrc": "383:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:9"
																},
																"nativeSrc": "397:13:9",
																"nodeType": "YulFunctionCall",
																"src": "397:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:9",
																	"nodeType": "YulTypedName",
																	"src": "387:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:9",
																				"nodeType": "YulLiteral",
																				"src": "441:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:9"
																		},
																		"nativeSrc": "426:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:9"
																},
																"nativeSrc": "419:34:9",
																"nodeType": "YulFunctionCall",
																"src": "419:34:9"
															},
															"nativeSrc": "419:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:9",
																				"nodeType": "YulLiteral",
																				"src": "483:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:9"
																		},
																		"nativeSrc": "468:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:9",
																				"nodeType": "YulLiteral",
																				"src": "500:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:9"
																		},
																		"nativeSrc": "488:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:9"
																},
																"nativeSrc": "462:50:9",
																"nodeType": "YulFunctionCall",
																"src": "462:50:9"
															},
															"nativeSrc": "462:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:9"
																				},
																				"nativeSrc": "532:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:9",
																				"nodeType": "YulLiteral",
																				"src": "556:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:9"
																		},
																		"nativeSrc": "528:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:9",
																		"nodeType": "YulLiteral",
																		"src": "561:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:9"
																},
																"nativeSrc": "521:42:9",
																"nodeType": "YulFunctionCall",
																"src": "521:42:9"
															},
															"nativeSrc": "521:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:9"
														},
														{
															"nativeSrc": "572:62:9",
															"nodeType": "YulAssignment",
															"src": "572:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:9",
																								"nodeType": "YulLiteral",
																								"src": "615:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:9"
																						},
																						"nativeSrc": "603:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:9",
																								"nodeType": "YulLiteral",
																								"src": "624:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:9"
																						},
																						"nativeSrc": "620:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:9"
																				},
																				"nativeSrc": "599:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:9"
																		},
																		"nativeSrc": "584:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:9",
																		"nodeType": "YulLiteral",
																		"src": "631:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:9"
																},
																"nativeSrc": "580:54:9",
																"nodeType": "YulFunctionCall",
																"src": "580:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:9",
														"nodeType": "YulTypedName",
														"src": "312:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:9",
														"nodeType": "YulTypedName",
														"src": "323:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:9",
														"nodeType": "YulTypedName",
														"src": "334:4:9",
														"type": ""
													}
												],
												"src": "222:418:9"
											},
											{
												"body": {
													"nativeSrc": "694:124:9",
													"nodeType": "YulBlock",
													"src": "694:124:9",
													"statements": [
														{
															"nativeSrc": "704:29:9",
															"nodeType": "YulAssignment",
															"src": "704:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:9"
																},
																"nativeSrc": "713:20:9",
																"nodeType": "YulFunctionCall",
																"src": "713:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:9",
																"nodeType": "YulBlock",
																"src": "796:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:9",
																					"nodeType": "YulLiteral",
																					"src": "805:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:9",
																					"nodeType": "YulLiteral",
																					"src": "808:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:9"
																			},
																			"nativeSrc": "798:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:9"
																		},
																		"nativeSrc": "798:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:9",
																										"nodeType": "YulLiteral",
																										"src": "781:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:9",
																										"nodeType": "YulLiteral",
																										"src": "786:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:9"
																								},
																								"nativeSrc": "777:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:9",
																								"nodeType": "YulLiteral",
																								"src": "790:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:9"
																						},
																						"nativeSrc": "773:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:9"
																				},
																				"nativeSrc": "762:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:9"
																		},
																		"nativeSrc": "752:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:9"
																},
																"nativeSrc": "745:50:9",
																"nodeType": "YulFunctionCall",
																"src": "745:50:9"
															},
															"nativeSrc": "742:70:9",
															"nodeType": "YulIf",
															"src": "742:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:9",
														"nodeType": "YulTypedName",
														"src": "673:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:9",
														"nodeType": "YulTypedName",
														"src": "684:5:9",
														"type": ""
													}
												],
												"src": "645:173:9"
											},
											{
												"body": {
													"nativeSrc": "910:213:9",
													"nodeType": "YulBlock",
													"src": "910:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:9",
																"nodeType": "YulBlock",
																"src": "956:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:9",
																					"nodeType": "YulLiteral",
																					"src": "965:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:9",
																					"nodeType": "YulLiteral",
																					"src": "968:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:9"
																			},
																			"nativeSrc": "958:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:9"
																		},
																		"nativeSrc": "958:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:9"
																		},
																		"nativeSrc": "927:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:9",
																		"nodeType": "YulLiteral",
																		"src": "952:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:9"
																},
																"nativeSrc": "923:32:9",
																"nodeType": "YulFunctionCall",
																"src": "923:32:9"
															},
															"nativeSrc": "920:52:9",
															"nodeType": "YulIf",
															"src": "920:52:9"
														},
														{
															"nativeSrc": "981:39:9",
															"nodeType": "YulAssignment",
															"src": "981:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:9"
																},
																"nativeSrc": "991:29:9",
																"nodeType": "YulFunctionCall",
																"src": "991:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:9"
																}
															]
														},
														{
															"nativeSrc": "1029:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:9",
																"nodeType": "YulLiteral",
																"src": "1042:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:9",
															"nodeType": "YulAssignment",
															"src": "1052:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:9"
																		},
																		"nativeSrc": "1074:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:9"
																},
																"nativeSrc": "1061:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:9"
																}
															]
														},
														{
															"nativeSrc": "1102:15:9",
															"nodeType": "YulAssignment",
															"src": "1102:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:9",
																"nodeType": "YulIdentifier",
																"src": "1112:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:9",
														"nodeType": "YulTypedName",
														"src": "868:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:9",
														"nodeType": "YulTypedName",
														"src": "879:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:9",
														"nodeType": "YulTypedName",
														"src": "891:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:9",
														"nodeType": "YulTypedName",
														"src": "899:6:9",
														"type": ""
													}
												],
												"src": "823:300:9"
											},
											{
												"body": {
													"nativeSrc": "1223:92:9",
													"nodeType": "YulBlock",
													"src": "1223:92:9",
													"statements": [
														{
															"nativeSrc": "1233:26:9",
															"nodeType": "YulAssignment",
															"src": "1233:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:9"
																},
																"nativeSrc": "1241:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:9"
																				},
																				"nativeSrc": "1293:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:9"
																		},
																		"nativeSrc": "1286:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:9"
																},
																"nativeSrc": "1268:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:9"
															},
															"nativeSrc": "1268:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:9",
														"nodeType": "YulTypedName",
														"src": "1192:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:9",
														"nodeType": "YulTypedName",
														"src": "1203:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:9",
														"nodeType": "YulTypedName",
														"src": "1214:4:9",
														"type": ""
													}
												],
												"src": "1128:187:9"
											},
											{
												"body": {
													"nativeSrc": "1407:259:9",
													"nodeType": "YulBlock",
													"src": "1407:259:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1453:16:9",
																"nodeType": "YulBlock",
																"src": "1453:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:9"
																			},
																			"nativeSrc": "1455:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:9"
																		},
																		"nativeSrc": "1455:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1428:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1428:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1437:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1437:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1424:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:9"
																		},
																		"nativeSrc": "1424:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1449:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1449:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1420:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1420:3:9"
																},
																"nativeSrc": "1420:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1420:32:9"
															},
															"nativeSrc": "1417:52:9",
															"nodeType": "YulIf",
															"src": "1417:52:9"
														},
														{
															"nativeSrc": "1478:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1478:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1491:1:9",
																"nodeType": "YulLiteral",
																"src": "1491:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1482:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1482:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1501:32:9",
															"nodeType": "YulAssignment",
															"src": "1501:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1523:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1510:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1510:12:9"
																},
																"nativeSrc": "1510:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1510:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1501:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1501:5:9"
																}
															]
														},
														{
															"nativeSrc": "1542:15:9",
															"nodeType": "YulAssignment",
															"src": "1542:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1552:5:9",
																"nodeType": "YulIdentifier",
																"src": "1552:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1542:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:9"
																}
															]
														},
														{
															"nativeSrc": "1566:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1566:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1581:1:9",
																"nodeType": "YulLiteral",
																"src": "1581:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1570:7:9",
																	"nodeType": "YulTypedName",
																	"src": "1570:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1591:43:9",
															"nodeType": "YulAssignment",
															"src": "1591:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1630:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1630:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1615:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:9"
																		},
																		"nativeSrc": "1615:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1602:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1602:12:9"
																},
																"nativeSrc": "1602:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:9"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1591:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:9"
																}
															]
														},
														{
															"nativeSrc": "1643:17:9",
															"nodeType": "YulAssignment",
															"src": "1643:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "1653:7:9",
																"nodeType": "YulIdentifier",
																"src": "1653:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1643:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1320:346:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1365:9:9",
														"nodeType": "YulTypedName",
														"src": "1365:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1376:7:9",
														"nodeType": "YulTypedName",
														"src": "1376:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1388:6:9",
														"nodeType": "YulTypedName",
														"src": "1388:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1396:6:9",
														"nodeType": "YulTypedName",
														"src": "1396:6:9",
														"type": ""
													}
												],
												"src": "1320:346:9"
											},
											{
												"body": {
													"nativeSrc": "1772:76:9",
													"nodeType": "YulBlock",
													"src": "1772:76:9",
													"statements": [
														{
															"nativeSrc": "1782:26:9",
															"nodeType": "YulAssignment",
															"src": "1782:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1794:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1794:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1805:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1805:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1790:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:9"
																},
																"nativeSrc": "1790:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1790:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1782:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1782:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1824:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1824:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1835:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1817:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1817:6:9"
																},
																"nativeSrc": "1817:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1817:25:9"
															},
															"nativeSrc": "1817:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1817:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1671:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1741:9:9",
														"nodeType": "YulTypedName",
														"src": "1741:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1752:6:9",
														"nodeType": "YulTypedName",
														"src": "1752:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1763:4:9",
														"nodeType": "YulTypedName",
														"src": "1763:4:9",
														"type": ""
													}
												],
												"src": "1671:177:9"
											},
											{
												"body": {
													"nativeSrc": "1957:270:9",
													"nodeType": "YulBlock",
													"src": "1957:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2003:16:9",
																"nodeType": "YulBlock",
																"src": "2003:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2012:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2012:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2015:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2015:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2005:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2005:6:9"
																			},
																			"nativeSrc": "2005:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2005:12:9"
																		},
																		"nativeSrc": "2005:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2005:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1978:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1978:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1987:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1987:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:9"
																		},
																		"nativeSrc": "1974:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1999:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1970:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1970:3:9"
																},
																"nativeSrc": "1970:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1970:32:9"
															},
															"nativeSrc": "1967:52:9",
															"nodeType": "YulIf",
															"src": "1967:52:9"
														},
														{
															"nativeSrc": "2028:39:9",
															"nodeType": "YulAssignment",
															"src": "2028:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2057:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2057:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2038:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2038:18:9"
																},
																"nativeSrc": "2038:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2038:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2028:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:9"
																}
															]
														},
														{
															"nativeSrc": "2076:48:9",
															"nodeType": "YulAssignment",
															"src": "2076:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2109:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2109:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2120:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2120:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2105:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:9"
																		},
																		"nativeSrc": "2105:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2105:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2086:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2086:18:9"
																},
																"nativeSrc": "2086:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2086:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:9"
																}
															]
														},
														{
															"nativeSrc": "2133:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2133:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2146:1:9",
																"nodeType": "YulLiteral",
																"src": "2146:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2137:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2137:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2156:41:9",
															"nodeType": "YulAssignment",
															"src": "2156:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2182:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2182:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2193:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2178:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:9"
																		},
																		"nativeSrc": "2178:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2178:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2165:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2165:12:9"
																},
																"nativeSrc": "2165:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2165:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2156:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2156:5:9"
																}
															]
														},
														{
															"nativeSrc": "2206:15:9",
															"nodeType": "YulAssignment",
															"src": "2206:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2216:5:9",
																"nodeType": "YulIdentifier",
																"src": "2216:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2206:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1853:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1907:9:9",
														"nodeType": "YulTypedName",
														"src": "1907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1918:7:9",
														"nodeType": "YulTypedName",
														"src": "1918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1930:6:9",
														"nodeType": "YulTypedName",
														"src": "1930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1938:6:9",
														"nodeType": "YulTypedName",
														"src": "1938:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1946:6:9",
														"nodeType": "YulTypedName",
														"src": "1946:6:9",
														"type": ""
													}
												],
												"src": "1853:374:9"
											},
											{
												"body": {
													"nativeSrc": "2329:87:9",
													"nodeType": "YulBlock",
													"src": "2329:87:9",
													"statements": [
														{
															"nativeSrc": "2339:26:9",
															"nodeType": "YulAssignment",
															"src": "2339:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2351:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2351:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2362:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2347:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2347:3:9"
																},
																"nativeSrc": "2347:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2347:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2339:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2339:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2381:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2396:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2404:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2404:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2392:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:9"
																		},
																		"nativeSrc": "2392:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2374:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:9"
																},
																"nativeSrc": "2374:36:9",
																"nodeType": "YulFunctionCall",
																"src": "2374:36:9"
															},
															"nativeSrc": "2374:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "2374:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2232:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2298:9:9",
														"nodeType": "YulTypedName",
														"src": "2298:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2309:6:9",
														"nodeType": "YulTypedName",
														"src": "2309:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2320:4:9",
														"nodeType": "YulTypedName",
														"src": "2320:4:9",
														"type": ""
													}
												],
												"src": "2232:184:9"
											},
											{
												"body": {
													"nativeSrc": "2491:116:9",
													"nodeType": "YulBlock",
													"src": "2491:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2537:16:9",
																"nodeType": "YulBlock",
																"src": "2537:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2546:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2546:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2549:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2539:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2539:6:9"
																			},
																			"nativeSrc": "2539:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2539:12:9"
																		},
																		"nativeSrc": "2539:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2539:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2512:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2521:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2521:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:9"
																		},
																		"nativeSrc": "2508:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2508:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2533:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2504:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:9"
																},
																"nativeSrc": "2504:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2504:32:9"
															},
															"nativeSrc": "2501:52:9",
															"nodeType": "YulIf",
															"src": "2501:52:9"
														},
														{
															"nativeSrc": "2562:39:9",
															"nodeType": "YulAssignment",
															"src": "2562:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2591:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2591:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2572:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2572:18:9"
																},
																"nativeSrc": "2572:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2572:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2421:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2457:9:9",
														"nodeType": "YulTypedName",
														"src": "2457:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2468:7:9",
														"nodeType": "YulTypedName",
														"src": "2468:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2480:6:9",
														"nodeType": "YulTypedName",
														"src": "2480:6:9",
														"type": ""
													}
												],
												"src": "2421:186:9"
											},
											{
												"body": {
													"nativeSrc": "2696:263:9",
													"nodeType": "YulBlock",
													"src": "2696:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2742:16:9",
																"nodeType": "YulBlock",
																"src": "2742:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2751:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2751:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2754:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2754:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2744:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:9"
																			},
																			"nativeSrc": "2744:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:12:9"
																		},
																		"nativeSrc": "2744:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2717:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2717:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2726:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2726:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2713:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:9"
																		},
																		"nativeSrc": "2713:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2738:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2738:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2709:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:9"
																},
																"nativeSrc": "2709:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2709:32:9"
															},
															"nativeSrc": "2706:52:9",
															"nodeType": "YulIf",
															"src": "2706:52:9"
														},
														{
															"nativeSrc": "2767:39:9",
															"nodeType": "YulAssignment",
															"src": "2767:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2796:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2796:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2777:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2777:18:9"
																},
																"nativeSrc": "2777:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2777:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2767:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:9"
																}
															]
														},
														{
															"nativeSrc": "2815:45:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2815:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2845:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2856:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2856:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2841:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2841:3:9"
																		},
																		"nativeSrc": "2841:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2841:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2828:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2828:12:9"
																},
																"nativeSrc": "2828:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2828:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2819:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2819:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2913:16:9",
																"nodeType": "YulBlock",
																"src": "2913:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:9"
																			},
																			"nativeSrc": "2915:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:12:9"
																		},
																		"nativeSrc": "2915:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2882:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2882:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2903:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2903:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2896:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2896:6:9"
																						},
																						"nativeSrc": "2896:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2896:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2889:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2889:6:9"
																				},
																				"nativeSrc": "2889:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2889:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2879:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2879:2:9"
																		},
																		"nativeSrc": "2879:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2872:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:9"
																},
																"nativeSrc": "2872:40:9",
																"nodeType": "YulFunctionCall",
																"src": "2872:40:9"
															},
															"nativeSrc": "2869:60:9",
															"nodeType": "YulIf",
															"src": "2869:60:9"
														},
														{
															"nativeSrc": "2938:15:9",
															"nodeType": "YulAssignment",
															"src": "2938:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2948:5:9",
																"nodeType": "YulIdentifier",
																"src": "2948:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2938:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2612:347:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2654:9:9",
														"nodeType": "YulTypedName",
														"src": "2654:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2665:7:9",
														"nodeType": "YulTypedName",
														"src": "2665:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2677:6:9",
														"nodeType": "YulTypedName",
														"src": "2677:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2685:6:9",
														"nodeType": "YulTypedName",
														"src": "2685:6:9",
														"type": ""
													}
												],
												"src": "2612:347:9"
											},
											{
												"body": {
													"nativeSrc": "3051:173:9",
													"nodeType": "YulBlock",
													"src": "3051:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3097:16:9",
																"nodeType": "YulBlock",
																"src": "3097:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3106:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3106:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3109:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3109:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3099:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:9"
																			},
																			"nativeSrc": "3099:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3099:12:9"
																		},
																		"nativeSrc": "3099:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3099:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3072:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3072:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3081:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3081:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3068:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:9"
																		},
																		"nativeSrc": "3068:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3093:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3093:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3064:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3064:3:9"
																},
																"nativeSrc": "3064:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3064:32:9"
															},
															"nativeSrc": "3061:52:9",
															"nodeType": "YulIf",
															"src": "3061:52:9"
														},
														{
															"nativeSrc": "3122:39:9",
															"nodeType": "YulAssignment",
															"src": "3122:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3151:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3151:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3132:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3132:18:9"
																},
																"nativeSrc": "3132:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3132:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3122:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:9"
																}
															]
														},
														{
															"nativeSrc": "3170:48:9",
															"nodeType": "YulAssignment",
															"src": "3170:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3203:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3214:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3214:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3199:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:9"
																		},
																		"nativeSrc": "3199:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3180:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3180:18:9"
																},
																"nativeSrc": "3180:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3180:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3170:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2964:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3009:9:9",
														"nodeType": "YulTypedName",
														"src": "3009:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3020:7:9",
														"nodeType": "YulTypedName",
														"src": "3020:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3032:6:9",
														"nodeType": "YulTypedName",
														"src": "3032:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:9",
														"nodeType": "YulTypedName",
														"src": "3040:6:9",
														"type": ""
													}
												],
												"src": "2964:260:9"
											},
											{
												"body": {
													"nativeSrc": "3284:325:9",
													"nodeType": "YulBlock",
													"src": "3284:325:9",
													"statements": [
														{
															"nativeSrc": "3294:22:9",
															"nodeType": "YulAssignment",
															"src": "3294:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3308:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3308:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3311:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3311:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3304:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:9"
																},
																"nativeSrc": "3304:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3304:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3294:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:9"
																}
															]
														},
														{
															"nativeSrc": "3325:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3325:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3355:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3355:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3361:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3361:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:9"
																},
																"nativeSrc": "3351:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3351:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3329:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3329:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3402:31:9",
																"nodeType": "YulBlock",
																"src": "3402:31:9",
																"statements": [
																	{
																		"nativeSrc": "3404:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3404:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3418:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3418:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3426:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3426:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3414:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:9"
																			},
																			"nativeSrc": "3414:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3414:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3404:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3404:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3382:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3382:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3375:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:9"
																},
																"nativeSrc": "3375:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3375:26:9"
															},
															"nativeSrc": "3372:61:9",
															"nodeType": "YulIf",
															"src": "3372:61:9"
														},
														{
															"body": {
																"nativeSrc": "3492:111:9",
																"nodeType": "YulBlock",
																"src": "3492:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3513:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3513:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3520:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3520:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3525:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3525:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3516:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3516:3:9"
																					},
																					"nativeSrc": "3516:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3516:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3506:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3506:6:9"
																			},
																			"nativeSrc": "3506:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:31:9"
																		},
																		"nativeSrc": "3506:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3506:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3560:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3550:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:9"
																			},
																			"nativeSrc": "3550:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3550:15:9"
																		},
																		"nativeSrc": "3550:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3550:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3585:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3585:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3588:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3588:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3578:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3578:6:9"
																			},
																			"nativeSrc": "3578:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3578:15:9"
																		},
																		"nativeSrc": "3578:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3578:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3448:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3448:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3471:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3479:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3468:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3468:2:9"
																		},
																		"nativeSrc": "3468:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3445:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:9"
																},
																"nativeSrc": "3445:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3445:38:9"
															},
															"nativeSrc": "3442:161:9",
															"nodeType": "YulIf",
															"src": "3442:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3229:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3264:4:9",
														"nodeType": "YulTypedName",
														"src": "3264:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3273:6:9",
														"nodeType": "YulTypedName",
														"src": "3273:6:9",
														"type": ""
													}
												],
												"src": "3229:380:9"
											},
											{
												"body": {
													"nativeSrc": "3788:162:9",
													"nodeType": "YulBlock",
													"src": "3788:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3805:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3816:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:9"
																},
																"nativeSrc": "3798:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3798:21:9"
															},
															"nativeSrc": "3798:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3798:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:9"
																		},
																		"nativeSrc": "3835:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3855:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3828:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:9"
																},
																"nativeSrc": "3828:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3828:30:9"
															},
															"nativeSrc": "3828:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3828:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3878:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3878:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3889:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3889:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3874:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3874:3:9"
																		},
																		"nativeSrc": "3874:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:18:9"
																	},
																	{
																		"hexValue": "54617820746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "3894:14:9",
																		"nodeType": "YulLiteral",
																		"src": "3894:14:9",
																		"type": "",
																		"value": "Tax too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3867:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:9"
																},
																"nativeSrc": "3867:42:9",
																"nodeType": "YulFunctionCall",
																"src": "3867:42:9"
															},
															"nativeSrc": "3867:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "3867:42:9"
														},
														{
															"nativeSrc": "3918:26:9",
															"nodeType": "YulAssignment",
															"src": "3918:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3930:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3941:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3941:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:9"
																},
																"nativeSrc": "3926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3926:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3918:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3614:336:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3765:9:9",
														"nodeType": "YulTypedName",
														"src": "3765:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3779:4:9",
														"nodeType": "YulTypedName",
														"src": "3779:4:9",
														"type": ""
													}
												],
												"src": "3614:336:9"
											},
											{
												"body": {
													"nativeSrc": "4084:119:9",
													"nodeType": "YulBlock",
													"src": "4084:119:9",
													"statements": [
														{
															"nativeSrc": "4094:26:9",
															"nodeType": "YulAssignment",
															"src": "4094:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4106:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4106:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4117:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4117:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4102:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4102:3:9"
																},
																"nativeSrc": "4102:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4102:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4094:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4094:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4136:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4136:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4147:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4147:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4129:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:9"
																},
																"nativeSrc": "4129:25:9",
																"nodeType": "YulFunctionCall",
																"src": "4129:25:9"
															},
															"nativeSrc": "4129:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "4129:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4174:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4174:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4185:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4185:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4170:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:9"
																		},
																		"nativeSrc": "4170:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4170:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4190:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4190:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4163:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4163:6:9"
																},
																"nativeSrc": "4163:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4163:34:9"
															},
															"nativeSrc": "4163:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4163:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3955:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4045:9:9",
														"nodeType": "YulTypedName",
														"src": "4045:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4056:6:9",
														"nodeType": "YulTypedName",
														"src": "4056:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4064:6:9",
														"nodeType": "YulTypedName",
														"src": "4064:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4075:4:9",
														"nodeType": "YulTypedName",
														"src": "4075:4:9",
														"type": ""
													}
												],
												"src": "3955:248:9"
											},
											{
												"body": {
													"nativeSrc": "4240:95:9",
													"nodeType": "YulBlock",
													"src": "4240:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4257:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4257:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4264:3:9",
																				"nodeType": "YulLiteral",
																				"src": "4264:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4269:10:9",
																				"nodeType": "YulLiteral",
																				"src": "4269:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:9"
																		},
																		"nativeSrc": "4260:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4260:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4250:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4250:6:9"
																},
																"nativeSrc": "4250:31:9",
																"nodeType": "YulFunctionCall",
																"src": "4250:31:9"
															},
															"nativeSrc": "4250:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "4250:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4297:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4297:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4300:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4300:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4290:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4290:6:9"
																},
																"nativeSrc": "4290:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4290:15:9"
															},
															"nativeSrc": "4290:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4290:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4321:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4321:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4324:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4324:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4314:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:9"
																},
																"nativeSrc": "4314:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4314:15:9"
															},
															"nativeSrc": "4314:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4314:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4208:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4208:127:9"
											},
											{
												"body": {
													"nativeSrc": "4389:79:9",
													"nodeType": "YulBlock",
													"src": "4389:79:9",
													"statements": [
														{
															"nativeSrc": "4399:17:9",
															"nodeType": "YulAssignment",
															"src": "4399:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4411:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4411:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4414:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4414:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4407:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:9"
																},
																"nativeSrc": "4407:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4407:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4399:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4440:22:9",
																"nodeType": "YulBlock",
																"src": "4440:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4442:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4442:16:9"
																			},
																			"nativeSrc": "4442:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4442:18:9"
																		},
																		"nativeSrc": "4442:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4442:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4431:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4431:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4437:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4437:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4428:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4428:2:9"
																},
																"nativeSrc": "4428:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4428:11:9"
															},
															"nativeSrc": "4425:37:9",
															"nodeType": "YulIf",
															"src": "4425:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4340:128:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4371:1:9",
														"nodeType": "YulTypedName",
														"src": "4371:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4374:1:9",
														"nodeType": "YulTypedName",
														"src": "4374:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4380:4:9",
														"nodeType": "YulTypedName",
														"src": "4380:4:9",
														"type": ""
													}
												],
												"src": "4340:128:9"
											},
											{
												"body": {
													"nativeSrc": "4647:171:9",
													"nodeType": "YulBlock",
													"src": "4647:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4664:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4664:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4675:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4657:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:9"
																},
																"nativeSrc": "4657:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4657:21:9"
															},
															"nativeSrc": "4657:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4657:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4709:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4709:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:9"
																		},
																		"nativeSrc": "4694:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4694:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4714:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4714:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:9"
																},
																"nativeSrc": "4687:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4687:30:9"
															},
															"nativeSrc": "4687:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4687:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4748:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4748:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:9"
																		},
																		"nativeSrc": "4733:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:18:9"
																	},
																	{
																		"hexValue": "4e6f204c502066756e647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "4753:23:9",
																		"nodeType": "YulLiteral",
																		"src": "4753:23:9",
																		"type": "",
																		"value": "No LP funds available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:9"
																},
																"nativeSrc": "4726:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4726:51:9"
															},
															"nativeSrc": "4726:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4726:51:9"
														},
														{
															"nativeSrc": "4786:26:9",
															"nodeType": "YulAssignment",
															"src": "4786:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4798:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4798:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4809:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4809:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4794:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:9"
																},
																"nativeSrc": "4794:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4794:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4786:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4786:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4473:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4624:9:9",
														"nodeType": "YulTypedName",
														"src": "4624:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4638:4:9",
														"nodeType": "YulTypedName",
														"src": "4638:4:9",
														"type": ""
													}
												],
												"src": "4473:345:9"
											},
											{
												"body": {
													"nativeSrc": "4997:181:9",
													"nodeType": "YulBlock",
													"src": "4997:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5014:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5014:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5025:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5025:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:9"
																},
																"nativeSrc": "5007:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5007:21:9"
															},
															"nativeSrc": "5007:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5007:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5048:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5059:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5059:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5044:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:9"
																		},
																		"nativeSrc": "5044:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5044:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5064:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5064:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5037:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:9"
																},
																"nativeSrc": "5037:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5037:30:9"
															},
															"nativeSrc": "5037:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5037:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5087:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5087:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5098:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5098:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5083:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:9"
																		},
																		"nativeSrc": "5083:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5083:18:9"
																	},
																	{
																		"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "5103:33:9",
																		"nodeType": "YulLiteral",
																		"src": "5103:33:9",
																		"type": "",
																		"value": "New pair address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:9"
																},
																"nativeSrc": "5076:61:9",
																"nodeType": "YulFunctionCall",
																"src": "5076:61:9"
															},
															"nativeSrc": "5076:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "5076:61:9"
														},
														{
															"nativeSrc": "5146:26:9",
															"nodeType": "YulAssignment",
															"src": "5146:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5158:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5154:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:9"
																},
																"nativeSrc": "5154:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5154:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5146:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5146:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4823:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4974:9:9",
														"nodeType": "YulTypedName",
														"src": "4974:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4988:4:9",
														"nodeType": "YulTypedName",
														"src": "4988:4:9",
														"type": ""
													}
												],
												"src": "4823:355:9"
											},
											{
												"body": {
													"nativeSrc": "5235:116:9",
													"nodeType": "YulBlock",
													"src": "5235:116:9",
													"statements": [
														{
															"nativeSrc": "5245:20:9",
															"nodeType": "YulAssignment",
															"src": "5245:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5260:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5260:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5263:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5263:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5256:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:9"
																},
																"nativeSrc": "5256:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5256:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5245:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5245:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5323:22:9",
																"nodeType": "YulBlock",
																"src": "5323:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5325:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5325:16:9"
																			},
																			"nativeSrc": "5325:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5325:18:9"
																		},
																		"nativeSrc": "5325:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5294:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "5294:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5287:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5287:6:9"
																				},
																				"nativeSrc": "5287:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5287:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5301:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "5301:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5308:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "5308:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5317:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "5317:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5304:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5304:3:9"
																						},
																						"nativeSrc": "5304:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5304:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5298:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5298:2:9"
																				},
																				"nativeSrc": "5298:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5298:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5284:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5284:2:9"
																		},
																		"nativeSrc": "5284:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5284:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5277:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5277:6:9"
																},
																"nativeSrc": "5277:45:9",
																"nodeType": "YulFunctionCall",
																"src": "5277:45:9"
															},
															"nativeSrc": "5274:71:9",
															"nodeType": "YulIf",
															"src": "5274:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5183:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5214:1:9",
														"nodeType": "YulTypedName",
														"src": "5214:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5217:1:9",
														"nodeType": "YulTypedName",
														"src": "5217:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5223:7:9",
														"nodeType": "YulTypedName",
														"src": "5223:7:9",
														"type": ""
													}
												],
												"src": "5183:168:9"
											},
											{
												"body": {
													"nativeSrc": "5402:171:9",
													"nodeType": "YulBlock",
													"src": "5402:171:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5433:111:9",
																"nodeType": "YulBlock",
																"src": "5433:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5454:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5454:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5461:3:9",
																							"nodeType": "YulLiteral",
																							"src": "5461:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5466:10:9",
																							"nodeType": "YulLiteral",
																							"src": "5466:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5457:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5457:3:9"
																					},
																					"nativeSrc": "5457:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5457:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5447:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5447:6:9"
																			},
																			"nativeSrc": "5447:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5447:31:9"
																		},
																		"nativeSrc": "5447:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5447:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5498:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5501:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5501:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5491:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5491:6:9"
																			},
																			"nativeSrc": "5491:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5491:15:9"
																		},
																		"nativeSrc": "5491:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5491:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5529:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5529:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5519:6:9"
																			},
																			"nativeSrc": "5519:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5519:15:9"
																		},
																		"nativeSrc": "5519:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5422:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5422:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5415:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:9"
																},
																"nativeSrc": "5415:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5415:9:9"
															},
															"nativeSrc": "5412:132:9",
															"nodeType": "YulIf",
															"src": "5412:132:9"
														},
														{
															"nativeSrc": "5553:14:9",
															"nodeType": "YulAssignment",
															"src": "5553:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5562:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5562:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5565:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5565:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:9"
																},
																"nativeSrc": "5558:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5558:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5553:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "5553:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5356:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5387:1:9",
														"nodeType": "YulTypedName",
														"src": "5387:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5390:1:9",
														"nodeType": "YulTypedName",
														"src": "5390:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5396:1:9",
														"nodeType": "YulTypedName",
														"src": "5396:1:9",
														"type": ""
													}
												],
												"src": "5356:217:9"
											},
											{
												"body": {
													"nativeSrc": "5752:166:9",
													"nodeType": "YulBlock",
													"src": "5752:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5769:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5780:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5762:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5762:6:9"
																},
																"nativeSrc": "5762:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5762:21:9"
															},
															"nativeSrc": "5762:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5762:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5803:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5814:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5814:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5799:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:9"
																		},
																		"nativeSrc": "5799:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:9"
																},
																"nativeSrc": "5792:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5792:30:9"
															},
															"nativeSrc": "5792:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5792:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:9"
																		},
																		"nativeSrc": "5838:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5858:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5858:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:9"
																},
																"nativeSrc": "5831:46:9",
																"nodeType": "YulFunctionCall",
																"src": "5831:46:9"
															},
															"nativeSrc": "5831:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "5831:46:9"
														},
														{
															"nativeSrc": "5886:26:9",
															"nodeType": "YulAssignment",
															"src": "5886:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5898:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5898:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:9"
																},
																"nativeSrc": "5894:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5894:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5886:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5578:340:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5729:9:9",
														"nodeType": "YulTypedName",
														"src": "5729:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5743:4:9",
														"nodeType": "YulTypedName",
														"src": "5743:4:9",
														"type": ""
													}
												],
												"src": "5578:340:9"
											},
											{
												"body": {
													"nativeSrc": "5971:77:9",
													"nodeType": "YulBlock",
													"src": "5971:77:9",
													"statements": [
														{
															"nativeSrc": "5981:16:9",
															"nodeType": "YulAssignment",
															"src": "5981:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5992:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5992:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5995:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5995:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5988:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:9"
																},
																"nativeSrc": "5988:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5988:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6020:22:9",
																"nodeType": "YulBlock",
																"src": "6020:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6022:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6022:16:9"
																			},
																			"nativeSrc": "6022:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6022:18:9"
																		},
																		"nativeSrc": "6022:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6022:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6012:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6012:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6015:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6015:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6009:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6009:2:9"
																},
																"nativeSrc": "6009:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6009:10:9"
															},
															"nativeSrc": "6006:36:9",
															"nodeType": "YulIf",
															"src": "6006:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5923:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5954:1:9",
														"nodeType": "YulTypedName",
														"src": "5954:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5957:1:9",
														"nodeType": "YulTypedName",
														"src": "5957:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5963:3:9",
														"nodeType": "YulTypedName",
														"src": "5963:3:9",
														"type": ""
													}
												],
												"src": "5923:125:9"
											},
											{
												"body": {
													"nativeSrc": "6227:174:9",
													"nodeType": "YulBlock",
													"src": "6227:174:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6244:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6244:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6255:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6255:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6237:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:9"
																},
																"nativeSrc": "6237:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6237:21:9"
															},
															"nativeSrc": "6237:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6237:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6278:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6278:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6289:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6289:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6274:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6274:3:9"
																		},
																		"nativeSrc": "6274:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6274:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6294:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6294:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6267:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:9"
																},
																"nativeSrc": "6267:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6267:30:9"
															},
															"nativeSrc": "6267:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6267:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6317:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6317:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6328:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6328:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6313:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:9"
																		},
																		"nativeSrc": "6313:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6313:18:9"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"kind": "string",
																		"nativeSrc": "6333:26:9",
																		"nodeType": "YulLiteral",
																		"src": "6333:26:9",
																		"type": "",
																		"value": "Exceeds max wallet limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6306:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:9"
																},
																"nativeSrc": "6306:54:9",
																"nodeType": "YulFunctionCall",
																"src": "6306:54:9"
															},
															"nativeSrc": "6306:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "6306:54:9"
														},
														{
															"nativeSrc": "6369:26:9",
															"nodeType": "YulAssignment",
															"src": "6369:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6392:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:9"
																},
																"nativeSrc": "6377:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6377:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6053:348:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6204:9:9",
														"nodeType": "YulTypedName",
														"src": "6204:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6218:4:9",
														"nodeType": "YulTypedName",
														"src": "6218:4:9",
														"type": ""
													}
												],
												"src": "6053:348:9"
											},
											{
												"body": {
													"nativeSrc": "6580:179:9",
													"nodeType": "YulBlock",
													"src": "6580:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6597:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6597:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6608:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6608:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6590:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:9"
																},
																"nativeSrc": "6590:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6590:21:9"
															},
															"nativeSrc": "6590:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6590:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6631:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6631:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6642:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6642:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:9"
																		},
																		"nativeSrc": "6627:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6647:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6647:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6620:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:9"
																},
																"nativeSrc": "6620:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6620:30:9"
															},
															"nativeSrc": "6620:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6620:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6670:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6681:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6681:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6666:3:9"
																		},
																		"nativeSrc": "6666:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6666:18:9"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "6686:31:9",
																		"nodeType": "YulLiteral",
																		"src": "6686:31:9",
																		"type": "",
																		"value": "Exceeds max transaction limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:9"
																},
																"nativeSrc": "6659:59:9",
																"nodeType": "YulFunctionCall",
																"src": "6659:59:9"
															},
															"nativeSrc": "6659:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "6659:59:9"
														},
														{
															"nativeSrc": "6727:26:9",
															"nodeType": "YulAssignment",
															"src": "6727:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6739:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6735:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6735:3:9"
																},
																"nativeSrc": "6735:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6735:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6727:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6727:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6406:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6557:9:9",
														"nodeType": "YulTypedName",
														"src": "6557:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6571:4:9",
														"nodeType": "YulTypedName",
														"src": "6571:4:9",
														"type": ""
													}
												],
												"src": "6406:353:9"
											},
											{
												"body": {
													"nativeSrc": "6938:177:9",
													"nodeType": "YulBlock",
													"src": "6938:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6955:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6955:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6948:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:9"
																},
																"nativeSrc": "6948:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6948:21:9"
															},
															"nativeSrc": "6948:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6948:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6989:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7000:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7000:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:9"
																		},
																		"nativeSrc": "6985:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6978:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:9"
																},
																"nativeSrc": "6978:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6978:30:9"
															},
															"nativeSrc": "6978:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6978:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7028:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7039:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7039:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7024:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:9"
																		},
																		"nativeSrc": "7024:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:18:9"
																	},
																	{
																		"hexValue": "5461782065786365656473207472616e7366657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "7044:29:9",
																		"nodeType": "YulLiteral",
																		"src": "7044:29:9",
																		"type": "",
																		"value": "Tax exceeds transfer amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:9"
																},
																"nativeSrc": "7017:57:9",
																"nodeType": "YulFunctionCall",
																"src": "7017:57:9"
															},
															"nativeSrc": "7017:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "7017:57:9"
														},
														{
															"nativeSrc": "7083:26:9",
															"nodeType": "YulAssignment",
															"src": "7083:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7095:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7095:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7106:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7091:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7091:3:9"
																},
																"nativeSrc": "7091:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7091:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7083:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7083:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6764:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6915:9:9",
														"nodeType": "YulTypedName",
														"src": "6915:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6929:4:9",
														"nodeType": "YulTypedName",
														"src": "6929:4:9",
														"type": ""
													}
												],
												"src": "6764:351:9"
											},
											{
												"body": {
													"nativeSrc": "7322:212:9",
													"nodeType": "YulBlock",
													"src": "7322:212:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7339:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7339:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7350:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7350:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7332:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7332:6:9"
																},
																"nativeSrc": "7332:25:9",
																"nodeType": "YulFunctionCall",
																"src": "7332:25:9"
															},
															"nativeSrc": "7332:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "7332:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:9"
																		},
																		"nativeSrc": "7373:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7393:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7366:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:9"
																},
																"nativeSrc": "7366:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7366:30:9"
															},
															"nativeSrc": "7366:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7366:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7416:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7427:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7412:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:9"
																		},
																		"nativeSrc": "7412:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7432:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7405:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:9"
																},
																"nativeSrc": "7405:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7405:30:9"
															},
															"nativeSrc": "7405:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7405:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7455:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7466:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7451:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:9"
																		},
																		"nativeSrc": "7451:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:18:9"
																	},
																	{
																		"hexValue": "456e636f75726167656d656e742046756e64",
																		"kind": "string",
																		"nativeSrc": "7471:20:9",
																		"nodeType": "YulLiteral",
																		"src": "7471:20:9",
																		"type": "",
																		"value": "Encouragement Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7444:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:9"
																},
																"nativeSrc": "7444:48:9",
																"nodeType": "YulFunctionCall",
																"src": "7444:48:9"
															},
															"nativeSrc": "7444:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "7444:48:9"
														},
														{
															"nativeSrc": "7501:27:9",
															"nodeType": "YulAssignment",
															"src": "7501:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7513:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7513:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7524:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7509:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7509:3:9"
																},
																"nativeSrc": "7509:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7509:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7501:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7501:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7120:414:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7291:9:9",
														"nodeType": "YulTypedName",
														"src": "7291:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7302:6:9",
														"nodeType": "YulTypedName",
														"src": "7302:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7313:4:9",
														"nodeType": "YulTypedName",
														"src": "7313:4:9",
														"type": ""
													}
												],
												"src": "7120:414:9"
											},
											{
												"body": {
													"nativeSrc": "7741:208:9",
													"nodeType": "YulBlock",
													"src": "7741:208:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7758:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7758:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7769:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7751:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:9"
																},
																"nativeSrc": "7751:25:9",
																"nodeType": "YulFunctionCall",
																"src": "7751:25:9"
															},
															"nativeSrc": "7751:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "7751:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7796:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7807:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7792:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:9"
																		},
																		"nativeSrc": "7792:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7812:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:9"
																},
																"nativeSrc": "7785:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7785:30:9"
															},
															"nativeSrc": "7785:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7785:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7835:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7846:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7846:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7831:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7831:3:9"
																		},
																		"nativeSrc": "7831:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7831:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7851:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7851:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7824:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:9"
																},
																"nativeSrc": "7824:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:9"
															},
															"nativeSrc": "7824:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7824:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7874:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7874:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7885:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7885:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7870:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:9"
																		},
																		"nativeSrc": "7870:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:18:9"
																	},
																	{
																		"hexValue": "456d657267656e63792046756e64",
																		"kind": "string",
																		"nativeSrc": "7890:16:9",
																		"nodeType": "YulLiteral",
																		"src": "7890:16:9",
																		"type": "",
																		"value": "Emergency Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7863:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:9"
																},
																"nativeSrc": "7863:44:9",
																"nodeType": "YulFunctionCall",
																"src": "7863:44:9"
															},
															"nativeSrc": "7863:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "7863:44:9"
														},
														{
															"nativeSrc": "7916:27:9",
															"nodeType": "YulAssignment",
															"src": "7916:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7928:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7928:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:3:9",
																		"nodeType": "YulLiteral",
																		"src": "7939:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7924:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7924:3:9"
																},
																"nativeSrc": "7924:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7924:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7916:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7916:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7539:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7710:9:9",
														"nodeType": "YulTypedName",
														"src": "7710:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7721:6:9",
														"nodeType": "YulTypedName",
														"src": "7721:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7732:4:9",
														"nodeType": "YulTypedName",
														"src": "7732:4:9",
														"type": ""
													}
												],
												"src": "7539:410:9"
											},
											{
												"body": {
													"nativeSrc": "8156:202:9",
													"nodeType": "YulBlock",
													"src": "8156:202:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8173:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8184:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8184:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:9"
																},
																"nativeSrc": "8166:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8166:25:9"
															},
															"nativeSrc": "8166:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "8166:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8211:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8222:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8222:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:9"
																		},
																		"nativeSrc": "8207:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8227:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8227:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:9"
																},
																"nativeSrc": "8200:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8200:30:9"
															},
															"nativeSrc": "8200:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8200:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8250:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8250:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8261:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8261:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8246:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:9"
																		},
																		"nativeSrc": "8246:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8246:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8266:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8239:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:9"
																},
																"nativeSrc": "8239:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8239:29:9"
															},
															"nativeSrc": "8239:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "8239:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8288:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8288:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8299:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8299:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8284:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8284:3:9"
																		},
																		"nativeSrc": "8284:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8284:18:9"
																	},
																	{
																		"hexValue": "4d61726b6574696e67",
																		"kind": "string",
																		"nativeSrc": "8304:11:9",
																		"nodeType": "YulLiteral",
																		"src": "8304:11:9",
																		"type": "",
																		"value": "Marketing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8277:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8277:6:9"
																},
																"nativeSrc": "8277:39:9",
																"nodeType": "YulFunctionCall",
																"src": "8277:39:9"
															},
															"nativeSrc": "8277:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "8277:39:9"
														},
														{
															"nativeSrc": "8325:27:9",
															"nodeType": "YulAssignment",
															"src": "8325:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8337:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8337:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8348:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8348:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:9"
																},
																"nativeSrc": "8333:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8333:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8325:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8325:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7954:404:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8125:9:9",
														"nodeType": "YulTypedName",
														"src": "8125:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8136:6:9",
														"nodeType": "YulTypedName",
														"src": "8136:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8147:4:9",
														"nodeType": "YulTypedName",
														"src": "8147:4:9",
														"type": ""
													}
												],
												"src": "7954:404:9"
											},
											{
												"body": {
													"nativeSrc": "8565:200:9",
													"nodeType": "YulBlock",
													"src": "8565:200:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8582:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8582:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8593:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8593:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8575:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:9"
																},
																"nativeSrc": "8575:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8575:25:9"
															},
															"nativeSrc": "8575:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "8575:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8620:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8620:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8631:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8631:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8616:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:9"
																		},
																		"nativeSrc": "8616:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8616:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8636:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8636:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8609:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8609:6:9"
																},
																"nativeSrc": "8609:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8609:30:9"
															},
															"nativeSrc": "8609:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8609:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8659:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8670:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8670:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8655:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:9"
																		},
																		"nativeSrc": "8655:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8675:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8675:1:9",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8648:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:9"
																},
																"nativeSrc": "8648:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8648:29:9"
															},
															"nativeSrc": "8648:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "8648:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8697:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8697:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8708:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8708:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8693:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8693:3:9"
																		},
																		"nativeSrc": "8693:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8693:18:9"
																	},
																	{
																		"hexValue": "5374616b696e67",
																		"kind": "string",
																		"nativeSrc": "8713:9:9",
																		"nodeType": "YulLiteral",
																		"src": "8713:9:9",
																		"type": "",
																		"value": "Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:9"
																},
																"nativeSrc": "8686:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8686:37:9"
															},
															"nativeSrc": "8686:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8686:37:9"
														},
														{
															"nativeSrc": "8732:27:9",
															"nodeType": "YulAssignment",
															"src": "8732:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8744:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8744:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8755:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8740:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8740:3:9"
																},
																"nativeSrc": "8740:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8740:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8732:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8732:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8363:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8534:9:9",
														"nodeType": "YulTypedName",
														"src": "8534:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8545:6:9",
														"nodeType": "YulTypedName",
														"src": "8545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8556:4:9",
														"nodeType": "YulTypedName",
														"src": "8556:4:9",
														"type": ""
													}
												],
												"src": "8363:402:9"
											},
											{
												"body": {
													"nativeSrc": "8972:208:9",
													"nodeType": "YulBlock",
													"src": "8972:208:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8989:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8989:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9000:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9000:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8982:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8982:6:9"
																},
																"nativeSrc": "8982:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8982:25:9"
															},
															"nativeSrc": "8982:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "8982:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9027:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9038:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9023:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:9"
																		},
																		"nativeSrc": "9023:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9043:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9016:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:9"
																},
																"nativeSrc": "9016:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9016:30:9"
															},
															"nativeSrc": "9016:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9016:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9066:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9066:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9077:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9077:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9062:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:9"
																		},
																		"nativeSrc": "9062:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9062:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9082:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9082:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9055:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:9"
																},
																"nativeSrc": "9055:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9055:30:9"
															},
															"nativeSrc": "9055:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9055:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9105:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9105:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9116:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9116:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9101:3:9"
																		},
																		"nativeSrc": "9101:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9101:18:9"
																	},
																	{
																		"hexValue": "4c697175696469747920506f6f6c",
																		"kind": "string",
																		"nativeSrc": "9121:16:9",
																		"nodeType": "YulLiteral",
																		"src": "9121:16:9",
																		"type": "",
																		"value": "Liquidity Pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9094:6:9"
																},
																"nativeSrc": "9094:44:9",
																"nodeType": "YulFunctionCall",
																"src": "9094:44:9"
															},
															"nativeSrc": "9094:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "9094:44:9"
														},
														{
															"nativeSrc": "9147:27:9",
															"nodeType": "YulAssignment",
															"src": "9147:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9159:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9159:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9170:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9170:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9155:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9155:3:9"
																},
																"nativeSrc": "9155:19:9",
																"nodeType": "YulFunctionCall",
																"src": "9155:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9147:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9147:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8770:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8941:9:9",
														"nodeType": "YulTypedName",
														"src": "8941:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8952:6:9",
														"nodeType": "YulTypedName",
														"src": "8952:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8963:4:9",
														"nodeType": "YulTypedName",
														"src": "8963:4:9",
														"type": ""
													}
												],
												"src": "8770:410:9"
											},
											{
												"body": {
													"nativeSrc": "9359:170:9",
													"nodeType": "YulBlock",
													"src": "9359:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9376:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9376:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9387:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9387:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:9"
																},
																"nativeSrc": "9369:21:9",
																"nodeType": "YulFunctionCall",
																"src": "9369:21:9"
															},
															"nativeSrc": "9369:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "9369:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9410:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9410:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9421:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9421:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9406:3:9"
																		},
																		"nativeSrc": "9406:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9406:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9426:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9399:6:9"
																},
																"nativeSrc": "9399:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9399:30:9"
															},
															"nativeSrc": "9399:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9399:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9449:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9449:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9460:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9460:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9445:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9445:3:9"
																		},
																		"nativeSrc": "9445:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9445:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9465:22:9",
																		"nodeType": "YulLiteral",
																		"src": "9465:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9438:6:9"
																},
																"nativeSrc": "9438:50:9",
																"nodeType": "YulFunctionCall",
																"src": "9438:50:9"
															},
															"nativeSrc": "9438:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "9438:50:9"
														},
														{
															"nativeSrc": "9497:26:9",
															"nodeType": "YulAssignment",
															"src": "9497:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9509:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9509:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9520:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:9"
																},
																"nativeSrc": "9505:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9505:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9497:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9497:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9185:344:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9336:9:9",
														"nodeType": "YulTypedName",
														"src": "9336:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9350:4:9",
														"nodeType": "YulTypedName",
														"src": "9350:4:9",
														"type": ""
													}
												],
												"src": "9185:344:9"
											},
											{
												"body": {
													"nativeSrc": "9691:188:9",
													"nodeType": "YulBlock",
													"src": "9691:188:9",
													"statements": [
														{
															"nativeSrc": "9701:26:9",
															"nodeType": "YulAssignment",
															"src": "9701:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9713:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9713:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9724:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9709:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:9"
																},
																"nativeSrc": "9709:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9709:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9701:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9743:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9758:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9774:3:9",
																								"nodeType": "YulLiteral",
																								"src": "9774:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9779:1:9",
																								"nodeType": "YulLiteral",
																								"src": "9779:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9770:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9770:3:9"
																						},
																						"nativeSrc": "9770:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9770:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9783:1:9",
																						"nodeType": "YulLiteral",
																						"src": "9783:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9766:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:9"
																				},
																				"nativeSrc": "9766:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9766:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9754:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9754:3:9"
																		},
																		"nativeSrc": "9754:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9754:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9736:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9736:6:9"
																},
																"nativeSrc": "9736:51:9",
																"nodeType": "YulFunctionCall",
																"src": "9736:51:9"
															},
															"nativeSrc": "9736:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "9736:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9807:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9803:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:9"
																		},
																		"nativeSrc": "9803:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9823:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9823:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9796:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:9"
																},
																"nativeSrc": "9796:34:9",
																"nodeType": "YulFunctionCall",
																"src": "9796:34:9"
															},
															"nativeSrc": "9796:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "9796:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9850:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9850:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9861:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9861:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9846:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9846:3:9"
																		},
																		"nativeSrc": "9846:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9846:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9866:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9839:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9839:6:9"
																},
																"nativeSrc": "9839:34:9",
																"nodeType": "YulFunctionCall",
																"src": "9839:34:9"
															},
															"nativeSrc": "9839:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "9839:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9534:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9644:9:9",
														"nodeType": "YulTypedName",
														"src": "9644:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9655:6:9",
														"nodeType": "YulTypedName",
														"src": "9655:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9663:6:9",
														"nodeType": "YulTypedName",
														"src": "9663:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9671:6:9",
														"nodeType": "YulTypedName",
														"src": "9671:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9682:4:9",
														"nodeType": "YulTypedName",
														"src": "9682:4:9",
														"type": ""
													}
												],
												"src": "9534:345:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Tax too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No LP funds available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"New pair address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds max wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Exceeds max transaction limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Tax exceeds transfer amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 18)\n        mstore(add(headStart, 96), \"Encouragement Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Emergency Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 9)\n        mstore(add(headStart, 96), \"Marketing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 7)\n        mstore(add(headStart, 96), \"Staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Liquidity Pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x753CAFC3 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xBEA9EA62 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x52A6A9EC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1006EE0C GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1006EE0C EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x256 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x256 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x22D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x62F JUMP JUMPDEST PUSH2 0x22D PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4BA DUP2 DUP6 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x84E JUMP JUMPDEST PUSH1 0xF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x57B DUP5 DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x586 DUP5 DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x5C0 SWAP2 DUP7 SWAP2 PUSH2 0x5BB SWAP1 DUP7 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xD1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH0 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x627 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH0 PUSH2 0x647 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x652 CALLER DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0x84E JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F204C502066756E647320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x6DE ADDRESS PUSH2 0x6D8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xBBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x71D PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH2 0x70A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x849 JUMPI PUSH1 0x64 PUSH2 0x8F8 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 PUSH2 0x921 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x992 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xA21 JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0xD SLOAD DUP4 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461782065786365656473207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP3 DUP5 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAA8 DUP5 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAC2 DUP6 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xADC DUP7 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAF6 DUP8 PUSH1 0x2 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xB10 DUP9 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP11 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xBA4 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xC08 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xC67 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xCB7 DUP11 ADDRESS DUP8 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xCFB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD0E DUP11 DUP11 DUP9 PUSH2 0xDFA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD4F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x100D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1029 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x114C DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP PUSH2 0x115A PUSH1 0x20 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1184 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11DE DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC PUSH1 0x20 DUP5 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1209 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1285 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 0x4C 0xD1 SWAP4 PUSH8 0x26E61034D3F90F1A 0xEB PUSH6 0xD2DF8A28DBD1 0xE6 NOT PUSH32 0x4122C409EB743B5FAB64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "295:4653:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:28;;;;;-1:-1:-1;;;;;698:28:8;;;;;;-1:-1:-1;;;;;178:32:9;;;160:51;;148:2;133:18;698:28:8;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:9;;1286:22;1268:41;;1256:2;1241:18;3998:186:4;1128:187:9;4546:253:8;;;;;;:::i;:::-;;:::i;:::-;;2849:97:4;2927:12;;2849:97;;;1817:25:9;;;1805:2;1790:18;2849:97:4;1671:177:9;1946:341:8;;;;;;:::i;:::-;;:::i;366:59::-;;407:18;366:59;;2707:82:4;;;2780:2;2374:36:9;;2362:2;2347:18;2707:82:4;2232:184:9;4878:67:8;;;:::i;768:26::-;;;;;;837:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;587:32;;;;;;;;-1:-1:-1;;;;;587:32:8;;;1615:84:2;1685:7;;;;1615:84;;3004:116:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:4;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;4163:145:8:-;;;;;;:::i;:::-;;:::i;661:30::-;;;;;-1:-1:-1;;;;;661:30:8;;;4807:63;;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1981:93:4;;;:::i;1688:250:8:-;;;;;;:::i;:::-;;:::i;3892:263::-;;;:::i;4316:222::-;;;;;;:::i;:::-;;:::i;733:26::-;;;;;-1:-1:-1;;;;;733:26:8;;;801:27;;;;;;626:28;;;;;-1:-1:-1;;;;;626:28:8;;;3551:140:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:4;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;432:63:8;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;508:61:8:-;;;:::i;1779:89:4:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:7;4125:31:4;735:10:7;4141:7:4;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4546:253:8:-;1531:13:0;:11;:13::i;:::-;4651:2:8::1;4640:7;:13;;:31;;;;;4669:2;4657:8;:14;;4640:31;4632:56;;;::::0;-1:-1:-1;;;4632:56:8;;3816:2:9;4632:56:8::1;::::0;::::1;3798:21:9::0;3855:2;3835:18;;;3828:30;-1:-1:-1;;;3874:18:9;;;3867:42;3926:18;;4632:56:8::1;;;;;;;;;4699:6;:16:::0;;;4726:7:::1;:18:::0;;;4760:31:::1;::::0;;4129:25:9;;;4185:2;4170:18;;4163:34;;;4760:31:8::1;::::0;4102:18:9;4760:31:8::1;;;;;;;4546:253:::0;;:::o;1946:341::-;2058:4;1239:19:2;:17;:19::i;:::-;2075:47:8::1;2096:6;2104:9;2115:6;2075:20;:47::i;:::-;2133:45;2152:6;2160:9;2171:6;2133:18;:45::i;:::-;-1:-1:-1::0;;;;;3657:18:4;;3631:7;3657:18;;;:11;:18;;;;;;;;2206:10:8::1;3657:27:4::0;;;;;;;;;2189:68:8::1;::::0;3657:18:4;;2218:38:8::1;::::0;2250:6;;2218:38:::1;:::i;:::-;2189:8;:68::i;:::-;-1:-1:-1::0;2275:4:8::1;1946:341:::0;;;;;:::o;4878:67::-;1531:13:0;:11;:13::i;:::-;4927:10:8::1;:8;:10::i;:::-;4878:67::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;4163:145:8:-:0;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4262:27:8;;;::::1;;::::0;;;:18:::1;:27;::::0;;;;:38;;-1:-1:-1;;4262:38:8::1;::::0;::::1;;::::0;;;::::1;::::0;;4163:145::o;4807:63::-;1531:13:0;:11;:13::i;:::-;4854:8:8::1;:6;:8::i;1981:93:4:-:0;2028:13;2060:7;2053:14;;;;;:::i;1688:250:8:-;1780:4;1239:19:2;:17;:19::i;:::-;1797:51:8::1;1818:10;1830:9;1841:6;1797:20;:51::i;:::-;1859:49;1878:10;1890:9;1901:6;1859:18;:49::i;:::-;-1:-1:-1::0;1926:4:8::1;1688:250:::0;;;;:::o;3892:263::-;1531:13:0;:11;:13::i;:::-;3985:4:8::1;3949:15;3095:18:4::0;;;;;;;;;;;4010:11:8;4002:45:::1;;;::::0;-1:-1:-1;;;4002:45:8;;4675:2:9;4002:45:8::1;::::0;::::1;4657:21:9::0;4714:2;4694:18;;;4687:30;-1:-1:-1;;;4733:18:9;;;4726:51;4794:18;;4002:45:8::1;4473:345:9::0;4002:45:8::1;4058:48;4082:4;4089:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;4089:7:8::1;4098;4058:15;:48::i;:::-;4122:25;::::0;1817::9;;;4122::8::1;::::0;1805:2:9;1790:18;4122:25:8::1;;;;;;;;3938:217;3892:263::o:0;4316:222::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4398:21:8;::::1;4390:65;;;::::0;-1:-1:-1;;;4390:65:8;;5025:2:9;4390:65:8::1;::::0;::::1;5007:21:9::0;5064:2;5044:18;;;5037:30;5103:33;5083:18;;;5076:61;5154:18;;4390:65:8::1;4823:355:9::0;4390:65:8::1;4466:11;:21:::0;;-1:-1:-1;;;;;;4466:21:8::1;-1:-1:-1::0;;;;;4466:21:8;::::1;::::0;;::::1;::::0;;;4503:27:::1;::::0;160:51:9;;;4503:27:8::1;::::0;148:2:9;133:18;4503:27:8::1;14:203:9::0;432:63:8;492:3;470:18;407;487:1;470:18;:::i;:::-;469:26;;;;:::i;:::-;432:63;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:9::0;133:18;;2672:31:0::1;14:203:9::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;508:61:8:-;564:5;542:18;407;559:1;542:18;:::i;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;160:51:9;133:18;;1901:40:0;14:203:9;1767:106:2;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;5780:2:9;1828:38:2;;;5762:21:9;5819:2;5799:18;;;5792:30;-1:-1:-1;;;5838:18:9;;;5831:46;5894:18;;1828:38:2;5578:340:9;2295:326:8;-1:-1:-1;;;;;2406:26:8;;;;;;:18;:26;;;;;;;;2401:213;;492:3;470:18;407;487:1;470:18;:::i;:::-;469:26;;;;:::i;:::-;2480:6;2457:20;2467:9;-1:-1:-1;;;;;3095:18:4;3069:7;3095:18;;;;;;;;;;;;3004:116;2457:20:8;:29;;;;:::i;:::-;:43;;2449:80;;;;-1:-1:-1;;;2449:80:8;;6255:2:9;2449:80:8;;;6237:21:9;6294:2;6274:18;;;6267:30;6333:26;6313:18;;;6306:54;6377:18;;2449:80:8;6053:348:9;2449:80:8;564:5;542:18;407;559:1;542:18;:::i;:::-;541:28;;;;:::i;:::-;2552:6;:16;;2544:58;;;;-1:-1:-1;;;2544:58:8;;6608:2:9;2544:58:8;;;6590:21:9;6647:2;6627:18;;;6620:30;6686:31;6666:18;;;6659:59;6735:18;;2544:58:8;6406:353:9;2629:1255:8;2756:11;;2728;;-1:-1:-1;;;;;2743:24:8;;;2756:11;;2743:24;2742:79;;2818:3;2808:6;;2799;:15;;;;:::i;:::-;2798:23;;;;:::i;:::-;2742:79;;;2792:3;2781:7;;2772:6;:16;;;;:::i;:::-;2771:24;;;;:::i;:::-;2728:93;;2850:3;2840:6;:13;;2832:53;;;;-1:-1:-1;;;2832:53:8;;6966:2:9;2832:53:8;;;6948:21:9;7005:2;6985:18;;;6978:30;7044:29;7024:18;;;7017:57;7091:18;;2832:53:8;6764:351:9;2832:53:8;2898:17;2918:12;2927:3;2918:6;:12;:::i;:::-;2898:32;-1:-1:-1;2941:15:8;2971:2;2960:7;:3;2966:1;2960:7;:::i;:::-;2959:14;;;;:::i;:::-;2941:32;-1:-1:-1;2984:26:8;3025:2;3014:7;:3;3020:1;3014:7;:::i;:::-;3013:14;;;;:::i;:::-;2984:43;-1:-1:-1;3038:22:8;3075:2;3064:7;:3;3070:1;3064:7;:::i;:::-;3063:14;;;;:::i;:::-;3038:39;-1:-1:-1;3088:22:8;3125:2;3114:7;:3;3120:1;3114:7;:::i;:::-;3113:14;;;;:::i;:::-;3088:39;-1:-1:-1;3138:20:8;3173:2;3162:7;:3;3168:1;3162:7;:::i;:::-;3161:14;;;;:::i;:::-;3138:37;;3188:62;3204:6;3212:17;;;;;;;;;-1:-1:-1;;;;;3212:17:8;3231:18;3188:15;:62::i;:::-;-1:-1:-1;;;;;;;;;;;3281:18:8;3266:56;;;;7332:25:9;;7393:2;7388;7373:18;;7366:30;;;7432:2;7412:18;;;7405:30;-1:-1:-1;;;7466:2:9;7451:18;;7444:48;7524:3;7509:19;;7120:414;3266:56:8;;;;;;;;3359:13;;3335:54;;3351:6;;-1:-1:-1;;;;;3359:13:8;3374:14;3335:15;:54::i;:::-;-1:-1:-1;;;;;;;;;;;3420:14:8;3405:48;;;;7751:25:9;;7812:2;7807;7792:18;;7785:30;;;7851:2;7831:18;;;7824:30;-1:-1:-1;;;7885:2:9;7870:18;;7863:44;7939:3;7924:19;;7539:410;3405:48:8;;;;;;;;3490:15;;3466:56;;3482:6;;-1:-1:-1;;;;;3490:15:8;3507:14;3466:15;:56::i;:::-;-1:-1:-1;;;;;;;;;;;3553:14:8;3538:43;;;;8166:25:9;;8227:2;8222;8207:18;;8200:30;;;8266:1;8246:18;;;8239:29;-1:-1:-1;;;8299:2:9;8284:18;;8277:39;8348:3;8333:19;;7954:404;3538:43:8;;;;;;;;3618:13;;3594:52;;3610:6;;-1:-1:-1;;;;;3618:13:8;3633:12;3594:15;:52::i;:::-;-1:-1:-1;;;;;;;;;;;3677:12:8;3662:39;;;;8575:25:9;;8636:2;8631;8616:18;;8609:30;;;8675:1;8655:18;;;8648:29;-1:-1:-1;;;8708:2:9;8693:18;;8686:37;8755:3;8740:19;;8363:402;3662:39:8;;;;;;;;3714:47;3730:6;3746:4;3753:7;3714:15;:47::i;:::-;-1:-1:-1;;;;;;;;;;;3792:7:8;3777:41;;;;8982:25:9;;9043:2;9038;9023:18;;9016:30;;;9082:2;9062:18;;;9055:30;-1:-1:-1;;;9116:2:9;9101:18;;9094:44;9170:3;9155:19;;8770:410;3777:41:8;;;;;;;;3831:45;3847:6;3855:9;3866;3831:15;:45::i;:::-;2717:1167;;;;;;;2629:1255;;;:::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:2::1;::::0;;2521:22:::1;735:10:7::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;178:32:9;;;160:51;;148:2;133:18;2521:22:2::1;;;;;;;2433:117::o:0;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:2::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:7::0;;656:96;5393:300:4;-1:-1:-1;;;;;5476:18:4;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:4;;5544:1;5517:30;;;160:51:9;133:18;;5517:30:4;14:203:9;5472:86:4;-1:-1:-1;;;;;5571:16:4;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:4;;5639:1;5610:32;;;160:51:9;133:18;;5610:32:4;14:203:9;5567:86:4;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:4;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:4;;9884:1;9855:32;;;160:51:9;133:18;;9855:32:4;14:203:9;9809:89:4;-1:-1:-1;;;;;9911:21:4;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:4;;9983:1;9955:31;;;160:51:9;133:18;;9955:31:4;14:203:9;9907:90:4;-1:-1:-1;;;;;10006:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:4;10094:5;-1:-1:-1;;;;;10085:31:4;;10110:5;10085:31;;;;1817:25:9;;1805:2;1790:18;;1671:177;10085:31:4;;;;;;;;10051:76;9701:432;;;;:::o;1945:106:2:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;9387:2:9;2003:41:2;;;9369:21:9;9426:2;9406:18;;;9399:30;-1:-1:-1;;;9445:18:9;;;9438:50;9505:18;;2003:41:2;9185:344:9;6008:1107:4;-1:-1:-1;;;;;6097:18:4;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:4;;-1:-1:-1;6093:540:4;;-1:-1:-1;;;;;6307:15:4;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:4;;-1:-1:-1;;;;;9754:32:9;;6386:50:4;;;9736:51:9;9803:18;;;9796:34;;;9846:18;;;9839:34;;;9709:18;;6386:50:4;9534:345:9;6336:115:4;-1:-1:-1;;;;;6571:15:4;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:4;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:4;7092:4;-1:-1:-1;;;;;7083:25:4;;7102:5;7083:25;;;;1817::9;;1805:2;1790:18;;1671:177;7083:25:4;;;;;;;;6008:1107;;;:::o;222:418:9:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:9;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:9:o;1320:346::-;1388:6;1396;1449:2;1437:9;1428:7;1424:23;1420:32;1417:52;;;1465:1;1462;1455:12;1417:52;-1:-1:-1;;1510:23:9;;;1630:2;1615:18;;;1602:32;;-1:-1:-1;1320:346:9:o;1853:374::-;1930:6;1938;1946;1999:2;1987:9;1978:7;1974:23;1970:32;1967:52;;;2015:1;2012;2005:12;1967:52;2038:29;2057:9;2038:29;:::i;:::-;2028:39;;2086:38;2120:2;2109:9;2105:18;2086:38;:::i;:::-;1853:374;;2076:48;;-1:-1:-1;;;2193:2:9;2178:18;;;;2165:32;;1853:374::o;2421:186::-;2480:6;2533:2;2521:9;2512:7;2508:23;2504:32;2501:52;;;2549:1;2546;2539:12;2501:52;2572:29;2591:9;2572:29;:::i;:::-;2562:39;2421:186;-1:-1:-1;;;2421:186:9:o;2612:347::-;2677:6;2685;2738:2;2726:9;2717:7;2713:23;2709:32;2706:52;;;2754:1;2751;2744:12;2706:52;2777:29;2796:9;2777:29;:::i;:::-;2767:39;;2856:2;2845:9;2841:18;2828:32;2903:5;2896:13;2889:21;2882:5;2879:32;2869:60;;2925:1;2922;2915:12;2869:60;2948:5;2938:15;;;2612:347;;;;;:::o;2964:260::-;3032:6;3040;3093:2;3081:9;3072:7;3068:23;3064:32;3061:52;;;3109:1;3106;3099:12;3061:52;3132:29;3151:9;3132:29;:::i;:::-;3122:39;;3180:38;3214:2;3203:9;3199:18;3180:38;:::i;:::-;3170:48;;2964:260;;;;;:::o;3229:380::-;3308:1;3304:12;;;;3351;;;3372:61;;3426:4;3418:6;3414:17;3404:27;;3372:61;3479:2;3471:6;3468:14;3448:18;3445:38;3442:161;;3525:10;3520:3;3516:20;3513:1;3506:31;3560:4;3557:1;3550:15;3588:4;3585:1;3578:15;3442:161;;3229:380;;;:::o;4208:127::-;4269:10;4264:3;4260:20;4257:1;4250:31;4300:4;4297:1;4290:15;4324:4;4321:1;4314:15;4340:128;4407:9;;;4428:11;;;4425:37;;;4442:18;;:::i;5183:168::-;5256:9;;;5287;;5304:15;;;5298:22;;5284:37;5274:71;;5325:18;;:::i;5356:217::-;5396:1;5422;5412:132;;5466:10;5461:3;5457:20;5454:1;5447:31;5501:4;5498:1;5491:15;5529:4;5526:1;5519:15;5412:132;-1:-1:-1;5558:9:9;;5356:217::o;5923:125::-;5988:9;;;6009:10;;;6006:36;;;6022:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "970200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "306",
								"MAX_TX()": "466",
								"MAX_WALLET()": "422",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24804",
								"balanceOf(address)": "2626",
								"buyTax()": "2384",
								"decimals()": "222",
								"emergencyFund()": "2436",
								"encouragementFund()": "2381",
								"isExcludedFromFees(address)": "2640",
								"marketingWallet()": "2393",
								"name()": "infinite",
								"owner()": "2364",
								"pause()": "infinite",
								"paused()": "2370",
								"renounceOwnership()": "infinite",
								"sellTax()": "2383",
								"stakingWallet()": "2372",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"uniswapPair()": "2392",
								"unpause()": "infinite",
								"updateExcludedAccountStatus(address,bool)": "26901",
								"updateTaxes(uint256,uint256)": "48068",
								"updateUniswapPair(address)": "27878",
								"withdrawLPFunds()": "58494"
							},
							"internal": {
								"_applyTransferLimits(address,address,uint256)": "infinite",
								"_transferWithTaxes(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 768,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 768,
									"end": 794,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 826,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 801,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1115,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1115,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1356,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2C22A0A6902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5845414D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1369,
									"end": 1407,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1431,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1448,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1474,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1493,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1517,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1504,
									"end": 1534,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1597,
									"end": 1607,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 407,
									"end": 425,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1A784379D99DB42000000"
								},
								{
									"begin": 1591,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1591,
									"end": 1624,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1624,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1591,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1654,
									"end": 1664,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1665,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1653,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1635,
									"end": 1665,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1665,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1672,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1672,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1635,
									"end": 1672,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1635,
									"end": 1672,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1672,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1672,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3392,
									"end": 3595,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4029,
									"end": 4080,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3827,
									"end": 4172,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4311,
									"end": 4313,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 751,
									"end": 878,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 751,
									"end": 878,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 812,
									"end": 822,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 810,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 824,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 962,
									"end": 963,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1084,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1085,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1133,
									"end": 1135,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1131,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1136,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1120,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1137,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1189,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1170,
									"end": 1190,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1191,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1218,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1211,
									"end": 1212,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1204,
									"end": 1219,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1247,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 883,
									"end": 1263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1498,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1488,
									"end": 1499,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1532,
									"end": 1537,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1522,
									"end": 1538,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1580,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1574,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1648,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1630,
									"end": 1649,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1623,
									"end": 1650,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1613,
									"end": 1651,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1670,
									"end": 1680,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1667,
									"end": 1687,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1755,
									"end": 1758,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1751,
									"end": 1763,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1748,
									"end": 1749,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1744,
									"end": 1764,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1738,
									"end": 1742,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1734,
									"end": 1765,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1835,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1831,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1836,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1859,
									"end": 1860,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1861,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1394,
									"end": 1912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2263,
									"end": 2281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2382,
									"end": 2388,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2374,
									"end": 2378,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2379,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2342,
									"end": 2380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2292,
									"end": 2389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2469,
									"end": 2471,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2486,
									"end": 2487,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3191,
									"end": 3197,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2061,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2033,
									"end": 2062,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2023,
									"end": 2063,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2070,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2077,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1382,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2649,
									"end": 2656,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2646,
									"end": 2647,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2657,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 2751,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2838,
									"end": 2842,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2791,
									"end": 2792,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2665,
									"end": 2677,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2639,
									"end": 2642,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2891,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2876,
									"end": 2883,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2892,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2940,
									"end": 2966,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3029,
									"end": 3030,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 3021,
									"end": 3045,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3054,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3055,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2998,
									"end": 3056,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3097,
									"end": 3119,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2088,
									"end": 3387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3748,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 3733,
									"end": 3736,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3719,
									"end": 3750,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3773,
									"end": 3777,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3763,
									"end": 3778,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3805,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3798,
									"end": 3799,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3806,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3600,
									"end": 3822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 4948,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cd1936726e61034d3f90f1aeb65d2df8a28dbd1e6197f4122c409eb743b5fab64736f6c634300081a0033",
									".code": [
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "753CAFC3"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "C12B7C4E"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "DF7787A4"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "F3B2DB3F"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "C12B7C4E"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "C816841B"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "CC1776D3"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "CC859378"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "BEA9EA62"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "753CAFC3"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "75F0A874"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "52A6A9EC"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "52A6A9EC"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "4F7041A5"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "4FBEE193"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "1006EE0C"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "1006EE0C"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "2FF2E9DC"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "6EE6AD8"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 295,
											"end": 4948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 698,
											"end": 726,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 698,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 726,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4546,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4546,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1946,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1946,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 366,
											"end": 425,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 366,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 366,
											"end": 425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 425,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2374,
											"end": 2410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2232,
											"end": 2416,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4878,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 768,
											"end": 794,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 768,
											"end": 794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 768,
											"end": 794,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 768,
											"end": 794,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 768,
											"end": 794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 768,
											"end": 794,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 837,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 837,
											"end": 887,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 837,
											"end": 887,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 587,
											"end": 619,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4163,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4163,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 661,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 661,
											"end": 691,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 691,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4807,
											"end": 4870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1688,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1688,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3892,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 4316,
											"end": 4538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4316,
											"end": 4538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 733,
											"end": 759,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 733,
											"end": 759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 801,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 801,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 801,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 801,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 801,
											"end": 828,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 801,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 801,
											"end": 828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 626,
											"end": 654,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 626,
											"end": 654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 626,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 626,
											"end": 654,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 626,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 626,
											"end": 654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 626,
											"end": 654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 626,
											"end": 654,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 432,
											"end": 495,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 432,
											"end": 495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 432,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 432,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 432,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 569,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 508,
											"end": 569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 508,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 508,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4640,
											"end": 4647,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4653,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4653,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4669,
											"end": 4671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4657,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4671,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4640,
											"end": 4671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4632,
											"end": 4688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8C2F040E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4632,
											"end": 4688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4760,
											"end": 4791,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4"
										},
										{
											"begin": 4760,
											"end": 4791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4791,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2096,
											"end": 2102,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2104,
											"end": 2113,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2121,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2075,
											"end": 2122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2075,
											"end": 2122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2152,
											"end": 2158,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2160,
											"end": 2169,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2133,
											"end": 2178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2133,
											"end": 2178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2206,
											"end": 2216,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2189,
											"end": 2257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2218,
											"end": 2256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2189,
											"end": 2257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2189,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4878,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4927,
											"end": 4935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4927,
											"end": 4937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4927,
											"end": 4937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4163,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4262,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4289,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4262,
											"end": 4300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4300,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4854,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4854,
											"end": 4862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1818,
											"end": 1828,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1847,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1797,
											"end": 1848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1797,
											"end": 1848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1878,
											"end": 1888,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1859,
											"end": 1908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1859,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3892,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3985,
											"end": 3989,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4021,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4047,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F204C502066756E647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4473,
											"end": 4818,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4002,
											"end": 4047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4082,
											"end": 4086,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4089,
											"end": 4096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4058,
											"end": 4106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4058,
											"end": 4106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "BBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93"
										},
										{
											"begin": 4122,
											"end": 4147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4147,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3938,
											"end": 4155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 4155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5103,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "4E6577207061697220616464726573732063616E6E6F74206265207A65726F00"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4823,
											"end": 5178,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4390,
											"end": 4455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4466,
											"end": 4487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4503,
											"end": 4530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 495,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 432,
											"end": 495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 470,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 488,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 469,
											"end": 495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 469,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 469,
											"end": 495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 432,
											"end": 495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 569,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 508,
											"end": 569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 559,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 542,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5792,
											"end": 5822,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5578,
											"end": 5918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2295,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2424,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2401,
											"end": 2614,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 470,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 488,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 469,
											"end": 495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 469,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 469,
											"end": 495,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 469,
											"end": 495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2457,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2457,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6359,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206D61782077616C6C6574206C696D69740000000000000000"
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6053,
											"end": 6401,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2449,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 559,
											"end": 560,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 542,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 542,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 541,
											"end": 569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 541,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 541,
											"end": 569,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2568,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2568,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6717,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206D6178207472616E73616374696F6E206C696D6974000000"
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6659,
											"end": 6718,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6406,
											"end": 6759,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 3884,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2629,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2767,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2799,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2798,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2742,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2772,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2771,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2771,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2853,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2853,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2853,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6978,
											"end": 7008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7073,
											"name": "PUSH",
											"source": 9,
											"value": "5461782065786365656473207472616E7366657220616D6F756E740000000000"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6764,
											"end": 7115,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2832,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2927,
											"end": 2930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2918,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2960,
											"end": 2963,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2960,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2959,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2959,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3014,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3014,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3021,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3014,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3013,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3064,
											"end": 3067,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3064,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3063,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3127,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3114,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3114,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3114,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3121,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3114,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3113,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3113,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3162,
											"end": 3165,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3162,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3161,
											"end": 3175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3188,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3188,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7405,
											"end": 7435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B98DBDD5C9859D95B595B9D08119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7534,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3322,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3335,
											"end": 3389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3335,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3389,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3335,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3420,
											"end": 3434,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7751,
											"end": 7776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B595C99D95B98DE48119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7949,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3453,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3466,
											"end": 3522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3466,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3522,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3466,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8166,
											"end": 8191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8227,
											"end": 8229,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D61726B6574696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8351,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 8358,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3581,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3594,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3594,
											"end": 3646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3594,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3594,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3594,
											"end": 3646,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3594,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8575,
											"end": 8600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8575,
											"end": 8600,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8631,
											"end": 8633,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8648,
											"end": 8677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8708,
											"end": 8710,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8755,
											"end": 8758,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8765,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3760,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3714,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3761,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3714,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9084,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131A5C5D5A591A5D1E48141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9116,
											"end": 9118,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9173,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 9180,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3818,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3875,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3831,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9369,
											"end": 9390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9428,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9399,
											"end": 9429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9438,
											"end": 9488,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9185,
											"end": 9529,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9754,
											"end": 9786,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9786,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 9787,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9534,
											"end": 9879,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1666,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1320,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1452,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1467,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1320,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1970,
											"end": 2002,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2038,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2067,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2118,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2086,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2124,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2531,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2536,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2551,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2572,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2421,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2736,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2709,
											"end": 2741,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2756,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2777,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2860,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2911,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2612,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3132,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3180,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 3482,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3483,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3535,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3516,
											"end": 3536,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3592,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3593,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4335,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4208,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4279,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4260,
											"end": 4280,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4290,
											"end": 4305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4468,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4340,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4442,
											"end": 4460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5183,
											"end": 5351,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5183,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5284,
											"end": 5321,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5325,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5573,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5356,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5476,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5461,
											"end": 5464,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5457,
											"end": 5477,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5505,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5491,
											"end": 5506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5533,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5534,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6048,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5923,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6022,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6022,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										}
									],
									".data": {
										"859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"xeam_test_contract_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_TX()": "f3b2db3f",
							"MAX_WALLET()": "df7787a4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"emergencyFund()": "cc859378",
							"encouragementFund()": "52a6a9ec",
							"isExcludedFromFees(address)": "4fbee193",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sellTax()": "cc1776d3",
							"stakingWallet()": "06ee6ad8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"unpause()": "3f4ba83a",
							"updateExcludedAccountStatus(address,bool)": "753cafc3",
							"updateTaxes(uint256,uint256)": "1006ee0c",
							"updateUniswapPair(address)": "c12b7c4e",
							"withdrawLPFunds()": "bea9ea62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_encouragementFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_emergencyFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialUniswapPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LPFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"TaxDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"TaxesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"UniswapPairUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encouragementFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"updateExcludedAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"name\":\"updateTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"updateUniswapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLPFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1.sol\":\"XEAMToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"xeam_test_contract_1.sol\":{\"keccak256\":\"0xe9832882fd88341e0d4ed09088c7ef35abb9ed56be90b564d9254c3839b489d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e77dd70b7a87a38575acaab211e4526d959cdbf55047143e7505a56ab204fc6\",\"dweb:/ipfs/QmYN6ikFAVGHU3vkyjfjkY6jMzhm1hqauTCeAwFEeESmV6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 302,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1145,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "encouragementFund",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1147,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "emergencyFund",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1149,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1151,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1153,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1156,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "buyTax",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "sellTax",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1163,
								"contract": "xeam_test_contract_1.sol:XEAMToken",
								"label": "isExcludedFromFees",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 972,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 972,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 972,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 972,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 972,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 972,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 972,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 972,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 972,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 972,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 972,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 972,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 972,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 972,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 972,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 972,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 972,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9787:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1076,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1076,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1076,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"xeam_test_contract_1.sol": {
				"ast": {
					"absolutePath": "xeam_test_contract_1.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"XEAMToken": [
							1640
						]
					},
					"id": 1641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1641,
							"sourceUnit": 973,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1641,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1641,
							"sourceUnit": 458,
							"src": "172:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1641,
							"sourceUnit": 393,
							"src": "236:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "ERC20",
										"nameLocations": [
											"317:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "317:5:8"
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "317:5:8"
								},
								{
									"baseName": {
										"id": 1115,
										"name": "Ownable",
										"nameLocations": [
											"324:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "324:7:8"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "324:7:8"
								},
								{
									"baseName": {
										"id": 1117,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"333:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "333:15:8"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "333:15:8"
								},
								{
									"baseName": {
										"id": 1119,
										"name": "Pausable",
										"nameLocations": [
											"350:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "350:8:8"
									},
									"id": 1120,
									"nodeType": "InheritanceSpecifier",
									"src": "350:8:8"
								}
							],
							"canonicalName": "XEAMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1640,
							"linearizedBaseContracts": [
								1640,
								392,
								457,
								147,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "XEAMToken",
							"nameLocation": "304:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1127,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "390:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "366:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										},
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "325f3030305f303030",
											"id": 1122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "407:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000000_by_1",
												"typeString": "int_const 2000000"
											},
											"value": "2_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1125,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1123,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "419:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1124,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "423:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "419:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "407:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "df7787a4",
									"id": 1135,
									"mutability": "constant",
									"name": "MAX_WALLET",
									"nameLocation": "456:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "432:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "432:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1129,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "470:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "470:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1132,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "469:20:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1133,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "492:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "469:26:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3b2db3f",
									"id": 1143,
									"mutability": "constant",
									"name": "MAX_TX",
									"nameLocation": "532:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "508:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "508:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "542:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "559:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "542:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1140,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "541:20:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130303030",
											"id": 1141,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "564:5:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"src": "541:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52a6a9ec",
									"id": 1145,
									"mutability": "mutable",
									"name": "encouragementFund",
									"nameLocation": "602:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "587:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1144,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc859378",
									"id": 1147,
									"mutability": "mutable",
									"name": "emergencyFund",
									"nameLocation": "641:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "626:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1146,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1149,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "676:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "661:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1148,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06ee6ad8",
									"id": 1151,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "713:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "698:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1153,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "748:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "733:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "733:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1156,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "783:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "768:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "792:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1159,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "816:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "801:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "801:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 1158,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "826:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fbee193",
									"id": 1163,
									"mutability": "mutable",
									"name": "isExcludedFromFees",
									"nameLocation": "869:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1640,
									"src": "837:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1162,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "837:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1161,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "856:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984",
									"id": 1169,
									"name": "TaxDistributed",
									"nameLocation": "902:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "925:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "917:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "940:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "933:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "933:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:33:8"
									},
									"src": "896:54:8"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344",
									"id": 1173,
									"name": "UniswapPairUpdated",
									"nameLocation": "962:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "989:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "981:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:17:8"
									},
									"src": "956:42:8"
								},
								{
									"anonymous": false,
									"eventSelector": "35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4",
									"id": 1179,
									"name": "TaxesUpdated",
									"nameLocation": "1010:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyTax",
												"nameLocation": "1031:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1023:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellTax",
												"nameLocation": "1050:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1042:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:39:8"
									},
									"src": "1004:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "bba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93",
									"id": 1183,
									"name": "LPFundsWithdrawn",
									"nameLocation": "1074:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1099:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1091:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:16:8"
									},
									"src": "1068:39:8"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1358:322:8",
										"statements": [
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "1369:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1205,
														"name": "_encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "1389:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1369:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "1369:38:8"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1418:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "_emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "1434:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1418:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "1418:30:8"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1212,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "1459:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1213,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "1477:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1459:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "1459:34:8"
											},
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "1504:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1217,
														"name": "_stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "1520:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1504:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1504:30:8"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "1545:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_initialUniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "1559:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1545:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1545:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1597:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1601:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1597:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "1609:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1591:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1591:33:8"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1230,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "1635:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1233,
														"indexExpression": {
															"expression": {
																"id": 1231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1654:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1658:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1654:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1635:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1668:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1635:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1635:37:8"
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5845414d20546f6b656e",
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1316:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98e1b9db00eaaf366b935ad530b190d9773aad50d000749d85e219b8a5ba6845",
														"typeString": "literal_string \"XEAM Token\""
													},
													"value": "XEAM Token"
												},
												{
													"hexValue": "5845414d",
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_86097711d31c646e79eccbaca29da45b57f182582f3ece5f934788d25ae5c98b",
														"typeString": "literal_string \"XEAM\""
													},
													"value": "XEAM"
												}
											],
											"id": 1198,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1195,
												"name": "ERC20",
												"nameLocations": [
													"1310:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "1310:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1310:27:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1200,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1346:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1350:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1346:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1202,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1199,
												"name": "Ownable",
												"nameLocations": [
													"1338:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1338:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1338:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "_encouragementFund",
												"nameLocation": "1145:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1137:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "_emergencyFund",
												"nameLocation": "1182:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1174:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1215:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1207:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_stakingWallet",
												"nameLocation": "1250:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1242:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "_initialUniswapPair",
												"nameLocation": "1283:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1275:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:183:8"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:8"
									},
									"scope": 1640,
									"src": "1115:565:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1786:152:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1818:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1822:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1818:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "1830:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "1841:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"name": "_applyTransferLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "1797:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) view"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "1797:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1878:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1882:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1878:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "1890:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "1901:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "1859:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1859:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "1859:49:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1926:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1249,
												"id": 1265,
												"nodeType": "Return",
												"src": "1919:11:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1245,
												"name": "whenNotPaused",
												"nameLocations": [
													"1757:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1757:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1757:13:8"
										}
									],
									"name": "transfer",
									"nameLocation": "1697:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1748:8:8"
									},
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1714:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1706:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1733:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1725:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:35:8"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1780:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1780:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:6:8"
									},
									"scope": 1640,
									"src": "1688:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "2064:223:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2096:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2104:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2115:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1281,
														"name": "_applyTransferLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "2075:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) view"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "2075:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2152:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2160:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2171:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "2133:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "2133:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1294,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2206:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2210:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2206:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1298,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "2228:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1299,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2236:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2240:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2236:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "2218:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2218:29:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1302,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "2250:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2218:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "2189:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2189:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2189:68:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2275:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1280,
												"id": 1307,
												"nodeType": "Return",
												"src": "2268:11:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "whenNotPaused",
												"nameLocations": [
													"2035:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2035:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2035:13:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "1955:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1275,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2026:8:8"
									},
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1976:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1968:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1992:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1984:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2011:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "2003:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:51:8"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "2058:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2058:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:6:8"
									},
									"scope": 1640,
									"src": "1946:341:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "2390:231:8",
										"statements": [
											{
												"condition": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2405:27:8",
													"subExpression": {
														"baseExpression": {
															"id": 1318,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "2406:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1320,
														"indexExpression": {
															"id": 1319,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "2425:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2406:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "2401:213:8",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "2434:180:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1324,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1313,
																						"src": "2467:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1323,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "2457:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2457:20:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1326,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "2480:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2457:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1328,
																			"name": "MAX_WALLET",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "2490:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2457:43:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2502:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		},
																		"value": "Exceeds max wallet limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		}
																	],
																	"id": 1322,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2449:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2449:80:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1332,
															"nodeType": "ExpressionStatement",
															"src": "2449:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1334,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "2552:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1335,
																			"name": "MAX_TX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "2562:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2552:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2570:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		},
																		"value": "Exceeds max transaction limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		}
																	],
																	"id": 1333,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2544:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:58:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "2544:58:8"
														}
													]
												}
											}
										]
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_applyTransferLimits",
									"nameLocation": "2304:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2333:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2325:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2349:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2341:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2368:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2360:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:51:8"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:0:8"
									},
									"scope": 1640,
									"src": "2295:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "2717:1167:8",
										"statements": [
											{
												"assignments": [
													1353
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "2736:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "2728:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2728:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1354,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "2743:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1355,
																	"name": "uniswapPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "2756:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2743:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1357,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2742:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1364,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "2799:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1365,
																		"name": "buyTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "2808:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2799:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2798:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2818:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2798:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2742:79:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1358,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "2772:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1359,
																		"name": "sellTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "2781:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2772:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1361,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2771:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2771:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2728:93:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "2840:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1374,
																"name": "tax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "2850:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2840:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461782065786365656473207472616e7366657220616d6f756e74",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2855:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6",
																"typeString": "literal_string \"Tax exceeds transfer amount\""
															},
															"value": "Tax exceeds transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6",
																"typeString": "literal_string \"Tax exceeds transfer amount\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2832:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2832:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "2832:53:8"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "2906:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "2898:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2898:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "2918:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1382,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "2927:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2898:32:8"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "lpShare",
														"nameLocation": "2949:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "2941:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2941:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "2960:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2966:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2960:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1390,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2959:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2971:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "2959:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2941:32:8"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "encouragementShare",
														"nameLocation": "2992:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "2984:26:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2984:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1396,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "3014:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3014:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1399,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3013:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3025:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "3013:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2984:43:8"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "emergencyShare",
														"nameLocation": "3046:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "3038:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3038:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "3064:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3070:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3064:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1408,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3063:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3075:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "3063:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:39:8"
											},
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "marketingShare",
														"nameLocation": "3096:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "3088:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3088:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1414,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "3114:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3120:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3114:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1417,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3113:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3125:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "3113:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3088:39:8"
											},
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "stakingShare",
														"nameLocation": "3146:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "3138:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3138:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1423,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "3162:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3168:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3162:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1426,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3161:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3173:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "3161:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3138:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1433,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3204:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1434,
															"name": "encouragementFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "3212:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "3231:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1430,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3188:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3194:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3188:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3188:62:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1439,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "3281:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456e636f75726167656d656e742046756e64",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3301:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															},
															"value": "Encouragement Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															}
														],
														"id": 1438,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3266:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3266:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "EmitStatement",
												"src": "3261:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1446,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3351:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "emergencyFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "3359:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1448,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "3374:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1443,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3335:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3341:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3335:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3335:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "3335:54:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1452,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "3420:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456d657267656e63792046756e64",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															},
															"value": "Emergency Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															}
														],
														"id": 1451,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3405:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3405:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "3400:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3482:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3490:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3507:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1456,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3466:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3466:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3466:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "3466:56:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1465,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3553:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4d61726b6574696e67",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															},
															"value": "Marketing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															}
														],
														"id": 1464,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3538:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3538:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "EmitStatement",
												"src": "3533:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1472,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3610:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1473,
															"name": "stakingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3618:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "3633:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1469,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3594:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3600:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3594:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "3594:52:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1478,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "3677:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5374616b696e67",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															},
															"value": "Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															}
														],
														"id": 1477,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3662:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "EmitStatement",
												"src": "3657:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3730:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1488,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3746:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3738:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3738:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3738:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3753:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1482,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3714:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3720:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3714:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "3714:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1494,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3792:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4c697175696469747920506f6f6c",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3801:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															},
															"value": "Liquidity Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															}
														],
														"id": 1493,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3777:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "EmitStatement",
												"src": "3772:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1501,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3847:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3855:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1503,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3866:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1498,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3831:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3837:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3831:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3831:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "3831:45:8"
											}
										]
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWithTaxes",
									"nameLocation": "2638:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2665:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "2657:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2681:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "2673:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2673:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2700:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "2692:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:51:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2717:0:8"
									},
									"scope": 1640,
									"src": "2629:1255:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "3938:217:8",
										"statements": [
											{
												"assignments": [
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3957:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "3949:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3949:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1517,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3985:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3977:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3977:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3977:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1514,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "3967:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3949:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1522,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "4010:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4020:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4010:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204c502066756e647320617661696c61626c65",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4023:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8",
																"typeString": "literal_string \"No LP funds available\""
															},
															"value": "No LP funds available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8",
																"typeString": "literal_string \"No LP funds available\""
															}
														],
														"id": 1521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4002:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4002:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1533,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4082:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1640",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4074:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4074:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4074:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1535,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4089:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4089:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "4098:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1528,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4058:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1640_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4064:9:8",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "4058:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4058:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "4058:48:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1541,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "4139:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "LPFundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4122:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4122:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "EmitStatement",
												"src": "4117:30:8"
											}
										]
									},
									"functionSelector": "bea9ea62",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "onlyOwner",
												"nameLocations": [
													"3928:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3928:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3928:9:8"
										}
									],
									"name": "withdrawLPFunds",
									"nameLocation": "3901:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:8"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3938:0:8"
									},
									"scope": 1640,
									"src": "3892:263:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "4251:57:8",
										"statements": [
											{
												"expression": {
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1554,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "4262:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1556,
														"indexExpression": {
															"id": 1555,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "4281:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4262:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1557,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4292:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4262:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "4262:38:8"
											}
										]
									},
									"functionSelector": "753cafc3",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1551,
												"name": "onlyOwner",
												"nameLocations": [
													"4241:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4241:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4241:9:8"
										}
									],
									"name": "updateExcludedAccountStatus",
									"nameLocation": "4172:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4208:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "4200:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "4222:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "4217:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:32:8"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4251:0:8"
									},
									"scope": 1640,
									"src": "4163:145:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "4379:159:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "newPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "4398:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4417:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4409:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1570,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4409:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4409:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4398:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4421:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															},
															"value": "New pair address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4390:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4390:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "4390:65:8"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4466:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1579,
														"name": "newPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "4480:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4466:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "4466:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1583,
															"name": "newPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "4522:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1582,
														"name": "UniswapPairUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4503:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4503:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "EmitStatement",
												"src": "4498:32:8"
											}
										]
									},
									"functionSelector": "c12b7c4e",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "onlyOwner",
												"nameLocations": [
													"4369:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4369:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4369:9:8"
										}
									],
									"name": "updateUniswapPair",
									"nameLocation": "4325:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "4351:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "4343:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:17:8"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:8"
									},
									"scope": 1640,
									"src": "4316:222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "4621:178:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1597,
																	"name": "_buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "4640:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3135",
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4651:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"src": "4640:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1600,
																	"name": "_sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "4657:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4669:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "4657:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4640:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617820746f6f2068696768",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															},
															"value": "Tax too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															}
														],
														"id": 1596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4632:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4632:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "4632:56:8"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1607,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "4699:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1608,
														"name": "_buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "4708:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4699:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "4699:16:8"
											},
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1611,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "4726:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1612,
														"name": "_sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "4736:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4726:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "4726:18:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1616,
															"name": "_buyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "4773:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1617,
															"name": "_sellTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "4782:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1615,
														"name": "TaxesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "4760:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4760:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "EmitStatement",
												"src": "4755:36:8"
											}
										]
									},
									"functionSelector": "1006ee0c",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1593,
												"name": "onlyOwner",
												"nameLocations": [
													"4611:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4611:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4611:9:8"
										}
									],
									"name": "updateTaxes",
									"nameLocation": "4555:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "_buyTax",
												"nameLocation": "4575:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "4567:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "_sellTax",
												"nameLocation": "4592:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "4584:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4566:35:8"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:0:8"
									},
									"scope": 1640,
									"src": "4546:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "4843:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1626,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "4854:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4854:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "4854:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1623,
												"name": "onlyOwner",
												"nameLocations": [
													"4833:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4833:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4833:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "4816:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4821:2:8"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4843:0:8"
									},
									"scope": 1640,
									"src": "4807:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "4916:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1635,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "4927:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4927:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "4927:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1632,
												"name": "onlyOwner",
												"nameLocations": [
													"4906:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4906:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4906:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "4887:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4894:2:8"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4916:0:8"
									},
									"scope": 1640,
									"src": "4878:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1641,
							"src": "295:4653:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1169,
								1173,
								1179,
								1183
							]
						}
					],
					"src": "33:4917:8"
				},
				"id": 8
			}
		}
	}
}