{
	"id": "b457d6c8d237bf0a09cfbd4095550f9c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"indentity_test_3_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n\n// File: indentity_test_3.sol\n\n\npragma solidity ^0.8.26;\n\n\n\n\ncontract XEAMToken is ERC20, Ownable, ReentrancyGuard {\n    uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18;\n    uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100; // 1%\n    uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000; // 0.05%\n\n    address public encouragementFund;\n    address public emergencyFund;\n    address public marketingWallet;\n    address public stakingWallet;\n    address public uniswapPair; // Address of the Uniswap pair (for sell detection)\n\n    uint256 public constant BUY_TAX = 10;\n    uint256 public constant SELL_TAX = 12;\n    uint256 public constant SLIPPAGE = 13; // Between 13% and 17%\n\n    mapping(address => bool) public isExcludedFromFees;\n\n    event TaxDistributed(uint256 amount, string category);\n    event UniswapPairUpdated(address newPair);\n\n    constructor(\n        address _encouragementFund,\n        address _emergencyFund,\n        address _marketingWallet,\n        address _stakingWallet,\n        address _initialUniswapPair\n    ) ERC20(\"XEAM Token\", \"XEAM\") Ownable(msg.sender) {\n        encouragementFund = _encouragementFund;\n        emergencyFund = _emergencyFund;\n        marketingWallet = _marketingWallet;\n        stakingWallet = _stakingWallet;\n        uniswapPair = _initialUniswapPair;\n\n        _mint(msg.sender, INITIAL_SUPPLY);\n        isExcludedFromFees[msg.sender] = true;\n    }\n\n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        if (!isExcludedFromFees[msg.sender]) {\n            require(\n                balanceOf(recipient) + amount <= MAX_WALLET,\n                \"Exceeds max wallet limit\"\n            );\n            require(amount <= MAX_TX, \"Exceeds max transaction limit\");\n        }\n\n        _transferWithTaxes(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function _transferWithTaxes(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        uint256 tax;\n        uint256 lpShare;\n        uint256 encouragementShare;\n        uint256 emergencyShare;\n        uint256 marketingShare;\n        uint256 stakingShare;\n\n        // Check if it's a buy or sell transaction\n        if (recipient == uniswapPair) {\n            // Sell transaction - 12% tax\n            tax = (amount * SELL_TAX) / 100;\n            lpShare = (tax * 4) / 12;          // 4% for LP\n            encouragementShare = (tax * 4) / 12; // 4% for Encouragement Fund\n            emergencyShare = (tax * 1) / 12;     // 1% for Emergency Fund\n            marketingShare = (tax * 2) / 12;     // 2% for Marketing\n            stakingShare = (tax * 1) / 12;      // 1% for Staking\n        } else {\n            // Buy transaction - 10% tax\n            tax = (amount * BUY_TAX) / 100;\n            lpShare = (tax * 3) / 10;          // 3% for LP\n            encouragementShare = (tax * 4) / 10; // 4% for Encouragement Fund\n            emergencyShare = (tax * 1) / 10;     // 1% for Emergency Fund\n            marketingShare = (tax * 1) / 10;     // 1% for Marketing\n            stakingShare = (tax * 1) / 10;      // 1% for Staking\n        }\n\n        uint256 netAmount = amount - tax;\n\n        // Distribute the tax\n        super._transfer(sender, encouragementFund, encouragementShare);\n        emit TaxDistributed(encouragementShare, \"Encouragement Fund\");\n\n        super._transfer(sender, emergencyFund, emergencyShare);\n        emit TaxDistributed(emergencyShare, \"Emergency Fund\");\n\n        super._transfer(sender, marketingWallet, marketingShare);\n        emit TaxDistributed(marketingShare, \"Marketing\");\n\n        super._transfer(sender, stakingWallet, stakingShare);\n        emit TaxDistributed(stakingShare, \"Staking\");\n\n        super._transfer(sender, address(this), lpShare);  // Transfer LP share to the contract\n        emit TaxDistributed(lpShare, \"Liquidity Pool\");\n\n        super._transfer(sender, recipient, netAmount);\n    }\n\n    function updateExcludedAccountStatus(address account, bool excluded)\n        external\n        onlyOwner\n    {\n        isExcludedFromFees[account] = excluded;\n    }\n\n    // Function to update the Uniswap pair address (temporary and later upgradeable)\n    function updateUniswapPair(address newPair) external onlyOwner {\n        require(newPair != address(0), \"New pair address cannot be zero\");\n        uniswapPair = newPair;\n        emit UniswapPairUpdated(newPair);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"indentity_test_3_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "indentity_test_3_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "indentity_test_3_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "indentity_test_3_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "indentity_test_3_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "indentity_test_3_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "indentity_test_3_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 926,
								"contract": "indentity_test_3_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"XEAMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_encouragementFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_emergencyFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialUniswapPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "TaxDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "UniswapPairUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BUY_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SELL_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SLIPPAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encouragementFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "updateExcludedAccountStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "updateUniswapPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"indentity_test_3_flattened.sol\":28095:32507  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"indentity_test_3_flattened.sol\":28915:29465  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"indentity_test_3_flattened.sol\":29140:29150  msg.sender */\n  caller\n    /* \"indentity_test_3_flattened.sol\":12501:12614  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2c22a0a6902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x5845414d)\n  dup2\n  mstore\n  pop\n    /* \"indentity_test_3_flattened.sol\":12575:12580  name_ */\n  dup2\n    /* \"indentity_test_3_flattened.sol\":12567:12572  _name */\n  0x03\n    /* \"indentity_test_3_flattened.sol\":12567:12580  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"indentity_test_3_flattened.sol\":12590:12597  _symbol */\n  0x04\n    /* \"indentity_test_3_flattened.sol\":12590:12607  _symbol = symbol_ */\n  tag_11\n    /* \"indentity_test_3_flattened.sol\":12600:12607  symbol_ */\n  dup3\n    /* \"indentity_test_3_flattened.sol\":12590:12597  _symbol */\n  dup3\n    /* \"indentity_test_3_flattened.sol\":12590:12607  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":23044:23070  initialOwner == address(0) */\n  dup2\n  and\n    /* \"indentity_test_3_flattened.sol\":23040:23135  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"indentity_test_3_flattened.sol\":23093:23124  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"indentity_test_3_flattened.sol\":23121:23122  0 */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":23093:23124  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"indentity_test_3_flattened.sol\":23093:23124  OwnableInvalidOwner(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"indentity_test_3_flattened.sol\":23040:23135  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"indentity_test_3_flattened.sol\":23144:23176  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"indentity_test_3_flattened.sol\":23163:23175  initialOwner */\n  dup2\n    /* \"indentity_test_3_flattened.sol\":23144:23162  _transferOwnership */\n  tag_17\n    /* \"indentity_test_3_flattened.sol\":23144:23176  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"indentity_test_3_flattened.sol\":26622:26623  1 */\n  0x01\n    /* \"indentity_test_3_flattened.sol\":26727:26734  _status */\n  0x06\n    /* \"indentity_test_3_flattened.sol\":26727:26749  _status = _NOT_ENTERED */\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29162:29179  encouragementFund */\n  0x07\n    /* \"indentity_test_3_flattened.sol\":29162:29200  encouragementFund = _encouragementFund */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup9\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29210:29223  emergencyFund */\n  0x08\n    /* \"indentity_test_3_flattened.sol\":29210:29240  emergencyFund = _emergencyFund */\n  dup1\n  sload\n  dup3\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29250:29265  marketingWallet */\n  0x09\n    /* \"indentity_test_3_flattened.sol\":29250:29284  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29294:29307  stakingWallet */\n  0x0a\n    /* \"indentity_test_3_flattened.sol\":29294:29324  stakingWallet = _stakingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup6\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29334:29345  uniswapPair */\n  0x0b\n    /* \"indentity_test_3_flattened.sol\":29334:29367  uniswapPair = _initialUniswapPair */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  dup4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":29378:29411  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_20\n    /* \"indentity_test_3_flattened.sol\":29384:29394  msg.sender */\n  caller\n    /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n  0x01a784379d99db42000000\n    /* \"indentity_test_3_flattened.sol\":29378:29383  _mint */\n  tag_21\n    /* \"indentity_test_3_flattened.sol\":29378:29411  _mint(msg.sender, INITIAL_SUPPLY) */\n  jump\t// in\ntag_20:\n  pop\n  pop\n    /* \"indentity_test_3_flattened.sol\":29440:29450  msg.sender */\n  caller\n    /* \"indentity_test_3_flattened.sol\":29421:29451  isExcludedFromFees[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"indentity_test_3_flattened.sol\":29421:29439  isExcludedFromFees */\n  0x0c\n    /* \"indentity_test_3_flattened.sol\":29421:29451  isExcludedFromFees[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"indentity_test_3_flattened.sol\":29421:29458  isExcludedFromFees[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"indentity_test_3_flattened.sol\":29454:29458  true */\n  0x01\n    /* \"indentity_test_3_flattened.sol\":29421:29458  isExcludedFromFees[msg.sender] = true */\n  or\n  swap1\n  sstore\n  pop\n    /* \"indentity_test_3_flattened.sol\":28095:32507  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n  tag_47\n  swap2\n  pop\n  pop\n  jump\n    /* \"indentity_test_3_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":24791:24808  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n  swap2\n  and\n  swap2\n    /* \"indentity_test_3_flattened.sol\":24791:24808  _owner = newOwner */\n  swap1\n    /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n  dup3\n  swap1\n    /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"indentity_test_3_flattened.sol\":24756:24772  address oldOwner */\n  0x00\n  swap1\n    /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"indentity_test_3_flattened.sol\":24746:24870  {... */\n  pop\n    /* \"indentity_test_3_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"indentity_test_3_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":18428:18449  account == address(0) */\n  dup3\n  and\n    /* \"indentity_test_3_flattened.sol\":18424:18515  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"indentity_test_3_flattened.sol\":18472:18504  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"indentity_test_3_flattened.sol\":18501:18502  0 */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":18472:18504  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"indentity_test_3_flattened.sol\":18472:18504  ERC20InvalidReceiver(address(0)) */\n  tag_14\n    /* \"#utility.yul\":3392:3595   */\n  jump\n    /* \"indentity_test_3_flattened.sol\":18424:18515  if (account == address(0)) {... */\ntag_25:\n    /* \"indentity_test_3_flattened.sol\":18524:18559  _update(address(0), account, value) */\n  tag_27\n    /* \"indentity_test_3_flattened.sol\":18540:18541  0 */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":18544:18551  account */\n  dup4\n    /* \"indentity_test_3_flattened.sol\":18553:18558  value */\n  dup4\n    /* \"indentity_test_3_flattened.sol\":18524:18531  _update */\n  tag_28\n    /* \"indentity_test_3_flattened.sol\":18524:18559  _update(address(0), account, value) */\n  jump\t// in\ntag_27:\n    /* \"indentity_test_3_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"indentity_test_3_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":16997:17015  from == address(0) */\n  dup4\n  and\n    /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"indentity_test_3_flattened.sol\":17149:17154  value */\n  dup1\n    /* \"indentity_test_3_flattened.sol\":17133:17145  _totalSupply */\n  0x02\n  0x00\n    /* \"indentity_test_3_flattened.sol\":17133:17154  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\n  tag_33\n  swap1\n  pop\n  jump\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17207:17222  _balances[from] */\n  dup4\n  and\n    /* \"indentity_test_3_flattened.sol\":17185:17204  uint256 fromBalance */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":17207:17222  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"indentity_test_3_flattened.sol\":17240:17259  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"indentity_test_3_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4047:4079   */\n  dup6\n  and\n    /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4029:4080   */\n  mstore\n    /* \"#utility.yul\":4096:4114   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4089:4123   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4139:4157   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4132:4166   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4002:4020   */\n  0x64\n  add\n    /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":3827:4172   */\n  jump\n    /* \"indentity_test_3_flattened.sol\":17236:17351  if (fromBalance < value) {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17471:17486  _balances[from] */\n  dup5\n  and\n    /* \"indentity_test_3_flattened.sol\":17471:17480  _balances */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":17471:17486  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"indentity_test_3_flattened.sol\":17489:17508  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"indentity_test_3_flattened.sol\":17471:17508  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17547:17563  to == address(0) */\n  dup3\n  and\n    /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"indentity_test_3_flattened.sol\":17710:17722  _totalSupply */\n  0x02\n    /* \"indentity_test_3_flattened.sol\":17710:17731  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17921:17934  _balances[to] */\n  dup3\n  and\n    /* \"indentity_test_3_flattened.sol\":17921:17930  _balances */\n  0x00\n    /* \"indentity_test_3_flattened.sol\":17921:17934  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"indentity_test_3_flattened.sol\":17921:17943  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\ntag_38:\n    /* \"indentity_test_3_flattened.sol\":17998:18000  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  and\n    /* \"indentity_test_3_flattened.sol\":17992:17996  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"indentity_test_3_flattened.sol\":18002:18007  value */\n  dup4\n    /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n    /* \"#utility.yul\":4323:4348   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4311:4313   */\n  0x20\n    /* \"#utility.yul\":4296:4314   */\n  add\n  swap1\n    /* \"#utility.yul\":4177:4354   */\n  jump\n    /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"indentity_test_3_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_41:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_49:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_51:\n    /* \"#utility.yul\":427:467   */\n  tag_52\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_41\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_53\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_41\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_54\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_55\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_41\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_56\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_41\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":751:878   */\ntag_42:\n    /* \"#utility.yul\":812:822   */\n  0x4e487b71\n    /* \"#utility.yul\":807:810   */\n  0xe0\n    /* \"#utility.yul\":803:823   */\n  shl\n    /* \"#utility.yul\":800:801   */\n  0x00\n    /* \"#utility.yul\":793:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":883:1263   */\ntag_43:\n    /* \"#utility.yul\":962:963   */\n  0x01\n    /* \"#utility.yul\":958:970   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1005:1017   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1026:1087   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1080:1084   */\n  0x7f\n    /* \"#utility.yul\":1072:1078   */\n  dup3\n    /* \"#utility.yul\":1068:1085   */\n  and\n    /* \"#utility.yul\":1058:1085   */\n  swap2\n  pop\n    /* \"#utility.yul\":1026:1087   */\ntag_59:\n    /* \"#utility.yul\":1133:1135   */\n  0x20\n    /* \"#utility.yul\":1125:1131   */\n  dup3\n    /* \"#utility.yul\":1122:1136   */\n  lt\n    /* \"#utility.yul\":1102:1120   */\n  dup2\n    /* \"#utility.yul\":1099:1137   */\n  sub\n    /* \"#utility.yul\":1096:1257   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1179:1189   */\n  0x4e487b71\n    /* \"#utility.yul\":1174:1177   */\n  0xe0\n    /* \"#utility.yul\":1170:1190   */\n  shl\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1160:1191   */\n  mstore\n    /* \"#utility.yul\":1214:1218   */\n  0x22\n    /* \"#utility.yul\":1211:1212   */\n  0x04\n    /* \"#utility.yul\":1204:1219   */\n  mstore\n    /* \"#utility.yul\":1242:1246   */\n  0x24\n    /* \"#utility.yul\":1239:1240   */\n  0x00\n    /* \"#utility.yul\":1232:1247   */\n  revert\n    /* \"#utility.yul\":1096:1257   */\ntag_60:\n  pop\n    /* \"#utility.yul\":883:1263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1912   */\ntag_45:\n    /* \"#utility.yul\":1496:1498   */\n  0x1f\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1488:1499   */\n  gt\n    /* \"#utility.yul\":1485:1906   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1532:1537   */\n  dup1\n    /* \"#utility.yul\":1529:1530   */\n  0x00\n    /* \"#utility.yul\":1522:1538   */\n  mstore\n    /* \"#utility.yul\":1576:1580   */\n  0x20\n    /* \"#utility.yul\":1573:1574   */\n  0x00\n    /* \"#utility.yul\":1563:1581   */\n  keccak256\n    /* \"#utility.yul\":1646:1648   */\n  0x1f\n    /* \"#utility.yul\":1634:1644   */\n  dup5\n    /* \"#utility.yul\":1630:1649   */\n  add\n    /* \"#utility.yul\":1627:1628   */\n  0x05\n    /* \"#utility.yul\":1623:1650   */\n  shr\n    /* \"#utility.yul\":1617:1621   */\n  dup2\n    /* \"#utility.yul\":1613:1651   */\n  add\n    /* \"#utility.yul\":1682:1686   */\n  0x20\n    /* \"#utility.yul\":1670:1680   */\n  dup6\n    /* \"#utility.yul\":1667:1687   */\n  lt\n    /* \"#utility.yul\":1664:1711   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":1705:1709   */\n  dup1\n    /* \"#utility.yul\":1664:1711   */\ntag_64:\n    /* \"#utility.yul\":1760:1762   */\n  0x1f\n    /* \"#utility.yul\":1755:1758   */\n  dup5\n    /* \"#utility.yul\":1751:1763   */\n  add\n    /* \"#utility.yul\":1748:1749   */\n  0x05\n    /* \"#utility.yul\":1744:1764   */\n  shr\n    /* \"#utility.yul\":1738:1742   */\n  dup3\n    /* \"#utility.yul\":1734:1765   */\n  add\n    /* \"#utility.yul\":1724:1765   */\n  swap2\n  pop\n    /* \"#utility.yul\":1815:1896   */\ntag_65:\n    /* \"#utility.yul\":1833:1835   */\n  dup2\n    /* \"#utility.yul\":1826:1831   */\n  dup2\n    /* \"#utility.yul\":1823:1836   */\n  lt\n    /* \"#utility.yul\":1815:1896   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1878:1894   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1859:1860   */\n  0x01\n    /* \"#utility.yul\":1848:1861   */\n  add\n    /* \"#utility.yul\":1815:1896   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1819:1822   */\n  pop\n  pop\n    /* \"#utility.yul\":1485:1906   */\ntag_63:\n    /* \"#utility.yul\":1394:1912   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2088:3387   */\ntag_10:\n    /* \"#utility.yul\":2208:2218   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2230:2260   */\n  dup2\n  gt\n    /* \"#utility.yul\":2227:2283   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2263:2281   */\n  tag_71\n  tag_42\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2292:2389   */\n  tag_72\n    /* \"#utility.yul\":2382:2388   */\n  dup2\n    /* \"#utility.yul\":2342:2380   */\n  tag_73\n    /* \"#utility.yul\":2374:2378   */\n  dup5\n    /* \"#utility.yul\":2368:2379   */\n  sload\n    /* \"#utility.yul\":2342:2380   */\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2336:2340   */\n  dup5\n    /* \"#utility.yul\":2292:2389   */\n  tag_45\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2438:2442   */\n  0x20\n    /* \"#utility.yul\":2469:2471   */\n  0x1f\n    /* \"#utility.yul\":2458:2472   */\n  dup3\n  gt\n    /* \"#utility.yul\":2486:2487   */\n  0x01\n    /* \"#utility.yul\":2481:3130   */\n  dup2\n  eq\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3174:3175   */\n  0x00\n    /* \"#utility.yul\":3191:3197   */\n  dup4\n    /* \"#utility.yul\":3188:3277   */\n  iszero\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":3243:3262   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3237:3263   */\n  mload\n    /* \"#utility.yul\":3188:3277   */\ntag_76:\n  not(0x00)\n    /* \"#utility.yul\":2045:2046   */\n  0x03\n    /* \"#utility.yul\":2041:2052   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2037:2061   */\n  shr\n    /* \"#utility.yul\":2033:2062   */\n  not\n    /* \"#utility.yul\":2023:2063   */\n  and\n    /* \"#utility.yul\":2069:2070   */\n  0x01\n    /* \"#utility.yul\":2065:2076   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2020:2077   */\n  or\n    /* \"#utility.yul\":3290:3371   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2451:3381   */\n  jump(tag_67)\n    /* \"#utility.yul\":2481:3130   */\ntag_75:\n    /* \"#utility.yul\":1341:1342   */\n  0x00\n    /* \"#utility.yul\":1334:1348   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1378:1382   */\n  0x20\n    /* \"#utility.yul\":1365:1383   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2517:2537   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2635:2857   */\ntag_79:\n    /* \"#utility.yul\":2649:2656   */\n  dup3\n    /* \"#utility.yul\":2646:2647   */\n  dup2\n    /* \"#utility.yul\":2643:2657   */\n  lt\n    /* \"#utility.yul\":2635:2857   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2731:2750   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2725:2751   */\n  mload\n    /* \"#utility.yul\":2710:2752   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2838:2842   */\n  0x20\n    /* \"#utility.yul\":2823:2843   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2791:2792   */\n  0x01\n    /* \"#utility.yul\":2779:2793   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2665:2677   */\n  add\n    /* \"#utility.yul\":2635:2857   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":2639:2642   */\n  pop\n    /* \"#utility.yul\":2885:2891   */\n  dup5\n    /* \"#utility.yul\":2876:2883   */\n  dup3\n    /* \"#utility.yul\":2873:2892   */\n  lt\n    /* \"#utility.yul\":2870:3071   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2946:2965   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2940:2966   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3029:3030   */\n  0x03\n    /* \"#utility.yul\":3025:3039   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3041:3044   */\n  0xf8\n    /* \"#utility.yul\":3021:3045   */\n  and\n    /* \"#utility.yul\":3017:3054   */\n  shr\n    /* \"#utility.yul\":3013:3055   */\n  not\n    /* \"#utility.yul\":2998:3056   */\n  and\n    /* \"#utility.yul\":2983:3057   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2870:3071   */\ntag_82:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3117:3118   */\n  0x01\n    /* \"#utility.yul\":3101:3115   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3097:3119   */\n  add\n    /* \"#utility.yul\":3084:3120   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2088:3387   */\n  jump\t// out\n    /* \"#utility.yul\":3600:3822   */\ntag_32:\n    /* \"#utility.yul\":3665:3674   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3686:3696   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3683:3816   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3738:3748   */\n  0x4e487b71\n    /* \"#utility.yul\":3733:3736   */\n  0xe0\n    /* \"#utility.yul\":3729:3749   */\n  shl\n    /* \"#utility.yul\":3726:3727   */\n  0x00\n    /* \"#utility.yul\":3719:3750   */\n  mstore\n    /* \"#utility.yul\":3773:3777   */\n  0x11\n    /* \"#utility.yul\":3770:3771   */\n  0x04\n    /* \"#utility.yul\":3763:3778   */\n  mstore\n    /* \"#utility.yul\":3801:3805   */\n  0x24\n    /* \"#utility.yul\":3798:3799   */\n  0x00\n    /* \"#utility.yul\":3791:3806   */\n  revert\n    /* \"#utility.yul\":3683:3816   */\ntag_85:\n    /* \"#utility.yul\":3600:3822   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4177:4354   */\ntag_47:\n    /* \"indentity_test_3_flattened.sol\":28095:32507  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"indentity_test_3_flattened.sol\":28095:32507  contract XEAMToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc12b7c4e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdf7787a4\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf3b2db3f\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xc12b7c4e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xcc859378\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x753cafc3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x4fbee193\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x4fbee193\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x52a6a9ec\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x54ad8aee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36b4134a\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x02af37bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06ee6ad8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"indentity_test_3_flattened.sol\":28599:28635  uint256 public constant BUY_TAX = 10 */\n    tag_3:\n      tag_34\n        /* \"indentity_test_3_flattened.sol\":28633:28635  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":28599:28635  uint256 public constant BUY_TAX = 10 */\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"indentity_test_3_flattened.sol\":28599:28635  uint256 public constant BUY_TAX = 10 */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"indentity_test_3_flattened.sol\":28480:28508  address public stakingWallet */\n    tag_4:\n      sload(0x0a)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"indentity_test_3_flattened.sol\":28480:28508  address public stakingWallet */\n      tag_36\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1475:1489   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1468:1490   */\n      iszero\n        /* \"#utility.yul\":1450:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"indentity_test_3_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_36\n        /* \"#utility.yul\":1310:1497   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":13749:13846  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"indentity_test_3_flattened.sol\":13827:13839  _totalSupply */\n      sload(0x02)\n        /* \"indentity_test_3_flattened.sol\":13749:13846  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_34)\n        /* \"indentity_test_3_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":28155:28214  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n    tag_9:\n      tag_34\n        /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_3_flattened.sol\":28155:28214  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"indentity_test_3_flattened.sol\":13680:13682  18 */\n      0x12\n        /* \"#utility.yul\":2023:2059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"indentity_test_3_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n      tag_36\n        /* \"#utility.yul\":1881:2065   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":28684:28721  uint256 public constant SLIPPAGE = 13 */\n    tag_11:\n      tag_34\n        /* \"indentity_test_3_flattened.sol\":28719:28721  13 */\n      0x0d\n        /* \"indentity_test_3_flattened.sol\":28684:28721  uint256 public constant SLIPPAGE = 13 */\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":28751:28801  mapping(address => bool) public isExcludedFromFees */\n    tag_12:\n      tag_46\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":28372:28404  address public encouragementFund */\n    tag_13:\n      sload(0x07)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":28641:28678  uint256 public constant SELL_TAX = 12 */\n    tag_14:\n      tag_34\n        /* \"indentity_test_3_flattened.sol\":28676:28678  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":28641:28678  uint256 public constant SELL_TAX = 12 */\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_34\n      tag_82\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":13995:14013  _balances[account] */\n      and\n        /* \"indentity_test_3_flattened.sol\":13969:13976  uint256 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":13995:14013  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"indentity_test_3_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"indentity_test_3_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"indentity_test_3_flattened.sol\":32033:32196  function updateExcludedAccountStatus(address account, bool excluded)... */\n    tag_17:\n      tag_85\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":28444:28474  address public marketingWallet */\n    tag_18:\n      sload(0x09)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":23409:23494  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"indentity_test_3_flattened.sol\":23481:23487  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"indentity_test_3_flattened.sol\":23409:23494  function owner() public view virtual returns (address) {... */\n      jump(tag_38)\n        /* \"indentity_test_3_flattened.sol\":12881:12974  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_42\n      tag_98\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":29471:29940  function transfer(address recipient, uint256 amount)... */\n    tag_21:\n      tag_46\n      tag_101\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":32287:32505  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_22:\n      tag_85\n      tag_105\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":28514:28540  address public uniswapPair */\n    tag_23:\n      sload(0x0b)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":28410:28438  address public emergencyFund */\n    tag_24:\n      sload(0x08)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"indentity_test_3_flattened.sol\":14451:14591  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_34\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"indentity_test_3_flattened.sol\":14531:14538  uint256 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":14557:14568  _allowances */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":14557:14584  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"indentity_test_3_flattened.sol\":14451:14591  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"indentity_test_3_flattened.sol\":28220:28283  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_26:\n      tag_34\n      tag_119\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_85\n      tag_122\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":28295:28356  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_28:\n      tag_34\n      tag_125\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"indentity_test_3_flattened.sol\":12724:12737  string memory */\n      0x60\n        /* \"indentity_test_3_flattened.sol\":12756:12761  _name */\n      0x03\n        /* \"indentity_test_3_flattened.sol\":12749:12761  return _name */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_129\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"indentity_test_3_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"indentity_test_3_flattened.sol\":14971:14975  bool */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":15025:15056  _approve(owner, spender, value) */\n      tag_137\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      dup2\n        /* \"indentity_test_3_flattened.sol\":15041:15048  spender */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15050:15055  value */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15025:15033  _approve */\n      tag_138\n        /* \"indentity_test_3_flattened.sol\":15025:15056  _approve(owner, spender, value) */\n      jump\t// in\n    tag_137:\n        /* \"indentity_test_3_flattened.sol\":15073:15077  true */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":15066:15077  return true */\n      swap2\n      pop\n      pop\n        /* \"indentity_test_3_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_134:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_58:\n        /* \"indentity_test_3_flattened.sol\":15763:15767  bool */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":15819:15856  _spendAllowance(from, spender, value) */\n      tag_142\n        /* \"indentity_test_3_flattened.sol\":15835:15839  from */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      dup3\n        /* \"indentity_test_3_flattened.sol\":15850:15855  value */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15819:15834  _spendAllowance */\n      tag_143\n        /* \"indentity_test_3_flattened.sol\":15819:15856  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"indentity_test_3_flattened.sol\":15866:15892  _transfer(from, to, value) */\n      tag_144\n        /* \"indentity_test_3_flattened.sol\":15876:15880  from */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15882:15884  to */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15886:15891  value */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":15866:15875  _transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":15866:15892  _transfer(from, to, value) */\n      jump\t// in\n    tag_144:\n      pop\n        /* \"indentity_test_3_flattened.sol\":15909:15913  true */\n      0x01\n      swap5\n        /* \"indentity_test_3_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      tag_149\n        /* \"indentity_test_3_flattened.sol\":23302:23313  _checkOwner */\n      tag_150\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"indentity_test_3_flattened.sol\":24128:24158  _transferOwnership(address(0)) */\n      tag_152\n        /* \"indentity_test_3_flattened.sol\":24155:24156  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":24128:24146  _transferOwnership */\n      tag_153\n        /* \"indentity_test_3_flattened.sol\":24128:24158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_152:\n        /* \"indentity_test_3_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":32033:32196  function updateExcludedAccountStatus(address account, bool excluded)... */\n    tag_90:\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      tag_155\n        /* \"indentity_test_3_flattened.sol\":23302:23313  _checkOwner */\n      tag_150\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":32151:32178  isExcludedFromFees[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":32151:32169  isExcludedFromFees */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":32151:32178  isExcludedFromFees[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":32151:32189  isExcludedFromFees[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"indentity_test_3_flattened.sol\":32033:32196  function updateExcludedAccountStatus(address account, bool excluded)... */\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":12881:12974  function symbol() public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"indentity_test_3_flattened.sol\":12928:12941  string memory */\n      0x60\n        /* \"indentity_test_3_flattened.sol\":12960:12967  _symbol */\n      0x04\n        /* \"indentity_test_3_flattened.sol\":12953:12967  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":29471:29940  function transfer(address recipient, uint256 amount)... */\n    tag_102:\n        /* \"indentity_test_3_flattened.sol\":29617:29627  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":29573:29577  bool */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":29598:29628  isExcludedFromFees[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":29598:29616  isExcludedFromFees */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":29598:29628  isExcludedFromFees[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"indentity_test_3_flattened.sol\":29593:29853  if (!isExcludedFromFees[msg.sender]) {... */\n      tag_178\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":28280:28283  100 */\n      0x64\n        /* \"indentity_test_3_flattened.sol\":28258:28276  INITIAL_SUPPLY * 1 */\n      tag_166\n        /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_3_flattened.sol\":28275:28276  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":28258:28276  INITIAL_SUPPLY * 1 */\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"indentity_test_3_flattened.sol\":28257:28283  (INITIAL_SUPPLY * 1) / 100 */\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"indentity_test_3_flattened.sol\":29692:29698  amount */\n      dup3\n        /* \"indentity_test_3_flattened.sol\":29669:29689  balanceOf(recipient) */\n      tag_170\n        /* \"indentity_test_3_flattened.sol\":29679:29688  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":13995:14013  _balances[account] */\n      and\n        /* \"indentity_test_3_flattened.sol\":13969:13976  uint256 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":13995:14013  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"indentity_test_3_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"indentity_test_3_flattened.sol\":29669:29689  balanceOf(recipient) */\n    tag_170:\n        /* \"indentity_test_3_flattened.sol\":29669:29698  balanceOf(recipient) + amount */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"indentity_test_3_flattened.sol\":29669:29712  balanceOf(recipient) + amount <= MAX_WALLET */\n      gt\n      iszero\n        /* \"indentity_test_3_flattened.sol\":29644:29770  require(... */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4122:4124   */\n      0x20\n        /* \"indentity_test_3_flattened.sol\":29644:29770  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4104:4125   */\n      mstore\n        /* \"#utility.yul\":4161:4163   */\n      0x18\n        /* \"#utility.yul\":4141:4159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4134:4164   */\n      mstore\n        /* \"#utility.yul\":4200:4226   */\n      0x45786365656473206d61782077616c6c6574206c696d69740000000000000000\n        /* \"#utility.yul\":4180:4198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4173:4227   */\n      mstore\n        /* \"#utility.yul\":4244:4262   */\n      0x64\n      add\n        /* \"indentity_test_3_flattened.sol\":29644:29770  require(... */\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"indentity_test_3_flattened.sol\":28351:28356  10000 */\n      0x2710\n        /* \"indentity_test_3_flattened.sol\":28329:28347  INITIAL_SUPPLY * 5 */\n      tag_176\n        /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_3_flattened.sol\":28346:28347  5 */\n      0x05\n        /* \"indentity_test_3_flattened.sol\":28329:28347  INITIAL_SUPPLY * 5 */\n      tag_167\n      jump\t// in\n    tag_176:\n        /* \"indentity_test_3_flattened.sol\":28328:28356  (INITIAL_SUPPLY * 5) / 10000 */\n      tag_177\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_177:\n        /* \"indentity_test_3_flattened.sol\":29792:29798  amount */\n      dup3\n        /* \"indentity_test_3_flattened.sol\":29792:29808  amount <= MAX_TX */\n      gt\n      iszero\n        /* \"indentity_test_3_flattened.sol\":29784:29842  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x20\n        /* \"indentity_test_3_flattened.sol\":29784:29842  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4457:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4516   */\n      0x1d\n        /* \"#utility.yul\":4494:4512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4487:4517   */\n      mstore\n        /* \"#utility.yul\":4553:4584   */\n      0x45786365656473206d6178207472616e73616374696f6e206c696d6974000000\n        /* \"#utility.yul\":4533:4551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4526:4585   */\n      mstore\n        /* \"#utility.yul\":4602:4620   */\n      0x64\n      add\n        /* \"indentity_test_3_flattened.sol\":29784:29842  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_174\n        /* \"#utility.yul\":4273:4626   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":29784:29842  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n    tag_178:\n        /* \"indentity_test_3_flattened.sol\":29863:29912  _transferWithTaxes(msg.sender, recipient, amount) */\n      tag_181\n        /* \"indentity_test_3_flattened.sol\":29882:29892  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":29894:29903  recipient */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":29905:29911  amount */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":29863:29881  _transferWithTaxes */\n      tag_182\n        /* \"indentity_test_3_flattened.sol\":29863:29912  _transferWithTaxes(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_181:\n      pop\n        /* \"indentity_test_3_flattened.sol\":29929:29933  true */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":29471:29940  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":32287:32505  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_106:\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      tag_184\n        /* \"indentity_test_3_flattened.sol\":23302:23313  _checkOwner */\n      tag_150\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":32368:32389  newPair != address(0) */\n      dup2\n      and\n        /* \"indentity_test_3_flattened.sol\":32360:32425  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x20\n        /* \"indentity_test_3_flattened.sol\":32360:32425  require(newPair != address(0), \"New pair address cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4815:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4874   */\n      0x1f\n        /* \"#utility.yul\":4852:4870   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4845:4875   */\n      mstore\n        /* \"#utility.yul\":4911:4944   */\n      0x4e6577207061697220616464726573732063616e6e6f74206265207a65726f00\n        /* \"#utility.yul\":4891:4909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4884:4945   */\n      mstore\n        /* \"#utility.yul\":4962:4980   */\n      0x64\n      add\n        /* \"indentity_test_3_flattened.sol\":32360:32425  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_174\n        /* \"#utility.yul\":4631:4986   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":32360:32425  require(newPair != address(0), \"New pair address cannot be zero\") */\n    tag_186:\n        /* \"indentity_test_3_flattened.sol\":32435:32446  uniswapPair */\n      0x0b\n        /* \"indentity_test_3_flattened.sol\":32435:32456  uniswapPair = newPair */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"indentity_test_3_flattened.sol\":32471:32498  UniswapPairUpdated(newPair) */\n      mload(0x40)\n        /* \"#utility.yul\":342:393   */\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":32471:32498  UniswapPairUpdated(newPair) */\n      0xdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344\n      swap1\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"indentity_test_3_flattened.sol\":32471:32498  UniswapPairUpdated(newPair) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":32287:32505  function updateUniswapPair(address newPair) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":28220:28283  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_119:\n        /* \"indentity_test_3_flattened.sol\":28280:28283  100 */\n      0x64\n        /* \"indentity_test_3_flattened.sol\":28258:28276  INITIAL_SUPPLY * 1 */\n      tag_191\n        /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_3_flattened.sol\":28275:28276  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":28258:28276  INITIAL_SUPPLY * 1 */\n      tag_167\n      jump\t// in\n    tag_191:\n        /* \"indentity_test_3_flattened.sol\":28257:28283  (INITIAL_SUPPLY * 1) / 100 */\n      tag_192\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_192:\n        /* \"indentity_test_3_flattened.sol\":28220:28283  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n      dup2\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_123:\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      tag_194\n        /* \"indentity_test_3_flattened.sol\":23302:23313  _checkOwner */\n      tag_150\n        /* \"indentity_test_3_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":24398:24420  newOwner == address(0) */\n      dup2\n      and\n        /* \"indentity_test_3_flattened.sol\":24394:24485  if (newOwner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":24443:24474  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":24471:24472  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":24443:24474  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":24443:24474  OwnableInvalidOwner(address(0)) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":24394:24485  if (newOwner == address(0)) {... */\n    tag_196:\n        /* \"indentity_test_3_flattened.sol\":24494:24522  _transferOwnership(newOwner) */\n      tag_198\n        /* \"indentity_test_3_flattened.sol\":24513:24521  newOwner */\n      dup2\n        /* \"indentity_test_3_flattened.sol\":24494:24512  _transferOwnership */\n      tag_153\n        /* \"indentity_test_3_flattened.sol\":24494:24522  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_198:\n        /* \"indentity_test_3_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":28295:28356  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_125:\n        /* \"indentity_test_3_flattened.sol\":28351:28356  10000 */\n      0x2710\n        /* \"indentity_test_3_flattened.sol\":28329:28347  INITIAL_SUPPLY * 5 */\n      tag_191\n        /* \"indentity_test_3_flattened.sol\":28196:28214  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"indentity_test_3_flattened.sol\":28346:28347  5 */\n      0x05\n        /* \"indentity_test_3_flattened.sol\":28329:28347  INITIAL_SUPPLY * 5 */\n      tag_167\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":19626:19754  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_138:\n        /* \"indentity_test_3_flattened.sol\":19710:19747  _approve(owner, spender, value, true) */\n      tag_203\n        /* \"indentity_test_3_flattened.sol\":19719:19724  owner */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":19726:19733  spender */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":19735:19740  value */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":19742:19746  true */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":19710:19718  _approve */\n      tag_204\n        /* \"indentity_test_3_flattened.sol\":19710:19747  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_203:\n        /* \"indentity_test_3_flattened.sol\":19626:19754  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":21315:21791  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"indentity_test_3_flattened.sol\":21414:21438  uint256 currentAllowance */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":14557:14568  _allowances */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":14557:14575  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":14557:14584  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"indentity_test_3_flattened.sol\":21480:21516  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"indentity_test_3_flattened.sol\":21476:21785  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":21555:21560  value */\n      dup2\n        /* \"indentity_test_3_flattened.sol\":21536:21552  currentAllowance */\n      dup2\n        /* \"indentity_test_3_flattened.sol\":21536:21560  currentAllowance < value */\n      lt\n        /* \"indentity_test_3_flattened.sol\":21532:21662  if (currentAllowance < value) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":21587:21647  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5211:5243   */\n      dup5\n      and\n        /* \"indentity_test_3_flattened.sol\":21587:21647  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5193:5244   */\n      mstore\n        /* \"#utility.yul\":5260:5278   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5253:5287   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5303:5321   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5296:5330   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5166:5184   */\n      0x64\n      add\n        /* \"indentity_test_3_flattened.sol\":21587:21647  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_174\n        /* \"#utility.yul\":4991:5336   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":21532:21662  if (currentAllowance < value) {... */\n    tag_208:\n        /* \"indentity_test_3_flattened.sol\":21703:21760  _approve(owner, spender, currentAllowance - value, false) */\n      tag_211\n        /* \"indentity_test_3_flattened.sol\":21712:21717  owner */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":21719:21726  spender */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":21747:21752  value */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":21728:21744  currentAllowance */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":21728:21752  currentAllowance - value */\n      sub\n        /* \"indentity_test_3_flattened.sol\":21754:21759  false */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":21703:21711  _approve */\n      tag_204\n        /* \"indentity_test_3_flattened.sol\":21703:21760  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_211:\n        /* \"indentity_test_3_flattened.sol\":21404:21791  {... */\n      pop\n        /* \"indentity_test_3_flattened.sol\":21315:21791  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":16293:16593  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":16376:16394  from == address(0) */\n      dup4\n      and\n        /* \"indentity_test_3_flattened.sol\":16372:16458  if (from == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":16417:16447  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":16444:16445  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":16417:16447  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":16417:16447  ERC20InvalidSender(address(0)) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":16372:16458  if (from == address(0)) {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":16471:16487  to == address(0) */\n      dup3\n      and\n        /* \"indentity_test_3_flattened.sol\":16467:16553  if (to == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":16510:16542  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":16539:16540  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":16510:16542  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":16510:16542  ERC20InvalidReceiver(address(0)) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":16467:16553  if (to == address(0)) {... */\n    tag_215:\n        /* \"indentity_test_3_flattened.sol\":16562:16586  _update(from, to, value) */\n      tag_203\n        /* \"indentity_test_3_flattened.sol\":16570:16574  from */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":16576:16578  to */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":16580:16585  value */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":16562:16569  _update */\n      tag_218\n        /* \"indentity_test_3_flattened.sol\":16562:16586  _update(from, to, value) */\n      jump\t// in\n        /* \"indentity_test_3_flattened.sol\":23567:23729  function _checkOwner() internal view virtual {... */\n    tag_150:\n        /* \"indentity_test_3_flattened.sol\":23481:23487  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":23626:23649  owner() != _msgSender() */\n      eq\n        /* \"indentity_test_3_flattened.sol\":23622:23723  if (owner() != _msgSender()) {... */\n      tag_152\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":23672:23712  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"indentity_test_3_flattened.sol\":23672:23712  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":23672:23712  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_153:\n        /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":24791:24808  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n      swap2\n      and\n      swap2\n        /* \"indentity_test_3_flattened.sol\":24791:24808  _owner = newOwner */\n      swap1\n        /* \"indentity_test_3_flattened.sol\":24775:24781  _owner */\n      dup3\n      swap1\n        /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"indentity_test_3_flattened.sol\":24756:24772  address oldOwner */\n      0x00\n      swap1\n        /* \"indentity_test_3_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"indentity_test_3_flattened.sol\":24746:24870  {... */\n      pop\n        /* \"indentity_test_3_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":29946:32027  function _transferWithTaxes(... */\n    tag_182:\n        /* \"indentity_test_3_flattened.sol\":30319:30330  uniswapPair */\n      sload(0x0b)\n        /* \"indentity_test_3_flattened.sol\":30074:30085  uint256 tax */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":30319:30330  uniswapPair */\n      swap1\n      dup2\n      and\n        /* \"indentity_test_3_flattened.sol\":30306:30330  recipient == uniswapPair */\n      swap1\n      dup10\n      and\n      sub\n        /* \"indentity_test_3_flattened.sol\":30302:31226  if (recipient == uniswapPair) {... */\n      tag_227\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":30416:30419  100 */\n      0x64\n        /* \"indentity_test_3_flattened.sol\":30395:30412  amount * SELL_TAX */\n      tag_228\n        /* \"indentity_test_3_flattened.sol\":28676:28678  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30395:30401  amount */\n      dup10\n        /* \"indentity_test_3_flattened.sol\":30395:30412  amount * SELL_TAX */\n      tag_167\n      jump\t// in\n    tag_228:\n        /* \"indentity_test_3_flattened.sol\":30394:30419  (amount * SELL_TAX) / 100 */\n      tag_229\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_229:\n        /* \"indentity_test_3_flattened.sol\":30388:30419  tax = (amount * SELL_TAX) / 100 */\n      swap6\n      pop\n        /* \"indentity_test_3_flattened.sol\":30455:30457  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30444:30451  tax * 4 */\n      tag_230\n        /* \"indentity_test_3_flattened.sol\":30388:30419  tax = (amount * SELL_TAX) / 100 */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30450:30451  4 */\n      0x04\n        /* \"indentity_test_3_flattened.sol\":30444:30451  tax * 4 */\n      tag_167\n      jump\t// in\n    tag_230:\n        /* \"indentity_test_3_flattened.sol\":30443:30457  (tax * 4) / 12 */\n      tag_231\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_231:\n        /* \"indentity_test_3_flattened.sol\":30433:30457  lpShare = (tax * 4) / 12 */\n      swap5\n      pop\n        /* \"indentity_test_3_flattened.sol\":30526:30528  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30515:30522  tax * 4 */\n      tag_232\n        /* \"indentity_test_3_flattened.sol\":30515:30518  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30521:30522  4 */\n      0x04\n        /* \"indentity_test_3_flattened.sol\":30515:30522  tax * 4 */\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"indentity_test_3_flattened.sol\":30514:30528  (tax * 4) / 12 */\n      tag_233\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_233:\n        /* \"indentity_test_3_flattened.sol\":30493:30528  encouragementShare = (tax * 4) / 12 */\n      swap4\n      pop\n        /* \"indentity_test_3_flattened.sol\":30600:30602  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30589:30596  tax * 1 */\n      tag_234\n        /* \"indentity_test_3_flattened.sol\":30589:30592  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30595:30596  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":30589:30596  tax * 1 */\n      tag_167\n      jump\t// in\n    tag_234:\n        /* \"indentity_test_3_flattened.sol\":30588:30602  (tax * 1) / 12 */\n      tag_235\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_235:\n        /* \"indentity_test_3_flattened.sol\":30571:30602  emergencyShare = (tax * 1) / 12 */\n      swap3\n      pop\n        /* \"indentity_test_3_flattened.sol\":30674:30676  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30663:30670  tax * 2 */\n      tag_236\n        /* \"indentity_test_3_flattened.sol\":30663:30666  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30669:30670  2 */\n      0x02\n        /* \"indentity_test_3_flattened.sol\":30663:30670  tax * 2 */\n      tag_167\n      jump\t// in\n    tag_236:\n        /* \"indentity_test_3_flattened.sol\":30662:30676  (tax * 2) / 12 */\n      tag_237\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_237:\n        /* \"indentity_test_3_flattened.sol\":30645:30676  marketingShare = (tax * 2) / 12 */\n      swap2\n      pop\n        /* \"indentity_test_3_flattened.sol\":30741:30743  12 */\n      0x0c\n        /* \"indentity_test_3_flattened.sol\":30730:30737  tax * 1 */\n      tag_238\n        /* \"indentity_test_3_flattened.sol\":30730:30733  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30736:30737  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":30730:30737  tax * 1 */\n      tag_167\n      jump\t// in\n    tag_238:\n        /* \"indentity_test_3_flattened.sol\":30729:30743  (tax * 1) / 12 */\n      tag_239\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_239:\n        /* \"indentity_test_3_flattened.sol\":30714:30743  stakingShare = (tax * 1) / 12 */\n      swap1\n      pop\n        /* \"indentity_test_3_flattened.sol\":30302:31226  if (recipient == uniswapPair) {... */\n      jump(tag_240)\n    tag_227:\n        /* \"indentity_test_3_flattened.sol\":30865:30868  100 */\n      0x64\n        /* \"indentity_test_3_flattened.sol\":30845:30861  amount * BUY_TAX */\n      tag_241\n        /* \"indentity_test_3_flattened.sol\":28633:28635  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":30845:30851  amount */\n      dup10\n        /* \"indentity_test_3_flattened.sol\":30845:30861  amount * BUY_TAX */\n      tag_167\n      jump\t// in\n    tag_241:\n        /* \"indentity_test_3_flattened.sol\":30844:30868  (amount * BUY_TAX) / 100 */\n      tag_242\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_242:\n        /* \"indentity_test_3_flattened.sol\":30838:30868  tax = (amount * BUY_TAX) / 100 */\n      swap6\n      pop\n        /* \"indentity_test_3_flattened.sol\":30904:30906  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":30893:30900  tax * 3 */\n      tag_243\n        /* \"indentity_test_3_flattened.sol\":30838:30868  tax = (amount * BUY_TAX) / 100 */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30899:30900  3 */\n      0x03\n        /* \"indentity_test_3_flattened.sol\":30893:30900  tax * 3 */\n      tag_167\n      jump\t// in\n    tag_243:\n        /* \"indentity_test_3_flattened.sol\":30892:30906  (tax * 3) / 10 */\n      tag_244\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_244:\n        /* \"indentity_test_3_flattened.sol\":30882:30906  lpShare = (tax * 3) / 10 */\n      swap5\n      pop\n        /* \"indentity_test_3_flattened.sol\":30975:30977  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":30964:30971  tax * 4 */\n      tag_245\n        /* \"indentity_test_3_flattened.sol\":30964:30967  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":30970:30971  4 */\n      0x04\n        /* \"indentity_test_3_flattened.sol\":30964:30971  tax * 4 */\n      tag_167\n      jump\t// in\n    tag_245:\n        /* \"indentity_test_3_flattened.sol\":30963:30977  (tax * 4) / 10 */\n      tag_246\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_246:\n        /* \"indentity_test_3_flattened.sol\":30942:30977  encouragementShare = (tax * 4) / 10 */\n      swap4\n      pop\n        /* \"indentity_test_3_flattened.sol\":31049:31051  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":31038:31045  tax * 1 */\n      tag_247\n        /* \"indentity_test_3_flattened.sol\":31038:31041  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":31044:31045  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":31038:31045  tax * 1 */\n      tag_167\n      jump\t// in\n    tag_247:\n        /* \"indentity_test_3_flattened.sol\":31037:31051  (tax * 1) / 10 */\n      tag_248\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_248:\n        /* \"indentity_test_3_flattened.sol\":31020:31051  emergencyShare = (tax * 1) / 10 */\n      swap3\n      pop\n        /* \"indentity_test_3_flattened.sol\":31123:31125  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":31112:31119  tax * 1 */\n      tag_249\n        /* \"indentity_test_3_flattened.sol\":31112:31115  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":31118:31119  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":31112:31119  tax * 1 */\n      tag_167\n      jump\t// in\n    tag_249:\n        /* \"indentity_test_3_flattened.sol\":31111:31125  (tax * 1) / 10 */\n      tag_250\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_250:\n        /* \"indentity_test_3_flattened.sol\":31094:31125  marketingShare = (tax * 1) / 10 */\n      swap2\n      pop\n        /* \"indentity_test_3_flattened.sol\":31190:31192  10 */\n      0x0a\n        /* \"indentity_test_3_flattened.sol\":31179:31186  tax * 1 */\n      tag_251\n        /* \"indentity_test_3_flattened.sol\":31179:31182  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":31185:31186  1 */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":31179:31186  tax * 1 */\n      tag_167\n      jump\t// in\n    tag_251:\n        /* \"indentity_test_3_flattened.sol\":31178:31192  (tax * 1) / 10 */\n      tag_252\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_252:\n        /* \"indentity_test_3_flattened.sol\":31163:31192  stakingShare = (tax * 1) / 10 */\n      swap1\n      pop\n        /* \"indentity_test_3_flattened.sol\":30302:31226  if (recipient == uniswapPair) {... */\n    tag_240:\n        /* \"indentity_test_3_flattened.sol\":31236:31253  uint256 netAmount */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":31256:31268  amount - tax */\n      tag_253\n        /* \"indentity_test_3_flattened.sol\":31265:31268  tax */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":31256:31262  amount */\n      dup10\n        /* \"indentity_test_3_flattened.sol\":31256:31268  amount - tax */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"indentity_test_3_flattened.sol\":31333:31350  encouragementFund */\n      sload(0x07)\n        /* \"indentity_test_3_flattened.sol\":31236:31268  uint256 netAmount = amount - tax */\n      swap1\n      swap2\n      pop\n        /* \"indentity_test_3_flattened.sol\":31309:31371  super._transfer(sender, encouragementFund, encouragementShare) */\n      tag_255\n      swap1\n        /* \"indentity_test_3_flattened.sol\":31325:31331  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":31333:31350  encouragementFund */\n      and\n        /* \"indentity_test_3_flattened.sol\":31352:31370  encouragementShare */\n      dup8\n        /* \"indentity_test_3_flattened.sol\":31309:31324  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31309:31371  super._transfer(sender, encouragementFund, encouragementShare) */\n      jump\t// in\n    tag_255:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":31401:31419  encouragementShare */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":31386:31442  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n      mload(0x40)\n      tag_256\n      swap2\n        /* \"#utility.yul\":5686:5711   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5747:5749   */\n      0x40\n        /* \"#utility.yul\":5742:5744   */\n      0x20\n        /* \"#utility.yul\":5727:5745   */\n      dup3\n      add\n        /* \"#utility.yul\":5720:5750   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5786:5788   */\n      0x12\n        /* \"#utility.yul\":5766:5784   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5759:5789   */\n      mstore\n      shl(0x72, 0x115b98dbdd5c9859d95b595b9d08119d5b99)\n        /* \"#utility.yul\":5820:5822   */\n      0x60\n        /* \"#utility.yul\":5805:5823   */\n      dup3\n      add\n        /* \"#utility.yul\":5798:5846   */\n      mstore\n        /* \"#utility.yul\":5878:5881   */\n      0x80\n        /* \"#utility.yul\":5863:5882   */\n      add\n      swap1\n        /* \"#utility.yul\":5474:5888   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":31386:31442  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":31477:31490  emergencyFund */\n      sload(0x08)\n        /* \"indentity_test_3_flattened.sol\":31453:31507  super._transfer(sender, emergencyFund, emergencyShare) */\n      tag_258\n      swap1\n        /* \"indentity_test_3_flattened.sol\":31469:31475  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":31477:31490  emergencyFund */\n      and\n        /* \"indentity_test_3_flattened.sol\":31492:31506  emergencyShare */\n      dup7\n        /* \"indentity_test_3_flattened.sol\":31453:31468  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31453:31507  super._transfer(sender, emergencyFund, emergencyShare) */\n      jump\t// in\n    tag_258:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":31537:31551  emergencyShare */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":31522:31570  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n      mload(0x40)\n      tag_259\n      swap2\n        /* \"#utility.yul\":6105:6130   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6166:6168   */\n      0x40\n        /* \"#utility.yul\":6161:6163   */\n      0x20\n        /* \"#utility.yul\":6146:6164   */\n      dup3\n      add\n        /* \"#utility.yul\":6139:6169   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6205:6207   */\n      0x0e\n        /* \"#utility.yul\":6185:6203   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6178:6208   */\n      mstore\n      shl(0x92, 0x115b595c99d95b98de48119d5b99)\n        /* \"#utility.yul\":6239:6241   */\n      0x60\n        /* \"#utility.yul\":6224:6242   */\n      dup3\n      add\n        /* \"#utility.yul\":6217:6261   */\n      mstore\n        /* \"#utility.yul\":6293:6296   */\n      0x80\n        /* \"#utility.yul\":6278:6297   */\n      add\n      swap1\n        /* \"#utility.yul\":5893:6303   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":31522:31570  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":31605:31620  marketingWallet */\n      sload(0x09)\n        /* \"indentity_test_3_flattened.sol\":31581:31637  super._transfer(sender, marketingWallet, marketingShare) */\n      tag_261\n      swap1\n        /* \"indentity_test_3_flattened.sol\":31597:31603  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":31605:31620  marketingWallet */\n      and\n        /* \"indentity_test_3_flattened.sol\":31622:31636  marketingShare */\n      dup6\n        /* \"indentity_test_3_flattened.sol\":31581:31596  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31581:31637  super._transfer(sender, marketingWallet, marketingShare) */\n      jump\t// in\n    tag_261:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":31667:31681  marketingShare */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":31652:31695  TaxDistributed(marketingShare, \"Marketing\") */\n      mload(0x40)\n      tag_262\n      swap2\n        /* \"#utility.yul\":6520:6545   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6581:6583   */\n      0x40\n        /* \"#utility.yul\":6576:6578   */\n      0x20\n        /* \"#utility.yul\":6561:6579   */\n      dup3\n      add\n        /* \"#utility.yul\":6554:6584   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6620:6621   */\n      0x09\n        /* \"#utility.yul\":6600:6618   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6593:6622   */\n      mstore\n      shl(0xb8, 0x4d61726b6574696e67)\n        /* \"#utility.yul\":6653:6655   */\n      0x60\n        /* \"#utility.yul\":6638:6656   */\n      dup3\n      add\n        /* \"#utility.yul\":6631:6670   */\n      mstore\n        /* \"#utility.yul\":6702:6705   */\n      0x80\n        /* \"#utility.yul\":6687:6706   */\n      add\n      swap1\n        /* \"#utility.yul\":6308:6712   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":31652:31695  TaxDistributed(marketingShare, \"Marketing\") */\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":31730:31743  stakingWallet */\n      sload(0x0a)\n        /* \"indentity_test_3_flattened.sol\":31706:31758  super._transfer(sender, stakingWallet, stakingShare) */\n      tag_264\n      swap1\n        /* \"indentity_test_3_flattened.sol\":31722:31728  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":31730:31743  stakingWallet */\n      and\n        /* \"indentity_test_3_flattened.sol\":31745:31757  stakingShare */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":31706:31721  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31706:31758  super._transfer(sender, stakingWallet, stakingShare) */\n      jump\t// in\n    tag_264:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":31788:31800  stakingShare */\n      dup3\n        /* \"indentity_test_3_flattened.sol\":31773:31812  TaxDistributed(stakingShare, \"Staking\") */\n      mload(0x40)\n      tag_265\n      swap2\n        /* \"#utility.yul\":6929:6954   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6990:6992   */\n      0x40\n        /* \"#utility.yul\":6985:6987   */\n      0x20\n        /* \"#utility.yul\":6970:6988   */\n      dup3\n      add\n        /* \"#utility.yul\":6963:6993   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7029:7030   */\n      0x07\n        /* \"#utility.yul\":7009:7027   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7002:7031   */\n      mstore\n      shl(0xc8, 0x5374616b696e67)\n        /* \"#utility.yul\":7062:7064   */\n      0x60\n        /* \"#utility.yul\":7047:7065   */\n      dup3\n      add\n        /* \"#utility.yul\":7040:7077   */\n      mstore\n        /* \"#utility.yul\":7109:7112   */\n      0x80\n        /* \"#utility.yul\":7094:7113   */\n      add\n      swap1\n        /* \"#utility.yul\":6717:7119   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":31773:31812  TaxDistributed(stakingShare, \"Staking\") */\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":31823:31870  super._transfer(sender, address(this), lpShare) */\n      tag_267\n        /* \"indentity_test_3_flattened.sol\":31839:31845  sender */\n      dup11\n        /* \"indentity_test_3_flattened.sol\":31855:31859  this */\n      address\n        /* \"indentity_test_3_flattened.sol\":31862:31869  lpShare */\n      dup9\n        /* \"indentity_test_3_flattened.sol\":31823:31838  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31823:31870  super._transfer(sender, address(this), lpShare) */\n      jump\t// in\n    tag_267:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":31938:31945  lpShare */\n      dup7\n        /* \"indentity_test_3_flattened.sol\":31923:31964  TaxDistributed(lpShare, \"Liquidity Pool\") */\n      mload(0x40)\n      tag_268\n      swap2\n        /* \"#utility.yul\":7336:7361   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7397:7399   */\n      0x40\n        /* \"#utility.yul\":7392:7394   */\n      0x20\n        /* \"#utility.yul\":7377:7395   */\n      dup3\n      add\n        /* \"#utility.yul\":7370:7400   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7436:7438   */\n      0x0e\n        /* \"#utility.yul\":7416:7434   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7409:7439   */\n      mstore\n      shl(0x92, 0x131a5c5d5a591a5d1e48141bdbdb)\n        /* \"#utility.yul\":7470:7472   */\n      0x60\n        /* \"#utility.yul\":7455:7473   */\n      dup3\n      add\n        /* \"#utility.yul\":7448:7492   */\n      mstore\n        /* \"#utility.yul\":7524:7527   */\n      0x80\n        /* \"#utility.yul\":7509:7528   */\n      add\n      swap1\n        /* \"#utility.yul\":7124:7534   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":31923:31964  TaxDistributed(lpShare, \"Liquidity Pool\") */\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"indentity_test_3_flattened.sol\":31975:32020  super._transfer(sender, recipient, netAmount) */\n      tag_270\n        /* \"indentity_test_3_flattened.sol\":31991:31997  sender */\n      dup11\n        /* \"indentity_test_3_flattened.sol\":31999:32008  recipient */\n      dup11\n        /* \"indentity_test_3_flattened.sol\":32010:32019  netAmount */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":31975:31990  super._transfer */\n      tag_145\n        /* \"indentity_test_3_flattened.sol\":31975:32020  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_270:\n        /* \"indentity_test_3_flattened.sol\":30064:32027  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"indentity_test_3_flattened.sol\":29946:32027  function _transferWithTaxes(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":20601:21033  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":20713:20732  owner == address(0) */\n      dup5\n      and\n        /* \"indentity_test_3_flattened.sol\":20709:20798  if (owner == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":20755:20787  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":20784:20785  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":20755:20787  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":20755:20787  ERC20InvalidApprover(address(0)) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":20709:20798  if (owner == address(0)) {... */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":20811:20832  spender == address(0) */\n      dup4\n      and\n        /* \"indentity_test_3_flattened.sol\":20807:20897  if (spender == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":20855:20886  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":20883:20884  0 */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":20855:20886  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":342:393   */\n      mstore\n        /* \"#utility.yul\":315:333   */\n      0x24\n      add\n        /* \"indentity_test_3_flattened.sol\":20855:20886  ERC20InvalidSpender(address(0)) */\n      tag_174\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":20807:20897  if (spender == address(0)) {... */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":20906:20924  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"indentity_test_3_flattened.sol\":20906:20917  _allowances */\n      0x01\n        /* \"indentity_test_3_flattened.sol\":20906:20924  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":20906:20933  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":20906:20941  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"indentity_test_3_flattened.sol\":20951:21027  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_211\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":21001:21008  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      and\n        /* \"indentity_test_3_flattened.sol\":20994:20999  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"indentity_test_3_flattened.sol\":21010:21015  value */\n      dup5\n        /* \"indentity_test_3_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_277\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"indentity_test_3_flattened.sol\":20601:21033  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"indentity_test_3_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":16997:17015  from == address(0) */\n      dup4\n      and\n        /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":17149:17154  value */\n      dup1\n        /* \"indentity_test_3_flattened.sol\":17133:17145  _totalSupply */\n      0x02\n      0x00\n        /* \"indentity_test_3_flattened.sol\":17133:17154  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_280\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_280:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\n      tag_281\n      swap1\n      pop\n      jump\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17207:17222  _balances[from] */\n      dup4\n      and\n        /* \"indentity_test_3_flattened.sol\":17185:17204  uint256 fromBalance */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":17207:17222  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"indentity_test_3_flattened.sol\":17240:17259  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"indentity_test_3_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5211:5243   */\n      dup6\n      and\n        /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5193:5244   */\n      mstore\n        /* \"#utility.yul\":5260:5278   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5253:5287   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5303:5321   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5296:5330   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5166:5184   */\n      0x64\n      add\n        /* \"indentity_test_3_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_174\n        /* \"#utility.yul\":4991:5336   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17471:17486  _balances[from] */\n      dup5\n      and\n        /* \"indentity_test_3_flattened.sol\":17471:17480  _balances */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":17471:17486  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":17489:17508  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"indentity_test_3_flattened.sol\":17471:17508  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"indentity_test_3_flattened.sol\":16993:17533  if (from == address(0)) {... */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17547:17563  to == address(0) */\n      dup3\n      and\n        /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"indentity_test_3_flattened.sol\":17710:17722  _totalSupply */\n      0x02\n        /* \"indentity_test_3_flattened.sol\":17710:17731  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\n      jump(tag_285)\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17921:17934  _balances[to] */\n      dup3\n      and\n        /* \"indentity_test_3_flattened.sol\":17921:17930  _balances */\n      0x00\n        /* \"indentity_test_3_flattened.sol\":17921:17934  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"indentity_test_3_flattened.sol\":17921:17943  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"indentity_test_3_flattened.sol\":17543:17968  if (to == address(0)) {... */\n    tag_285:\n        /* \"indentity_test_3_flattened.sol\":17998:18000  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      and\n        /* \"indentity_test_3_flattened.sol\":17992:17996  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"indentity_test_3_flattened.sol\":18002:18007  value */\n      dup4\n        /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      mload(0x40)\n      tag_286\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"indentity_test_3_flattened.sol\":17983:18008  Transfer(from, to, value) */\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"indentity_test_3_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":404:822   */\n    tag_45:\n        /* \"#utility.yul\":553:555   */\n      0x20\n        /* \"#utility.yul\":542:551   */\n      dup2\n        /* \"#utility.yul\":535:556   */\n      mstore\n        /* \"#utility.yul\":516:520   */\n      0x00\n        /* \"#utility.yul\":585:591   */\n      dup3\n        /* \"#utility.yul\":579:592   */\n      mload\n        /* \"#utility.yul\":628:634   */\n      dup1\n        /* \"#utility.yul\":623:625   */\n      0x20\n        /* \"#utility.yul\":612:621   */\n      dup5\n        /* \"#utility.yul\":608:626   */\n      add\n        /* \"#utility.yul\":601:635   */\n      mstore\n        /* \"#utility.yul\":687:693   */\n      dup1\n        /* \"#utility.yul\":682:684   */\n      0x20\n        /* \"#utility.yul\":674:680   */\n      dup6\n        /* \"#utility.yul\":670:685   */\n      add\n        /* \"#utility.yul\":665:667   */\n      0x40\n        /* \"#utility.yul\":654:663   */\n      dup6\n        /* \"#utility.yul\":650:668   */\n      add\n        /* \"#utility.yul\":644:694   */\n      mcopy\n        /* \"#utility.yul\":743:744   */\n      0x00\n        /* \"#utility.yul\":738:740   */\n      0x40\n        /* \"#utility.yul\":729:735   */\n      dup3\n        /* \"#utility.yul\":718:727   */\n      dup6\n        /* \"#utility.yul\":714:736   */\n      add\n        /* \"#utility.yul\":710:741   */\n      add\n        /* \"#utility.yul\":703:745   */\n      mstore\n        /* \"#utility.yul\":813:815   */\n      0x40\n        /* \"#utility.yul\":806:808   */\n      0x1f\n        /* \"#utility.yul\":802:809   */\n      not\n        /* \"#utility.yul\":797:799   */\n      0x1f\n        /* \"#utility.yul\":789:795   */\n      dup4\n        /* \"#utility.yul\":785:800   */\n      add\n        /* \"#utility.yul\":781:810   */\n      and\n        /* \"#utility.yul\":770:779   */\n      dup5\n        /* \"#utility.yul\":766:811   */\n      add\n        /* \"#utility.yul\":762:816   */\n      add\n        /* \"#utility.yul\":754:816   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":404:822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":827:1000   */\n    tag_287:\n        /* \"#utility.yul\":895:915   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":944:975   */\n      dup2\n      and\n        /* \"#utility.yul\":934:976   */\n      dup2\n      eq\n        /* \"#utility.yul\":924:994   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":924:994   */\n    tag_294:\n        /* \"#utility.yul\":827:1000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1005:1305   */\n    tag_48:\n        /* \"#utility.yul\":1073:1079   */\n      0x00\n        /* \"#utility.yul\":1081:1087   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1122:1131   */\n      dup4\n        /* \"#utility.yul\":1113:1120   */\n      dup6\n        /* \"#utility.yul\":1109:1132   */\n      sub\n        /* \"#utility.yul\":1105:1137   */\n      slt\n        /* \"#utility.yul\":1102:1154   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1150:1151   */\n      0x00\n        /* \"#utility.yul\":1147:1148   */\n      dup1\n        /* \"#utility.yul\":1140:1152   */\n      revert\n        /* \"#utility.yul\":1102:1154   */\n    tag_296:\n        /* \"#utility.yul\":1173:1202   */\n      tag_297\n        /* \"#utility.yul\":1192:1201   */\n      dup4\n        /* \"#utility.yul\":1173:1202   */\n      tag_287\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1163:1202   */\n      swap5\n        /* \"#utility.yul\":1271:1273   */\n      0x20\n        /* \"#utility.yul\":1256:1274   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1243:1275   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1005:1305   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_57:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      dup1\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_300:\n        /* \"#utility.yul\":1687:1716   */\n      tag_301\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_287\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_302\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_287\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":2070:2256   */\n    tag_72:\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2170:2179   */\n      dup3\n        /* \"#utility.yul\":2161:2168   */\n      dup5\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      dup1\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_305:\n        /* \"#utility.yul\":2221:2250   */\n      tag_306\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2221:2250   */\n      tag_287\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2211:2250   */\n      swap4\n        /* \"#utility.yul\":2070:2256   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2608   */\n    tag_89:\n        /* \"#utility.yul\":2326:2332   */\n      0x00\n        /* \"#utility.yul\":2334:2340   */\n      dup1\n        /* \"#utility.yul\":2387:2389   */\n      0x40\n        /* \"#utility.yul\":2375:2384   */\n      dup4\n        /* \"#utility.yul\":2366:2373   */\n      dup6\n        /* \"#utility.yul\":2362:2385   */\n      sub\n        /* \"#utility.yul\":2358:2390   */\n      slt\n        /* \"#utility.yul\":2355:2407   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2403:2404   */\n      0x00\n        /* \"#utility.yul\":2400:2401   */\n      dup1\n        /* \"#utility.yul\":2393:2405   */\n      revert\n        /* \"#utility.yul\":2355:2407   */\n    tag_308:\n        /* \"#utility.yul\":2426:2455   */\n      tag_309\n        /* \"#utility.yul\":2445:2454   */\n      dup4\n        /* \"#utility.yul\":2426:2455   */\n      tag_287\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2416:2455   */\n      swap2\n      pop\n        /* \"#utility.yul\":2505:2507   */\n      0x20\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2490:2508   */\n      add\n        /* \"#utility.yul\":2477:2509   */\n      calldataload\n        /* \"#utility.yul\":2552:2557   */\n      dup1\n        /* \"#utility.yul\":2545:2558   */\n      iszero\n        /* \"#utility.yul\":2538:2559   */\n      iszero\n        /* \"#utility.yul\":2531:2536   */\n      dup2\n        /* \"#utility.yul\":2528:2560   */\n      eq\n        /* \"#utility.yul\":2518:2578   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2574:2575   */\n      0x00\n        /* \"#utility.yul\":2571:2572   */\n      dup1\n        /* \"#utility.yul\":2564:2576   */\n      revert\n        /* \"#utility.yul\":2518:2578   */\n    tag_310:\n        /* \"#utility.yul\":2597:2602   */\n      dup1\n        /* \"#utility.yul\":2587:2602   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2261:2608   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2873   */\n    tag_115:\n        /* \"#utility.yul\":2681:2687   */\n      0x00\n        /* \"#utility.yul\":2689:2695   */\n      dup1\n        /* \"#utility.yul\":2742:2744   */\n      0x40\n        /* \"#utility.yul\":2730:2739   */\n      dup4\n        /* \"#utility.yul\":2721:2728   */\n      dup6\n        /* \"#utility.yul\":2717:2740   */\n      sub\n        /* \"#utility.yul\":2713:2745   */\n      slt\n        /* \"#utility.yul\":2710:2762   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2758:2759   */\n      0x00\n        /* \"#utility.yul\":2755:2756   */\n      dup1\n        /* \"#utility.yul\":2748:2760   */\n      revert\n        /* \"#utility.yul\":2710:2762   */\n    tag_312:\n        /* \"#utility.yul\":2781:2810   */\n      tag_313\n        /* \"#utility.yul\":2800:2809   */\n      dup4\n        /* \"#utility.yul\":2781:2810   */\n      tag_287\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2771:2810   */\n      swap2\n      pop\n        /* \"#utility.yul\":2829:2867   */\n      tag_314\n        /* \"#utility.yul\":2863:2865   */\n      0x20\n        /* \"#utility.yul\":2852:2861   */\n      dup5\n        /* \"#utility.yul\":2848:2866   */\n      add\n        /* \"#utility.yul\":2829:2867   */\n      tag_287\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2819:2867   */\n      swap1\n      pop\n        /* \"#utility.yul\":2613:2873   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3258   */\n    tag_129:\n        /* \"#utility.yul\":2957:2958   */\n      0x01\n        /* \"#utility.yul\":2953:2965   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3000:3012   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3021:3082   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3075:3079   */\n      0x7f\n        /* \"#utility.yul\":3067:3073   */\n      dup3\n        /* \"#utility.yul\":3063:3080   */\n      and\n        /* \"#utility.yul\":3053:3080   */\n      swap2\n      pop\n        /* \"#utility.yul\":3021:3082   */\n    tag_316:\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3120:3126   */\n      dup3\n        /* \"#utility.yul\":3117:3131   */\n      lt\n        /* \"#utility.yul\":3097:3115   */\n      dup2\n        /* \"#utility.yul\":3094:3132   */\n      sub\n        /* \"#utility.yul\":3091:3252   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3174:3184   */\n      0x4e487b71\n        /* \"#utility.yul\":3169:3172   */\n      0xe0\n        /* \"#utility.yul\":3165:3185   */\n      shl\n        /* \"#utility.yul\":3162:3163   */\n      0x00\n        /* \"#utility.yul\":3155:3186   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x22\n        /* \"#utility.yul\":3206:3207   */\n      0x04\n        /* \"#utility.yul\":3199:3214   */\n      mstore\n        /* \"#utility.yul\":3237:3241   */\n      0x24\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3227:3242   */\n      revert\n        /* \"#utility.yul\":3091:3252   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":2878:3258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3263:3390   */\n    tag_288:\n        /* \"#utility.yul\":3324:3334   */\n      0x4e487b71\n        /* \"#utility.yul\":3319:3322   */\n      0xe0\n        /* \"#utility.yul\":3315:3335   */\n      shl\n        /* \"#utility.yul\":3312:3313   */\n      0x00\n        /* \"#utility.yul\":3305:3336   */\n      mstore\n        /* \"#utility.yul\":3355:3359   */\n      0x11\n        /* \"#utility.yul\":3352:3353   */\n      0x04\n        /* \"#utility.yul\":3345:3360   */\n      mstore\n        /* \"#utility.yul\":3379:3383   */\n      0x24\n        /* \"#utility.yul\":3376:3377   */\n      0x00\n        /* \"#utility.yul\":3369:3384   */\n      revert\n        /* \"#utility.yul\":3395:3563   */\n    tag_167:\n        /* \"#utility.yul\":3468:3477   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3499:3508   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3516:3531   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3510:3532   */\n      dup5\n      eq\n        /* \"#utility.yul\":3496:3533   */\n      or\n        /* \"#utility.yul\":3486:3557   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3537:3555   */\n      tag_134\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":3568:3785   */\n    tag_169:\n        /* \"#utility.yul\":3608:3609   */\n      0x00\n        /* \"#utility.yul\":3634:3635   */\n      dup3\n        /* \"#utility.yul\":3624:3756   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":3678:3688   */\n      0x4e487b71\n        /* \"#utility.yul\":3673:3676   */\n      0xe0\n        /* \"#utility.yul\":3669:3689   */\n      shl\n        /* \"#utility.yul\":3666:3667   */\n      0x00\n        /* \"#utility.yul\":3659:3690   */\n      mstore\n        /* \"#utility.yul\":3713:3717   */\n      0x12\n        /* \"#utility.yul\":3710:3711   */\n      0x04\n        /* \"#utility.yul\":3703:3718   */\n      mstore\n        /* \"#utility.yul\":3741:3745   */\n      0x24\n        /* \"#utility.yul\":3738:3739   */\n      0x00\n        /* \"#utility.yul\":3731:3746   */\n      revert\n        /* \"#utility.yul\":3624:3756   */\n    tag_323:\n      pop\n        /* \"#utility.yul\":3770:3779   */\n      div\n      swap1\n        /* \"#utility.yul\":3568:3785   */\n      jump\t// out\n        /* \"#utility.yul\":3790:3915   */\n    tag_172:\n        /* \"#utility.yul\":3855:3864   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3876:3886   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3873:3909   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3889:3907   */\n      tag_134\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":5341:5469   */\n    tag_254:\n        /* \"#utility.yul\":5408:5417   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5429:5440   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5426:5463   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":5443:5461   */\n      tag_134\n      tag_288\n      jump\t// in\n    stop\n    data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146 6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n\n    auxdata: 0xa26469706673582212204af43fdf31500a4b4e7051e891d241240e96188837a19f1fbe29640622f5409d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1098": {
									"entryPoint": null,
									"id": 1098,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 427,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 346,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 483,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4356:1",
										"nodeType": "YulBlock",
										"src": "0:4356:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "345:401:1",
													"nodeType": "YulBlock",
													"src": "345:401:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:1",
																"nodeType": "YulBlock",
																"src": "392:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:1",
																					"nodeType": "YulLiteral",
																					"src": "401:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:1",
																					"nodeType": "YulLiteral",
																					"src": "404:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:1"
																			},
																			"nativeSrc": "394:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:1"
																		},
																		"nativeSrc": "394:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:1"
																		},
																		"nativeSrc": "362:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:1",
																		"nodeType": "YulLiteral",
																		"src": "387:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:1"
																},
																"nativeSrc": "358:33:1",
																"nodeType": "YulFunctionCall",
																"src": "358:33:1"
															},
															"nativeSrc": "355:53:1",
															"nodeType": "YulIf",
															"src": "355:53:1"
														},
														{
															"nativeSrc": "417:50:1",
															"nodeType": "YulAssignment",
															"src": "417:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:1"
																},
																"nativeSrc": "427:40:1",
																"nodeType": "YulFunctionCall",
																"src": "427:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																}
															]
														},
														{
															"nativeSrc": "476:59:1",
															"nodeType": "YulAssignment",
															"src": "476:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:1",
																				"nodeType": "YulLiteral",
																				"src": "531:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:1"
																		},
																		"nativeSrc": "516:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:1"
																},
																"nativeSrc": "486:49:1",
																"nodeType": "YulFunctionCall",
																"src": "486:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:1"
																}
															]
														},
														{
															"nativeSrc": "544:59:1",
															"nodeType": "YulAssignment",
															"src": "544:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:1",
																				"nodeType": "YulLiteral",
																				"src": "599:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:1"
																},
																"nativeSrc": "554:49:1",
																"nodeType": "YulFunctionCall",
																"src": "554:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																}
															]
														},
														{
															"nativeSrc": "612:59:1",
															"nodeType": "YulAssignment",
															"src": "612:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:1",
																				"nodeType": "YulLiteral",
																				"src": "667:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:1"
																},
																"nativeSrc": "622:49:1",
																"nodeType": "YulFunctionCall",
																"src": "622:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:1"
																}
															]
														},
														{
															"nativeSrc": "680:60:1",
															"nodeType": "YulAssignment",
															"src": "680:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:3:1",
																				"nodeType": "YulLiteral",
																				"src": "735:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:1"
																		},
																		"nativeSrc": "720:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:1"
																},
																"nativeSrc": "690:50:1",
																"nodeType": "YulFunctionCall",
																"src": "690:50:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:550:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:1",
														"nodeType": "YulTypedName",
														"src": "279:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:1",
														"nodeType": "YulTypedName",
														"src": "290:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:1",
														"nodeType": "YulTypedName",
														"src": "302:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:1",
														"nodeType": "YulTypedName",
														"src": "310:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:1",
														"nodeType": "YulTypedName",
														"src": "318:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:1",
														"nodeType": "YulTypedName",
														"src": "326:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:1",
														"nodeType": "YulTypedName",
														"src": "334:6:1",
														"type": ""
													}
												],
												"src": "196:550:1"
											},
											{
												"body": {
													"nativeSrc": "783:95:1",
													"nodeType": "YulBlock",
													"src": "783:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "800:1:1",
																		"nodeType": "YulLiteral",
																		"src": "800:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "807:3:1",
																				"nodeType": "YulLiteral",
																				"src": "807:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "812:10:1",
																				"nodeType": "YulLiteral",
																				"src": "812:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "803:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:1"
																		},
																		"nativeSrc": "803:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "803:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "793:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																},
																"nativeSrc": "793:31:1",
																"nodeType": "YulFunctionCall",
																"src": "793:31:1"
															},
															"nativeSrc": "793:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "793:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:1",
																		"nodeType": "YulLiteral",
																		"src": "840:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:1",
																		"nodeType": "YulLiteral",
																		"src": "843:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:1"
																},
																"nativeSrc": "833:15:1",
																"nodeType": "YulFunctionCall",
																"src": "833:15:1"
															},
															"nativeSrc": "833:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:1",
																		"nodeType": "YulLiteral",
																		"src": "864:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:1",
																		"nodeType": "YulLiteral",
																		"src": "867:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:1"
																},
																"nativeSrc": "857:15:1",
																"nodeType": "YulFunctionCall",
																"src": "857:15:1"
															},
															"nativeSrc": "857:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "751:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "751:127:1"
											},
											{
												"body": {
													"nativeSrc": "938:325:1",
													"nodeType": "YulBlock",
													"src": "938:325:1",
													"statements": [
														{
															"nativeSrc": "948:22:1",
															"nodeType": "YulAssignment",
															"src": "948:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "962:1:1",
																		"nodeType": "YulLiteral",
																		"src": "962:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "965:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "965:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "958:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:1"
																},
																"nativeSrc": "958:12:1",
																"nodeType": "YulFunctionCall",
																"src": "958:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:1"
																}
															]
														},
														{
															"nativeSrc": "979:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "979:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1009:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1009:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:1"
																},
																"nativeSrc": "1005:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "983:18:1",
																	"nodeType": "YulTypedName",
																	"src": "983:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1056:31:1",
																"nodeType": "YulBlock",
																"src": "1056:31:1",
																"statements": [
																	{
																		"nativeSrc": "1058:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1058:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1072:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1072:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1080:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1080:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1068:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1068:3:1"
																			},
																			"nativeSrc": "1068:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1068:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1058:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1036:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1036:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:1"
																},
																"nativeSrc": "1029:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1029:26:1"
															},
															"nativeSrc": "1026:61:1",
															"nodeType": "YulIf",
															"src": "1026:61:1"
														},
														{
															"body": {
																"nativeSrc": "1146:111:1",
																"nodeType": "YulBlock",
																"src": "1146:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1174:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1174:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1179:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1179:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1170:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1170:3:1"
																					},
																					"nativeSrc": "1170:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1170:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1160:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:1"
																			},
																			"nativeSrc": "1160:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1160:31:1"
																		},
																		"nativeSrc": "1160:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1214:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:1"
																			},
																			"nativeSrc": "1204:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:15:1"
																		},
																		"nativeSrc": "1204:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1239:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1242:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1242:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1232:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nativeSrc": "1232:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1232:15:1"
																		},
																		"nativeSrc": "1232:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1102:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1102:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1125:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1133:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1122:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:2:1"
																		},
																		"nativeSrc": "1122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1122:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1099:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1099:2:1"
																},
																"nativeSrc": "1099:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1099:38:1"
															},
															"nativeSrc": "1096:161:1",
															"nodeType": "YulIf",
															"src": "1096:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "883:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "918:4:1",
														"nodeType": "YulTypedName",
														"src": "918:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "927:6:1",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													}
												],
												"src": "883:380:1"
											},
											{
												"body": {
													"nativeSrc": "1324:65:1",
													"nodeType": "YulBlock",
													"src": "1324:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1344:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:14:1"
															},
															"nativeSrc": "1334:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:14:1"
														},
														{
															"nativeSrc": "1357:26:1",
															"nodeType": "YulAssignment",
															"src": "1357:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1375:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1378:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1378:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1365:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1365:9:1"
																},
																"nativeSrc": "1365:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1365:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1357:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1357:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1268:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1307:3:1",
														"nodeType": "YulTypedName",
														"src": "1307:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1315:4:1",
														"nodeType": "YulTypedName",
														"src": "1315:4:1",
														"type": ""
													}
												],
												"src": "1268:121:1"
											},
											{
												"body": {
													"nativeSrc": "1475:437:1",
													"nodeType": "YulBlock",
													"src": "1475:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1508:398:1",
																"nodeType": "YulBlock",
																"src": "1508:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1532:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1532:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1522:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:1"
																			},
																			"nativeSrc": "1522:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1522:16:1"
																		},
																		"nativeSrc": "1522:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:16:1"
																	},
																	{
																		"nativeSrc": "1551:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1551:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1573:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1573:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1576:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1576:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1563:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:1"
																			},
																			"nativeSrc": "1563:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1563:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1555:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1555:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1594:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1594:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1617:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1617:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1627:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1627:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1634:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1634:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1646:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1646:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1630:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1630:3:1"
																							},
																							"nativeSrc": "1630:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1630:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1623:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1623:3:1"
																					},
																					"nativeSrc": "1623:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1623:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1613:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:1"
																			},
																			"nativeSrc": "1613:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1613:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1598:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1598:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1688:23:1",
																			"nodeType": "YulBlock",
																			"src": "1688:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1690:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1690:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1705:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1705:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1690:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1690:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1670:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1670:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1682:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1682:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1667:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1667:2:1"
																			},
																			"nativeSrc": "1667:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1667:20:1"
																		},
																		"nativeSrc": "1664:47:1",
																		"nodeType": "YulIf",
																		"src": "1664:47:1"
																	},
																	{
																		"nativeSrc": "1724:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1724:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1738:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1748:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1748:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1755:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1755:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1760:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1760:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1751:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1751:3:1"
																							},
																							"nativeSrc": "1751:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1751:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1744:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1744:3:1"
																					},
																					"nativeSrc": "1744:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1744:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:1"
																			},
																			"nativeSrc": "1734:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1728:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1728:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1778:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1778:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1791:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1791:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1782:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1782:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1876:20:1",
																			"nodeType": "YulBlock",
																			"src": "1876:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1885:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1885:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1892:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1892:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1878:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1878:6:1"
																						},
																						"nativeSrc": "1878:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1878:16:1"
																					},
																					"nativeSrc": "1878:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1878:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1826:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1826:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1833:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1833:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1823:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1823:2:1"
																			},
																			"nativeSrc": "1823:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1823:13:1"
																		},
																		"nativeSrc": "1815:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1837:26:1",
																			"nodeType": "YulBlock",
																			"src": "1837:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1839:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1839:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1852:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1852:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1859:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1859:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1848:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1848:3:1"
																						},
																						"nativeSrc": "1848:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1848:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1839:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1839:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1819:3:1",
																			"nodeType": "YulBlock",
																			"src": "1819:3:1",
																			"statements": []
																		},
																		"src": "1815:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1491:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1488:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:2:1"
																},
																"nativeSrc": "1488:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1488:11:1"
															},
															"nativeSrc": "1485:421:1",
															"nodeType": "YulIf",
															"src": "1485:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1394:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1447:5:1",
														"nodeType": "YulTypedName",
														"src": "1447:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1454:3:1",
														"nodeType": "YulTypedName",
														"src": "1454:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1459:10:1",
														"nodeType": "YulTypedName",
														"src": "1459:10:1",
														"type": ""
													}
												],
												"src": "1394:518:1"
											},
											{
												"body": {
													"nativeSrc": "2002:81:1",
													"nodeType": "YulBlock",
													"src": "2002:81:1",
													"statements": [
														{
															"nativeSrc": "2012:65:1",
															"nodeType": "YulAssignment",
															"src": "2012:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2027:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2045:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2045:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2048:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2048:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2041:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:1"
																								},
																								"nativeSrc": "2041:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2041:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2058:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2058:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2054:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2054:3:1"
																								},
																								"nativeSrc": "2054:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2054:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2037:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2037:3:1"
																						},
																						"nativeSrc": "2037:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2037:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2033:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2033:3:1"
																				},
																				"nativeSrc": "2033:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2033:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nativeSrc": "2023:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2069:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2069:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2072:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2072:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2065:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:1"
																		},
																		"nativeSrc": "2065:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2020:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2020:2:1"
																},
																"nativeSrc": "2020:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2020:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2012:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2012:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1917:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1979:4:1",
														"nodeType": "YulTypedName",
														"src": "1979:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1985:3:1",
														"nodeType": "YulTypedName",
														"src": "1985:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1993:4:1",
														"nodeType": "YulTypedName",
														"src": "1993:4:1",
														"type": ""
													}
												],
												"src": "1917:166:1"
											},
											{
												"body": {
													"nativeSrc": "2184:1203:1",
													"nodeType": "YulBlock",
													"src": "2184:1203:1",
													"statements": [
														{
															"nativeSrc": "2194:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2214:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2214:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2208:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2208:5:1"
																},
																"nativeSrc": "2208:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2208:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2198:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2198:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2261:22:1",
																"nodeType": "YulBlock",
																"src": "2261:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2263:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2263:16:1"
																			},
																			"nativeSrc": "2263:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:18:1"
																		},
																		"nativeSrc": "2263:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2233:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2233:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2249:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2249:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2253:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2253:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2245:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2245:3:1"
																				},
																				"nativeSrc": "2245:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2245:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2257:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2257:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2241:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:1"
																		},
																		"nativeSrc": "2241:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2230:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2230:2:1"
																},
																"nativeSrc": "2230:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2230:30:1"
															},
															"nativeSrc": "2227:56:1",
															"nodeType": "YulIf",
															"src": "2227:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2336:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2336:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2374:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2374:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2368:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2368:5:1"
																				},
																				"nativeSrc": "2368:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2368:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2342:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2342:25:1"
																		},
																		"nativeSrc": "2342:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2382:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2292:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2292:43:1"
																},
																"nativeSrc": "2292:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2292:97:1"
															},
															"nativeSrc": "2292:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2292:97:1"
														},
														{
															"nativeSrc": "2398:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2398:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2415:1:1",
																"nodeType": "YulLiteral",
																"src": "2415:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2402:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2402:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2425:17:1",
															"nodeType": "YulAssignment",
															"src": "2425:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2438:4:1",
																"nodeType": "YulLiteral",
																"src": "2438:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2425:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2425:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2488:642:1",
																		"nodeType": "YulBlock",
																		"src": "2488:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2502:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2502:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2521:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2521:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2533:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2533:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2529:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2529:3:1"
																							},
																							"nativeSrc": "2529:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2529:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2517:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2517:3:1"
																					},
																					"nativeSrc": "2517:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2517:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2506:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2506:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2550:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2550:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2594:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2594:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2564:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2564:29:1"
																					},
																					"nativeSrc": "2564:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2564:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2554:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2554:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2612:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2612:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2621:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2616:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2616:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2692:165:1",
																					"nodeType": "YulBlock",
																					"src": "2692:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2717:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2717:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2735:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2735:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2740:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2740:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2731:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2731:3:1"
																												},
																												"nativeSrc": "2731:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2731:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2725:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2725:5:1"
																										},
																										"nativeSrc": "2725:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2725:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2710:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2710:6:1"
																								},
																								"nativeSrc": "2710:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2710:42:1"
																							},
																							"nativeSrc": "2710:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2710:42:1"
																						},
																						{
																							"nativeSrc": "2769:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2769:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2783:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2783:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2791:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2791:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2779:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:1"
																								},
																								"nativeSrc": "2779:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2769:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2769:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2810:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2810:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2827:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2827:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2838:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2838:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2823:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2823:3:1"
																								},
																								"nativeSrc": "2823:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2823:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2810:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2810:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2646:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2646:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2649:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2649:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2643:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2643:2:1"
																					},
																					"nativeSrc": "2643:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:14:1"
																				},
																				"nativeSrc": "2635:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2658:21:1",
																					"nodeType": "YulBlock",
																					"src": "2658:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2660:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2660:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2669:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2669:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2672:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2672:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2665:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:3:1"
																								},
																								"nativeSrc": "2665:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2665:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2660:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2660:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2639:3:1",
																					"nodeType": "YulBlock",
																					"src": "2639:3:1",
																					"statements": []
																				},
																				"src": "2635:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2905:166:1",
																					"nodeType": "YulBlock",
																					"src": "2905:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2923:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2923:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2950:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2950:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2955:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2955:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2946:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2946:3:1"
																										},
																										"nativeSrc": "2946:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2946:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2940:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2940:5:1"
																								},
																								"nativeSrc": "2940:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2940:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2927:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2927:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2990:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2990:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3002:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3002:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3029:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3029:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3032:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3032:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3025:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3025:3:1"
																																		},
																																		"nativeSrc": "3025:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3025:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3041:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3041:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3021:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3021:3:1"
																																},
																																"nativeSrc": "3021:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3021:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3051:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3051:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3047:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3047:3:1"
																																},
																																"nativeSrc": "3047:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3047:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3017:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3017:3:1"
																														},
																														"nativeSrc": "3017:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3017:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3013:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3013:3:1"
																												},
																												"nativeSrc": "3013:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3013:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2998:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2998:3:1"
																										},
																										"nativeSrc": "2998:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2998:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2983:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2983:6:1"
																								},
																								"nativeSrc": "2983:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2983:74:1"
																							},
																							"nativeSrc": "2983:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2983:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2876:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2876:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2885:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2885:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2873:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2873:2:1"
																					},
																					"nativeSrc": "2873:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2873:19:1"
																				},
																				"nativeSrc": "2870:201:1",
																				"nodeType": "YulIf",
																				"src": "2870:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3091:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3091:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3105:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3105:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3108:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3108:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3101:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3101:3:1"
																									},
																									"nativeSrc": "3101:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3101:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3117:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3117:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3097:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3097:3:1"
																							},
																							"nativeSrc": "3097:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3097:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3084:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3084:6:1"
																					},
																					"nativeSrc": "3084:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3084:36:1"
																				},
																				"nativeSrc": "3084:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3084:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2481:649:1",
																	"nodeType": "YulCase",
																	"src": "2481:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2486:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2486:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3147:234:1",
																		"nodeType": "YulBlock",
																		"src": "3147:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3161:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3161:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3165:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3165:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3210:67:1",
																					"nodeType": "YulBlock",
																					"src": "3210:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3228:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3228:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3247:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3247:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3252:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3252:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3243:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3243:3:1"
																										},
																										"nativeSrc": "3243:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3243:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3237:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3237:5:1"
																								},
																								"nativeSrc": "3237:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3237:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3228:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3228:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3191:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3191:6:1"
																				},
																				"nativeSrc": "3188:89:1",
																				"nodeType": "YulIf",
																				"src": "3188:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3297:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3297:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3356:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3356:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3363:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3363:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3303:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3303:52:1"
																							},
																							"nativeSrc": "3303:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3303:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3290:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3290:6:1"
																					},
																					"nativeSrc": "3290:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3290:81:1"
																				},
																				"nativeSrc": "3290:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3290:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3139:242:1",
																	"nodeType": "YulCase",
																	"src": "3139:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2461:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2461:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2469:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2469:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2458:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2458:2:1"
																},
																"nativeSrc": "2458:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2458:14:1"
															},
															"nativeSrc": "2451:930:1",
															"nodeType": "YulSwitch",
															"src": "2451:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2088:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2169:4:1",
														"nodeType": "YulTypedName",
														"src": "2169:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2175:3:1",
														"nodeType": "YulTypedName",
														"src": "2175:3:1",
														"type": ""
													}
												],
												"src": "2088:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3493:102:1",
													"nodeType": "YulBlock",
													"src": "3493:102:1",
													"statements": [
														{
															"nativeSrc": "3503:26:1",
															"nodeType": "YulAssignment",
															"src": "3503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3515:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3526:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:1"
																},
																"nativeSrc": "3511:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3503:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3503:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3545:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3560:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3576:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3576:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3581:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3581:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3572:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3572:3:1"
																						},
																						"nativeSrc": "3572:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3572:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3585:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3585:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:1"
																				},
																				"nativeSrc": "3568:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3568:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3556:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:1"
																		},
																		"nativeSrc": "3556:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:1"
																},
																"nativeSrc": "3538:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3538:51:1"
															},
															"nativeSrc": "3538:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3538:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3392:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3462:9:1",
														"nodeType": "YulTypedName",
														"src": "3462:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3473:6:1",
														"nodeType": "YulTypedName",
														"src": "3473:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3484:4:1",
														"nodeType": "YulTypedName",
														"src": "3484:4:1",
														"type": ""
													}
												],
												"src": "3392:203:1"
											},
											{
												"body": {
													"nativeSrc": "3648:174:1",
													"nodeType": "YulBlock",
													"src": "3648:174:1",
													"statements": [
														{
															"nativeSrc": "3658:16:1",
															"nodeType": "YulAssignment",
															"src": "3658:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3669:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3669:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3672:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3672:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3665:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:1"
																},
																"nativeSrc": "3665:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3665:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3658:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3705:111:1",
																"nodeType": "YulBlock",
																"src": "3705:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3726:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3726:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3733:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3733:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3738:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3738:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3729:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3729:3:1"
																					},
																					"nativeSrc": "3729:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3729:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3719:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:1"
																			},
																			"nativeSrc": "3719:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:31:1"
																		},
																		"nativeSrc": "3719:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3770:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3770:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3773:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3773:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:1"
																			},
																			"nativeSrc": "3763:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3763:15:1"
																		},
																		"nativeSrc": "3763:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3801:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3801:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3791:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:1"
																			},
																			"nativeSrc": "3791:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:15:1"
																		},
																		"nativeSrc": "3791:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3689:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3689:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3692:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3692:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3686:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:2:1"
																},
																"nativeSrc": "3686:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:10:1"
															},
															"nativeSrc": "3683:133:1",
															"nodeType": "YulIf",
															"src": "3683:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3600:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3631:1:1",
														"nodeType": "YulTypedName",
														"src": "3631:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3634:1:1",
														"nodeType": "YulTypedName",
														"src": "3634:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3640:3:1",
														"nodeType": "YulTypedName",
														"src": "3640:3:1",
														"type": ""
													}
												],
												"src": "3600:222:1"
											},
											{
												"body": {
													"nativeSrc": "3984:188:1",
													"nodeType": "YulBlock",
													"src": "3984:188:1",
													"statements": [
														{
															"nativeSrc": "3994:26:1",
															"nodeType": "YulAssignment",
															"src": "3994:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4006:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4017:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4017:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4002:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:1"
																},
																"nativeSrc": "4002:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4002:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4036:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4036:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4051:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4051:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4067:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4067:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4072:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4072:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4063:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4063:3:1"
																						},
																						"nativeSrc": "4063:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4063:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4076:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4076:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4059:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:1"
																				},
																				"nativeSrc": "4059:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4047:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:1"
																		},
																		"nativeSrc": "4047:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:1"
																},
																"nativeSrc": "4029:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4029:51:1"
															},
															"nativeSrc": "4029:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4029:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4100:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4100:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4096:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:1"
																		},
																		"nativeSrc": "4096:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4116:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4116:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:1"
																},
																"nativeSrc": "4089:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4089:34:1"
															},
															"nativeSrc": "4089:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4089:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4143:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4154:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4139:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:1"
																		},
																		"nativeSrc": "4139:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4159:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:1"
																},
																"nativeSrc": "4132:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:34:1"
															},
															"nativeSrc": "4132:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4132:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3827:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3937:9:1",
														"nodeType": "YulTypedName",
														"src": "3937:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3948:6:1",
														"nodeType": "YulTypedName",
														"src": "3948:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3956:6:1",
														"nodeType": "YulTypedName",
														"src": "3956:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3964:6:1",
														"nodeType": "YulTypedName",
														"src": "3964:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3975:4:1",
														"nodeType": "YulTypedName",
														"src": "3975:4:1",
														"type": ""
													}
												],
												"src": "3827:345:1"
											},
											{
												"body": {
													"nativeSrc": "4278:76:1",
													"nodeType": "YulBlock",
													"src": "4278:76:1",
													"statements": [
														{
															"nativeSrc": "4288:26:1",
															"nodeType": "YulAssignment",
															"src": "4288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4300:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4300:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4311:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4296:3:1"
																},
																"nativeSrc": "4296:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4288:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4341:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4323:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:1"
																},
																"nativeSrc": "4323:25:1",
																"nodeType": "YulFunctionCall",
																"src": "4323:25:1"
															},
															"nativeSrc": "4323:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "4323:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4177:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4247:9:1",
														"nodeType": "YulTypedName",
														"src": "4247:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4258:6:1",
														"nodeType": "YulTypedName",
														"src": "4258:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4269:4:1",
														"nodeType": "YulTypedName",
														"src": "4269:4:1",
														"type": ""
													}
												],
												"src": "4177:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161152538038061152583398101604081905261002e91610324565b336040518060400160405280600a8152602001692c22a0a6902a37b5b2b760b11b815250604051806040016040528060048152602001635845414d60e01b815250816003908161007e919061041d565b50600461008b828261041d565b5050506001600160a01b0381166100bc57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c58161015a565b506001600655600780546001600160a01b03199081166001600160a01b0388811691909117909255600880548216878416179055600980548216868416179055600a80548216858416179055600b8054909116918316919091179055610136336a01a784379d99db420000006101ab565b5050335f908152600c60205260409020805460ff19166001179055506104fc915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101d45760405163ec442f0560e01b81525f60048201526024016100b3565b6101df5f83836101e3565b5050565b6001600160a01b03831661020d578060025f82825461020291906104d7565b9091555061027d9050565b6001600160a01b0383165f908152602081905260409020548181101561025f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b3565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610299576002805482900390556102b7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102fc91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461031f575f80fd5b919050565b5f805f805f60a08688031215610338575f80fd5b61034186610309565b945061034f60208701610309565b935061035d60408701610309565b925061036b60608701610309565b915061037960808701610309565b90509295509295909350565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806103ad57607f821691505b6020821081036103cb57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561041857805f5260205f20601f840160051c810160208510156103f65750805b601f840160051c820191505b81811015610415575f8155600101610402565b50505b505050565b81516001600160401b0381111561043657610436610385565b61044a816104448454610399565b846103d1565b6020601f82116001811461047c575f83156104655750848201515b5f19600385901b1c1916600184901b178455610415565b5f84815260208120601f198516915b828110156104ab578785015182556020948501946001909201910161048b565b50848210156104c857868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156104f657634e487b7160e01b5f52601160045260245ffd5b92915050565b61101c806105095f395ff3fe608060405234801561000f575f80fd5b5060043610610187575f3560e01c8063715018a6116100d9578063c12b7c4e11610093578063dd62ed3e1161006e578063dd62ed3e14610347578063df7787a41461037f578063f2fde38b14610387578063f3b2db3f1461039a575f80fd5b8063c12b7c4e1461030e578063c816841b14610321578063cc85937814610334575f80fd5b8063715018a6146102b2578063753cafc3146102bc57806375f0a874146102cf5780638da5cb5b146102e257806395d89b41146102f3578063a9059cbb146102fb575f80fd5b80632ff2e9dc116101445780634fbee1931161011f5780634fbee1931461024d57806352a6a9ec1461026f57806354ad8aee1461028257806370a082311461028a575f80fd5b80632ff2e9dc14610224578063313ce5671461023657806336b4134a14610245575f80fd5b806302af37bb1461018b57806306ee6ad8146101a657806306fdde03146101d1578063095ea7b3146101e657806318160ddd1461020957806323b872dd14610211575b5f80fd5b610193600a81565b6040519081526020015b60405180910390f35b600a546101b9906001600160a01b031681565b6040516001600160a01b03909116815260200161019d565b6101d96103a2565b60405161019d9190610de2565b6101f96101f4366004610e32565b610432565b604051901515815260200161019d565b600254610193565b6101f961021f366004610e5a565b61044b565b6101936a01a784379d99db4200000081565b6040516012815260200161019d565b610193600d81565b6101f961025b366004610e94565b600c6020525f908152604090205460ff1681565b6007546101b9906001600160a01b031681565b610193600c81565b610193610298366004610e94565b6001600160a01b03165f9081526020819052604090205490565b6102ba61046e565b005b6102ba6102ca366004610eb4565b610481565b6009546101b9906001600160a01b031681565b6005546001600160a01b03166101b9565b6101d96104b3565b6101f9610309366004610e32565b6104c2565b6102ba61031c366004610e94565b6105fc565b600b546101b9906001600160a01b031681565b6008546101b9906001600160a01b031681565b610193610355366004610eed565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101936106ae565b6102ba610395366004610e94565b6106d3565b610193610710565b6060600380546103b190610f1e565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd90610f1e565b80156104285780601f106103ff57610100808354040283529160200191610428565b820191905f5260205f20905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b5f3361043f818585610729565b60019150505b92915050565b5f3361045885828561073b565b6104638585856107b7565b506001949350505050565b610476610814565b61047f5f610841565b565b610489610814565b6001600160a01b03919091165f908152600c60205260409020805460ff1916911515919091179055565b6060600480546103b190610f1e565b335f908152600c602052604081205460ff166105e85760646104f06a01a784379d99db420000006001610f6a565b6104fa9190610f81565b82610519856001600160a01b03165f9081526020819052604090205490565b6105239190610fa0565b11156105765760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d6974000000000000000060448201526064015b60405180910390fd5b61271061058f6a01a784379d99db420000006005610f6a565b6105999190610f81565b8211156105e85760405162461bcd60e51b815260206004820152601d60248201527f45786365656473206d6178207472616e73616374696f6e206c696d6974000000604482015260640161056d565b6105f3338484610892565b50600192915050565b610604610814565b6001600160a01b03811661065a5760405162461bcd60e51b815260206004820152601f60248201527f4e6577207061697220616464726573732063616e6e6f74206265207a65726f00604482015260640161056d565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527fdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa842713449060200160405180910390a150565b60646106c66a01a784379d99db420000006001610f6a565b6106d09190610f81565b81565b6106db610814565b6001600160a01b03811661070457604051631e4fbdf760e01b81525f600482015260240161056d565b61070d81610841565b50565b6127106106c66a01a784379d99db420000006005610f6a565b6107368383836001610bea565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156107b157818110156107a357604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161056d565b6107b184848484035f610bea565b50505050565b6001600160a01b0383166107e057604051634b637e8f60e11b81525f600482015260240161056d565b6001600160a01b0382166108095760405163ec442f0560e01b81525f600482015260240161056d565b610736838383610cbc565b6005546001600160a01b0316331461047f5760405163118cdaa760e01b815233600482015260240161056d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b600b545f90819081908190819081906001600160a01b039081169089160361094f5760646108c1600c89610f6a565b6108cb9190610f81565b9550600c6108da876004610f6a565b6108e49190610f81565b9450600c6108f3876004610f6a565b6108fd9190610f81565b9350600c61090c876001610f6a565b6109169190610f81565b9250600c610925876002610f6a565b61092f9190610f81565b9150600c61093e876001610f6a565b6109489190610f81565b90506109e6565b606461095c600a89610f6a565b6109669190610f81565b9550600a610975876003610f6a565b61097f9190610f81565b9450600a61098e876004610f6a565b6109989190610f81565b9350600a6109a7876001610f6a565b6109b19190610f81565b9250600a6109c0876001610f6a565b6109ca9190610f81565b9150600a6109d9876001610f6a565b6109e39190610f81565b90505b5f6109f18789610fb3565b600754909150610a0c908b906001600160a01b0316876107b7565b5f80516020610fc783398151915285604051610a5491815260406020820181905260129082015271115b98dbdd5c9859d95b595b9d08119d5b9960721b606082015260800190565b60405180910390a1600854610a74908b906001600160a01b0316866107b7565b5f80516020610fc783398151915284604051610ab8918152604060208201819052600e908201526d115b595c99d95b98de48119d5b9960921b606082015260800190565b60405180910390a1600954610ad8908b906001600160a01b0316856107b7565b5f80516020610fc783398151915283604051610b17918152604060208201819052600990820152684d61726b6574696e6760b81b606082015260800190565b60405180910390a1600a54610b37908b906001600160a01b0316846107b7565b5f80516020610fc783398151915282604051610b74918152604060208201819052600790820152665374616b696e6760c81b606082015260800190565b60405180910390a1610b878a30886107b7565b5f80516020610fc783398151915286604051610bcb918152604060208201819052600e908201526d131a5c5d5a591a5d1e48141bdbdb60921b606082015260800190565b60405180910390a1610bde8a8a836107b7565b50505050505050505050565b6001600160a01b038416610c135760405163e602df0560e01b81525f600482015260240161056d565b6001600160a01b038316610c3c57604051634a1406b160e11b81525f600482015260240161056d565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156107b157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cae91815260200190565b60405180910390a350505050565b6001600160a01b038316610ce6578060025f828254610cdb9190610fa0565b90915550610d569050565b6001600160a01b0383165f9081526020819052604090205481811015610d385760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161056d565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610d7257600280548290039055610d90565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dd591815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e2d575f80fd5b919050565b5f8060408385031215610e43575f80fd5b610e4c83610e17565b946020939093013593505050565b5f805f60608486031215610e6c575f80fd5b610e7584610e17565b9250610e8360208501610e17565b929592945050506040919091013590565b5f60208284031215610ea4575f80fd5b610ead82610e17565b9392505050565b5f8060408385031215610ec5575f80fd5b610ece83610e17565b915060208301358015158114610ee2575f80fd5b809150509250929050565b5f8060408385031215610efe575f80fd5b610f0783610e17565b9150610f1560208401610e17565b90509250929050565b600181811c90821680610f3257607f821691505b602082108103610f5057634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761044557610445610f56565b5f82610f9b57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561044557610445610f56565b8181038181111561044557610445610f5656fe6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984a26469706673582212204af43fdf31500a4b4e7051e891d241240e96188837a19f1fbe29640622f5409d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1525 CODESIZE SUB DUP1 PUSH2 0x1525 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x324 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2C22A0A6902A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x5845414D PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8B DUP3 DUP3 PUSH2 0x41D JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x15A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x136 CALLER PUSH11 0x1A784379D99DB42000000 PUSH2 0x1AB JUMP JUMPDEST POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0x4FC SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x1DF PUSH0 DUP4 DUP4 PUSH2 0x1E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x27D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x299 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x341 DUP7 PUSH2 0x309 JUMP JUMPDEST SWAP5 POP PUSH2 0x34F PUSH1 0x20 DUP8 ADD PUSH2 0x309 JUMP JUMPDEST SWAP4 POP PUSH2 0x35D PUSH1 0x40 DUP8 ADD PUSH2 0x309 JUMP JUMPDEST SWAP3 POP PUSH2 0x36B PUSH1 0x60 DUP8 ADD PUSH2 0x309 JUMP JUMPDEST SWAP2 POP PUSH2 0x379 PUSH1 0x80 DUP8 ADD PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x418 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3F6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x415 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x402 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x436 JUMPI PUSH2 0x436 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x44A DUP2 PUSH2 0x444 DUP5 SLOAD PUSH2 0x399 JUMP JUMPDEST DUP5 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x47C JUMPI PUSH0 DUP4 ISZERO PUSH2 0x465 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x415 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4AB JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x48B JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4C8 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101C DUP1 PUSH2 0x509 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x187 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x4FBEE193 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x36B4134A EQ PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x211 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x193 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH2 0x193 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH2 0x193 PUSH1 0xD DUP2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x46E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0xF1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0xF1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x428 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x43F DUP2 DUP6 DUP6 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x458 DUP6 DUP3 DUP6 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x463 DUP6 DUP6 DUP6 PUSH2 0x7B7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x476 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x47F PUSH0 PUSH2 0x841 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x489 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0xF1E JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x64 PUSH2 0x4F0 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP3 PUSH2 0x519 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x523 SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0x58F PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5F3 CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x604 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x6C6 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x70D DUP2 PUSH2 0x841 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x6C6 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x736 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x7B1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x7B1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBEA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x736 DUP4 DUP4 DUP4 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP10 AND SUB PUSH2 0x94F JUMPI PUSH1 0x64 PUSH2 0x8C1 PUSH1 0xC DUP10 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP6 POP PUSH1 0xC PUSH2 0x8DA DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0xC PUSH2 0x8F3 DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8FD SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0xC PUSH2 0x90C DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x916 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0xC PUSH2 0x925 DUP8 PUSH1 0x2 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0xC PUSH2 0x93E DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x95C PUSH1 0xA DUP10 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x966 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP6 POP PUSH1 0xA PUSH2 0x975 DUP8 PUSH1 0x3 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0xA PUSH2 0x98E DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x998 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0xA PUSH2 0x9A7 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0xA PUSH2 0x9C0 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0xA PUSH2 0x9D9 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0x9F1 DUP8 DUP10 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xA0C SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xA74 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xAB8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xAD8 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xB17 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xB37 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xB74 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB87 DUP11 ADDRESS DUP9 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD PUSH2 0xBCB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBDE DUP11 DUP11 DUP4 PUSH2 0x7B7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7B1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCAE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCE6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD56 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD72 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDD5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE2D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE4C DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP5 PUSH2 0xE17 JUMP JUMPDEST SWAP3 POP PUSH2 0xE83 PUSH1 0x20 DUP6 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAD DUP3 PUSH2 0xE17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECE DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF07 DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP PUSH2 0xF15 PUSH1 0x20 DUP5 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 BLOBBASEFEE DELEGATECALL EXTCODEHASH 0xDF BALANCE POP EXP 0x4B 0x4E PUSH17 0x51E891D241240E96188837A19F1FBE2964 MOD 0x22 CREATE2 BLOCKHASH SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "28095:4412:0:-:0;;;28915:550;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29140:10;12501:113;;;;;;;;;;;;;-1:-1:-1;;;12501:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12501:113:0;;;12575:5;12567;:13;;;;;;:::i;:::-;-1:-1:-1;12590:7:0;:17;12600:7;12590;:17;:::i;:::-;-1:-1:-1;;;;;;;;23044:26:0;;23040:95;;23093:31;;-1:-1:-1;;;23093:31:0;;23121:1;23093:31;;;3538:51:1;3511:18;;23093:31:0;;;;;;;;23040:95;23144:32;23163:12;23144:18;:32::i;:::-;-1:-1:-1;26622:1:0;26727:7;:22;29162:17:::2;:38:::0;;-1:-1:-1;;;;;;29162:38:0;;::::2;-1:-1:-1::0;;;;;29162:38:0;;::::2;::::0;;;::::2;::::0;;;29210:13:::2;:30:::0;;;::::2;::::0;;::::2;;::::0;;29250:15:::2;:34:::0;;;::::2;::::0;;::::2;;::::0;;29294:13:::2;:30:::0;;;::::2;::::0;;::::2;;::::0;;29334:11:::2;:33:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;29378::::2;29384:10;28196:18;29378:5;:33::i;:::-;-1:-1:-1::0;;29440:10:0::2;29421:30;::::0;;;:18:::2;:30;::::0;;;;:37;;-1:-1:-1;;29421:37:0::2;29454:4;29421:37;::::0;;-1:-1:-1;28095:4412:0;;-1:-1:-1;;28095:4412:0;24683:187;24775:6;;;-1:-1:-1;;;;;24791:17:0;;;-1:-1:-1;;;;;;24791:17:0;;;;;;;24823:40;;24775:6;;;24791:17;24775:6;;24823:40;;24756:16;;24823:40;24746:124;24683:187;:::o;18358:208::-;-1:-1:-1;;;;;18428:21:0;;18424:91;;18472:32;;-1:-1:-1;;;18472:32:0;;18501:1;18472:32;;;3538:51:1;3511:18;;18472:32:0;3392:203:1;18424:91:0;18524:35;18540:1;18544:7;18553:5;18524:7;:35::i;:::-;18358:208;;:::o;16908:1107::-;-1:-1:-1;;;;;16997:18:0;;16993:540;;17149:5;17133:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16993:540:0;;-1:-1:-1;16993:540:0;;-1:-1:-1;;;;;17207:15:0;;17185:19;17207:15;;;;;;;;;;;17240:19;;;17236:115;;;17286:50;;-1:-1:-1;;;17286:50:0;;-1:-1:-1;;;;;4047:32:1;;17286:50:0;;;4029:51:1;4096:18;;;4089:34;;;4139:18;;;4132:34;;;4002:18;;17286:50:0;3827:345:1;17236:115:0;-1:-1:-1;;;;;17471:15:0;;:9;:15;;;;;;;;;;17489:19;;;;17471:37;;16993:540;-1:-1:-1;;;;;17547:16:0;;17543:425;;17710:12;:21;;;;;;;17543:425;;;-1:-1:-1;;;;;17921:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17543:425;17998:2;-1:-1:-1;;;;;17983:25:0;17992:4;-1:-1:-1;;;;;17983:25:0;;18002:5;17983:25;;;;4323::1;;4311:2;4296:18;;4177:177;17983:25:0;;;;;;;;16908:1107;;;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;751:127::-;812:10;807:3;803:20;800:1;793:31;843:4;840:1;833:15;867:4;864:1;857:15;883:380;962:1;958:12;;;;1005;;;1026:61;;1080:4;1072:6;1068:17;1058:27;;1026:61;1133:2;1125:6;1122:14;1102:18;1099:38;1096:161;;1179:10;1174:3;1170:20;1167:1;1160:31;1214:4;1211:1;1204:15;1242:4;1239:1;1232:15;1096:161;;883:380;;;:::o;1394:518::-;1496:2;1491:3;1488:11;1485:421;;;1532:5;1529:1;1522:16;1576:4;1573:1;1563:18;1646:2;1634:10;1630:19;1627:1;1623:27;1617:4;1613:38;1682:4;1670:10;1667:20;1664:47;;;-1:-1:-1;1705:4:1;1664:47;1760:2;1755:3;1751:12;1748:1;1744:20;1738:4;1734:31;1724:41;;1815:81;1833:2;1826:5;1823:13;1815:81;;;1892:1;1878:16;;1859:1;1848:13;1815:81;;;1819:3;;1485:421;1394:518;;;:::o;2088:1299::-;2208:10;;-1:-1:-1;;;;;2230:30:1;;2227:56;;;2263:18;;:::i;:::-;2292:97;2382:6;2342:38;2374:4;2368:11;2342:38;:::i;:::-;2336:4;2292:97;:::i;:::-;2438:4;2469:2;2458:14;;2486:1;2481:649;;;;3174:1;3191:6;3188:89;;;-1:-1:-1;3243:19:1;;;3237:26;3188:89;-1:-1:-1;;2045:1:1;2041:11;;;2037:24;2033:29;2023:40;2069:1;2065:11;;;2020:57;3290:81;;2451:930;;2481:649;1341:1;1334:14;;;1378:4;1365:18;;-1:-1:-1;;2517:20:1;;;2635:222;2649:7;2646:1;2643:14;2635:222;;;2731:19;;;2725:26;2710:42;;2838:4;2823:20;;;;2791:1;2779:14;;;;2665:12;2635:222;;;2639:3;2885:6;2876:7;2873:19;2870:201;;;2946:19;;;2940:26;-1:-1:-1;;3029:1:1;3025:14;;;3041:3;3021:24;3017:37;3013:42;2998:58;2983:74;;2870:201;-1:-1:-1;;;;3117:1:1;3101:14;;;3097:22;3084:36;;-1:-1:-1;2088:1299:1:o;3600:222::-;3665:9;;;3686:10;;;3683:133;;;3738:10;3733:3;3729:20;3726:1;3719:31;3773:4;3770:1;3763:15;3801:4;3798:1;3791:15;3683:133;3600:222;;;;:::o;4177:177::-;28095:4412:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUY_TAX_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TX_1010": {
									"entryPoint": 1808,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_WALLET_1002": {
									"entryPoint": 1710,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SELL_TAX_1026": {
									"entryPoint": null,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SLIPPAGE_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 1833,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3050,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 2068,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 1851,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 2113,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferWithTaxes_1367": {
									"entryPoint": 2194,
									"id": 1367,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1975,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3260,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1074,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyFund_1014": {
									"entryPoint": null,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@encouragementFund_1012": {
									"entryPoint": null,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFees_1033": {
									"entryPoint": null,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1016": {
									"entryPoint": null,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 930,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1134,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingWallet_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1203,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1099,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 1747,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1143": {
									"entryPoint": 1218,
									"id": 1143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1020": {
									"entryPoint": null,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateExcludedAccountStatus_1383": {
									"entryPoint": 1153,
									"id": 1383,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateUniswapPair_1409": {
									"entryPoint": 1532,
									"id": 1409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7536:1",
										"nodeType": "YulBlock",
										"src": "0:7536:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "297:102:1",
													"nodeType": "YulBlock",
													"src": "297:102:1",
													"statements": [
														{
															"nativeSrc": "307:26:1",
															"nodeType": "YulAssignment",
															"src": "307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:1"
																},
																"nativeSrc": "315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "364:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "364:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "380:3:1",
																								"nodeType": "YulLiteral",
																								"src": "380:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "385:1:1",
																								"nodeType": "YulLiteral",
																								"src": "385:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "376:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "376:3:1"
																						},
																						"nativeSrc": "376:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "376:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "389:1:1",
																						"nodeType": "YulLiteral",
																						"src": "389:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "372:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "372:3:1"
																				},
																				"nativeSrc": "372:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "372:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "360:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:1"
																		},
																		"nativeSrc": "360:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "360:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:1"
																},
																"nativeSrc": "342:51:1",
																"nodeType": "YulFunctionCall",
																"src": "342:51:1"
															},
															"nativeSrc": "342:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "342:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "196:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "266:9:1",
														"nodeType": "YulTypedName",
														"src": "266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "277:6:1",
														"nodeType": "YulTypedName",
														"src": "277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "288:4:1",
														"nodeType": "YulTypedName",
														"src": "288:4:1",
														"type": ""
													}
												],
												"src": "196:203:1"
											},
											{
												"body": {
													"nativeSrc": "525:297:1",
													"nodeType": "YulBlock",
													"src": "525:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "542:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "542:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "535:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "535:6:1"
																},
																"nativeSrc": "535:21:1",
																"nodeType": "YulFunctionCall",
																"src": "535:21:1"
															},
															"nativeSrc": "535:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "535:21:1"
														},
														{
															"nativeSrc": "565:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "565:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "585:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "585:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "579:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "579:5:1"
																},
																"nativeSrc": "579:13:1",
																"nodeType": "YulFunctionCall",
																"src": "579:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "569:6:1",
																	"nodeType": "YulTypedName",
																	"src": "569:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "612:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "623:2:1",
																				"nodeType": "YulLiteral",
																				"src": "623:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "608:3:1"
																		},
																		"nativeSrc": "608:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "608:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "628:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "628:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:34:1",
																"nodeType": "YulFunctionCall",
																"src": "601:34:1"
															},
															"nativeSrc": "601:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "654:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "654:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "665:2:1",
																				"nodeType": "YulLiteral",
																				"src": "665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "650:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "650:3:1"
																		},
																		"nativeSrc": "650:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "650:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "674:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "674:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "682:2:1",
																				"nodeType": "YulLiteral",
																				"src": "682:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "670:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:1"
																		},
																		"nativeSrc": "670:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "670:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "687:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "687:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "644:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "644:5:1"
																},
																"nativeSrc": "644:50:1",
																"nodeType": "YulFunctionCall",
																"src": "644:50:1"
															},
															"nativeSrc": "644:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "644:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "718:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "718:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "729:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "714:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "714:3:1"
																				},
																				"nativeSrc": "714:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "714:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:2:1",
																				"nodeType": "YulLiteral",
																				"src": "738:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "710:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "710:3:1"
																		},
																		"nativeSrc": "710:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "710:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "743:1:1",
																		"nodeType": "YulLiteral",
																		"src": "743:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "703:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "703:6:1"
																},
																"nativeSrc": "703:42:1",
																"nodeType": "YulFunctionCall",
																"src": "703:42:1"
															},
															"nativeSrc": "703:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "703:42:1"
														},
														{
															"nativeSrc": "754:62:1",
															"nodeType": "YulAssignment",
															"src": "754:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "770:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "789:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "789:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "797:2:1",
																								"nodeType": "YulLiteral",
																								"src": "797:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "785:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "785:3:1"
																						},
																						"nativeSrc": "785:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "785:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "806:2:1",
																								"nodeType": "YulLiteral",
																								"src": "806:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "802:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "802:3:1"
																						},
																						"nativeSrc": "802:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "802:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "781:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:1"
																				},
																				"nativeSrc": "781:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "781:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:1"
																		},
																		"nativeSrc": "766:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "766:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "762:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nativeSrc": "762:54:1",
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "754:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "754:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "404:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "494:9:1",
														"nodeType": "YulTypedName",
														"src": "494:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "505:6:1",
														"nodeType": "YulTypedName",
														"src": "505:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "516:4:1",
														"nodeType": "YulTypedName",
														"src": "516:4:1",
														"type": ""
													}
												],
												"src": "404:418:1"
											},
											{
												"body": {
													"nativeSrc": "876:124:1",
													"nodeType": "YulBlock",
													"src": "876:124:1",
													"statements": [
														{
															"nativeSrc": "886:29:1",
															"nodeType": "YulAssignment",
															"src": "886:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "908:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "895:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:12:1"
																},
																"nativeSrc": "895:20:1",
																"nodeType": "YulFunctionCall",
																"src": "895:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "886:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "886:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "978:16:1",
																"nodeType": "YulBlock",
																"src": "978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:1"
																			},
																			"nativeSrc": "980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:1"
																		},
																		"nativeSrc": "980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "948:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "948:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "963:3:1",
																										"nodeType": "YulLiteral",
																										"src": "963:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "968:1:1",
																										"nodeType": "YulLiteral",
																										"src": "968:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "959:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "959:3:1"
																								},
																								"nativeSrc": "959:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "959:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "972:1:1",
																								"nodeType": "YulLiteral",
																								"src": "972:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "955:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "955:3:1"
																						},
																						"nativeSrc": "955:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "955:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "944:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "944:3:1"
																				},
																				"nativeSrc": "944:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "944:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "934:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "934:2:1"
																		},
																		"nativeSrc": "934:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "934:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "927:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nativeSrc": "927:50:1",
																"nodeType": "YulFunctionCall",
																"src": "927:50:1"
															},
															"nativeSrc": "924:70:1",
															"nodeType": "YulIf",
															"src": "924:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "827:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "855:6:1",
														"nodeType": "YulTypedName",
														"src": "855:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "866:5:1",
														"nodeType": "YulTypedName",
														"src": "866:5:1",
														"type": ""
													}
												],
												"src": "827:173:1"
											},
											{
												"body": {
													"nativeSrc": "1092:213:1",
													"nodeType": "YulBlock",
													"src": "1092:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1138:16:1",
																"nodeType": "YulBlock",
																"src": "1138:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1147:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1147:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1150:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1140:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:1"
																			},
																			"nativeSrc": "1140:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1140:12:1"
																		},
																		"nativeSrc": "1140:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1140:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1113:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1122:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:1"
																		},
																		"nativeSrc": "1109:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:1"
																},
																"nativeSrc": "1105:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1105:32:1"
															},
															"nativeSrc": "1102:52:1",
															"nodeType": "YulIf",
															"src": "1102:52:1"
														},
														{
															"nativeSrc": "1163:39:1",
															"nodeType": "YulAssignment",
															"src": "1163:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1192:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1192:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1173:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1173:18:1"
																},
																"nativeSrc": "1173:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1173:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1163:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:1"
																}
															]
														},
														{
															"nativeSrc": "1211:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1211:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1224:1:1",
																"nodeType": "YulLiteral",
																"src": "1224:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1215:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1215:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1234:41:1",
															"nodeType": "YulAssignment",
															"src": "1234:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1260:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1271:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:1"
																		},
																		"nativeSrc": "1256:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1256:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1243:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1243:12:1"
																},
																"nativeSrc": "1243:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1243:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1234:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1234:5:1"
																}
															]
														},
														{
															"nativeSrc": "1284:15:1",
															"nodeType": "YulAssignment",
															"src": "1284:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1294:5:1",
																"nodeType": "YulIdentifier",
																"src": "1294:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1284:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1005:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1050:9:1",
														"nodeType": "YulTypedName",
														"src": "1050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1061:7:1",
														"nodeType": "YulTypedName",
														"src": "1061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1073:6:1",
														"nodeType": "YulTypedName",
														"src": "1073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1081:6:1",
														"nodeType": "YulTypedName",
														"src": "1081:6:1",
														"type": ""
													}
												],
												"src": "1005:300:1"
											},
											{
												"body": {
													"nativeSrc": "1405:92:1",
													"nodeType": "YulBlock",
													"src": "1405:92:1",
													"statements": [
														{
															"nativeSrc": "1415:26:1",
															"nodeType": "YulAssignment",
															"src": "1415:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1427:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1438:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1438:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1423:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1423:3:1"
																},
																"nativeSrc": "1423:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1423:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1415:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1457:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1457:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1482:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1475:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1475:6:1"
																				},
																				"nativeSrc": "1475:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1475:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1468:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1468:6:1"
																		},
																		"nativeSrc": "1468:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1450:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:1"
																},
																"nativeSrc": "1450:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1450:41:1"
															},
															"nativeSrc": "1450:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1450:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1310:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1374:9:1",
														"nodeType": "YulTypedName",
														"src": "1374:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1385:6:1",
														"nodeType": "YulTypedName",
														"src": "1385:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1396:4:1",
														"nodeType": "YulTypedName",
														"src": "1396:4:1",
														"type": ""
													}
												],
												"src": "1310:187:1"
											},
											{
												"body": {
													"nativeSrc": "1606:270:1",
													"nodeType": "YulBlock",
													"src": "1606:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:1",
																"nodeType": "YulBlock",
																"src": "1652:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:1"
																			},
																			"nativeSrc": "1654:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:1"
																		},
																		"nativeSrc": "1654:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:1"
																},
																"nativeSrc": "1619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:1"
															},
															"nativeSrc": "1616:52:1",
															"nodeType": "YulIf",
															"src": "1616:52:1"
														},
														{
															"nativeSrc": "1677:39:1",
															"nodeType": "YulAssignment",
															"src": "1677:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:1"
																},
																"nativeSrc": "1687:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																}
															]
														},
														{
															"nativeSrc": "1725:48:1",
															"nodeType": "YulAssignment",
															"src": "1725:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:1"
																		},
																		"nativeSrc": "1754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:1"
																},
																"nativeSrc": "1735:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:1"
																}
															]
														},
														{
															"nativeSrc": "1782:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:1",
																"nodeType": "YulLiteral",
																"src": "1795:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:1",
															"nodeType": "YulAssignment",
															"src": "1805:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:1"
																},
																"nativeSrc": "1814:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:1"
																}
															]
														},
														{
															"nativeSrc": "1855:15:1",
															"nodeType": "YulAssignment",
															"src": "1855:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:1",
																"nodeType": "YulIdentifier",
																"src": "1865:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:1",
														"nodeType": "YulTypedName",
														"src": "1556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:1",
														"nodeType": "YulTypedName",
														"src": "1567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:1",
														"nodeType": "YulTypedName",
														"src": "1579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:1",
														"nodeType": "YulTypedName",
														"src": "1587:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:1",
														"nodeType": "YulTypedName",
														"src": "1595:6:1",
														"type": ""
													}
												],
												"src": "1502:374:1"
											},
											{
												"body": {
													"nativeSrc": "1978:87:1",
													"nodeType": "YulBlock",
													"src": "1978:87:1",
													"statements": [
														{
															"nativeSrc": "1988:26:1",
															"nodeType": "YulAssignment",
															"src": "1988:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2000:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1996:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:1"
																},
																"nativeSrc": "1996:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1996:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2030:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2053:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2053:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2041:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:1"
																		},
																		"nativeSrc": "2041:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2023:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:1"
																},
																"nativeSrc": "2023:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2023:36:1"
															},
															"nativeSrc": "2023:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2023:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1881:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1947:9:1",
														"nodeType": "YulTypedName",
														"src": "1947:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1958:6:1",
														"nodeType": "YulTypedName",
														"src": "1958:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1969:4:1",
														"nodeType": "YulTypedName",
														"src": "1969:4:1",
														"type": ""
													}
												],
												"src": "1881:184:1"
											},
											{
												"body": {
													"nativeSrc": "2140:116:1",
													"nodeType": "YulBlock",
													"src": "2140:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:1",
																"nodeType": "YulBlock",
																"src": "2186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:1"
																			},
																			"nativeSrc": "2188:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:1"
																		},
																		"nativeSrc": "2188:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:1"
																		},
																		"nativeSrc": "2157:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nativeSrc": "2153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:1"
															},
															"nativeSrc": "2150:52:1",
															"nodeType": "YulIf",
															"src": "2150:52:1"
														},
														{
															"nativeSrc": "2211:39:1",
															"nodeType": "YulAssignment",
															"src": "2211:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:1"
																},
																"nativeSrc": "2221:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2070:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2106:9:1",
														"nodeType": "YulTypedName",
														"src": "2106:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2117:7:1",
														"nodeType": "YulTypedName",
														"src": "2117:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2129:6:1",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													}
												],
												"src": "2070:186:1"
											},
											{
												"body": {
													"nativeSrc": "2345:263:1",
													"nodeType": "YulBlock",
													"src": "2345:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2391:16:1",
																"nodeType": "YulBlock",
																"src": "2391:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2400:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2393:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:1"
																			},
																			"nativeSrc": "2393:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2393:12:1"
																		},
																		"nativeSrc": "2393:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2393:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2366:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2366:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2375:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2375:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2362:3:1"
																		},
																		"nativeSrc": "2362:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2362:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2387:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2387:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:3:1"
																},
																"nativeSrc": "2358:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:32:1"
															},
															"nativeSrc": "2355:52:1",
															"nodeType": "YulIf",
															"src": "2355:52:1"
														},
														{
															"nativeSrc": "2416:39:1",
															"nodeType": "YulAssignment",
															"src": "2416:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2445:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2445:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2426:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2426:18:1"
																},
																"nativeSrc": "2426:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2426:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2416:6:1"
																}
															]
														},
														{
															"nativeSrc": "2464:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2464:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2505:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2505:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2490:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2490:3:1"
																		},
																		"nativeSrc": "2490:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2490:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2477:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:12:1"
																},
																"nativeSrc": "2477:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2468:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2468:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2562:16:1",
																"nodeType": "YulBlock",
																"src": "2562:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2571:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2571:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2574:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2574:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2564:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2564:6:1"
																			},
																			"nativeSrc": "2564:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2564:12:1"
																		},
																		"nativeSrc": "2564:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2564:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2531:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2531:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2552:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2552:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2545:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2545:6:1"
																						},
																						"nativeSrc": "2545:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2545:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2538:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2538:6:1"
																				},
																				"nativeSrc": "2538:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2538:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2528:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2528:2:1"
																		},
																		"nativeSrc": "2528:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:1"
																},
																"nativeSrc": "2521:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2521:40:1"
															},
															"nativeSrc": "2518:60:1",
															"nodeType": "YulIf",
															"src": "2518:60:1"
														},
														{
															"nativeSrc": "2587:15:1",
															"nodeType": "YulAssignment",
															"src": "2587:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2597:5:1",
																"nodeType": "YulIdentifier",
																"src": "2597:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2261:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2303:9:1",
														"nodeType": "YulTypedName",
														"src": "2303:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2314:7:1",
														"nodeType": "YulTypedName",
														"src": "2314:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2326:6:1",
														"nodeType": "YulTypedName",
														"src": "2326:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2334:6:1",
														"nodeType": "YulTypedName",
														"src": "2334:6:1",
														"type": ""
													}
												],
												"src": "2261:347:1"
											},
											{
												"body": {
													"nativeSrc": "2700:173:1",
													"nodeType": "YulBlock",
													"src": "2700:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2746:16:1",
																"nodeType": "YulBlock",
																"src": "2746:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2755:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2758:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2748:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2748:6:1"
																			},
																			"nativeSrc": "2748:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2748:12:1"
																		},
																		"nativeSrc": "2748:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2748:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2721:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2721:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2730:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2730:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2717:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:1"
																		},
																		"nativeSrc": "2717:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2742:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2713:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:1"
																},
																"nativeSrc": "2713:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2713:32:1"
															},
															"nativeSrc": "2710:52:1",
															"nodeType": "YulIf",
															"src": "2710:52:1"
														},
														{
															"nativeSrc": "2771:39:1",
															"nodeType": "YulAssignment",
															"src": "2771:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2800:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2781:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2781:18:1"
																},
																"nativeSrc": "2781:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2781:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2771:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:1"
																}
															]
														},
														{
															"nativeSrc": "2819:48:1",
															"nodeType": "YulAssignment",
															"src": "2819:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2852:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2852:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2863:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2848:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:1"
																		},
																		"nativeSrc": "2848:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2829:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2829:18:1"
																},
																"nativeSrc": "2829:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2829:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2613:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2658:9:1",
														"nodeType": "YulTypedName",
														"src": "2658:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2669:7:1",
														"nodeType": "YulTypedName",
														"src": "2669:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2681:6:1",
														"nodeType": "YulTypedName",
														"src": "2681:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2689:6:1",
														"nodeType": "YulTypedName",
														"src": "2689:6:1",
														"type": ""
													}
												],
												"src": "2613:260:1"
											},
											{
												"body": {
													"nativeSrc": "2933:325:1",
													"nodeType": "YulBlock",
													"src": "2933:325:1",
													"statements": [
														{
															"nativeSrc": "2943:22:1",
															"nodeType": "YulAssignment",
															"src": "2943:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2957:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2957:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2960:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2960:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2953:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:1"
																},
																"nativeSrc": "2953:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2953:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2943:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:1"
																}
															]
														},
														{
															"nativeSrc": "2974:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2974:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3004:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3004:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3010:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3000:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nativeSrc": "3000:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3000:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2978:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2978:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3051:31:1",
																"nodeType": "YulBlock",
																"src": "3051:31:1",
																"statements": [
																	{
																		"nativeSrc": "3053:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3053:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3067:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3067:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3075:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3075:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3063:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3063:3:1"
																			},
																			"nativeSrc": "3063:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3063:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3053:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3053:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3031:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3031:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3024:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:1"
																},
																"nativeSrc": "3024:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3024:26:1"
															},
															"nativeSrc": "3021:61:1",
															"nodeType": "YulIf",
															"src": "3021:61:1"
														},
														{
															"body": {
																"nativeSrc": "3141:111:1",
																"nodeType": "YulBlock",
																"src": "3141:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3162:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3162:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3169:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3169:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3174:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3174:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3165:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3165:3:1"
																					},
																					"nativeSrc": "3165:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3165:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3155:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:6:1"
																			},
																			"nativeSrc": "3155:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3155:31:1"
																		},
																		"nativeSrc": "3155:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3155:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3209:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3209:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3199:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:1"
																			},
																			"nativeSrc": "3199:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:15:1"
																		},
																		"nativeSrc": "3199:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3234:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3234:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3237:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3237:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3227:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3227:6:1"
																			},
																			"nativeSrc": "3227:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3227:15:1"
																		},
																		"nativeSrc": "3227:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3227:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3097:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3097:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3120:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3120:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3117:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3117:2:1"
																		},
																		"nativeSrc": "3117:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3094:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3094:2:1"
																},
																"nativeSrc": "3094:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3094:38:1"
															},
															"nativeSrc": "3091:161:1",
															"nodeType": "YulIf",
															"src": "3091:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2878:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2913:4:1",
														"nodeType": "YulTypedName",
														"src": "2913:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2922:6:1",
														"nodeType": "YulTypedName",
														"src": "2922:6:1",
														"type": ""
													}
												],
												"src": "2878:380:1"
											},
											{
												"body": {
													"nativeSrc": "3295:95:1",
													"nodeType": "YulBlock",
													"src": "3295:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3312:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3312:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3319:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3319:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3324:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3315:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:1"
																		},
																		"nativeSrc": "3315:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3315:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3305:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:1"
																},
																"nativeSrc": "3305:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3305:31:1"
															},
															"nativeSrc": "3305:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3305:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3355:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:1"
																},
																"nativeSrc": "3345:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3345:15:1"
															},
															"nativeSrc": "3345:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3345:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3376:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3376:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3379:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3379:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:1"
																},
																"nativeSrc": "3369:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3369:15:1"
															},
															"nativeSrc": "3369:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3369:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3263:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3263:127:1"
											},
											{
												"body": {
													"nativeSrc": "3447:116:1",
													"nodeType": "YulBlock",
													"src": "3447:116:1",
													"statements": [
														{
															"nativeSrc": "3457:20:1",
															"nodeType": "YulAssignment",
															"src": "3457:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3472:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3475:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3475:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3468:3:1"
																},
																"nativeSrc": "3468:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3468:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3457:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3457:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3535:22:1",
																"nodeType": "YulBlock",
																"src": "3535:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3537:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3537:16:1"
																			},
																			"nativeSrc": "3537:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3537:18:1"
																		},
																		"nativeSrc": "3537:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3537:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3506:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3506:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3499:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3499:6:1"
																				},
																				"nativeSrc": "3499:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3513:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3513:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3520:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "3520:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3529:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "3529:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3516:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3516:3:1"
																						},
																						"nativeSrc": "3516:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3516:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3510:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:1"
																				},
																				"nativeSrc": "3510:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3496:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3496:2:1"
																		},
																		"nativeSrc": "3496:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3496:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3489:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3489:6:1"
																},
																"nativeSrc": "3489:45:1",
																"nodeType": "YulFunctionCall",
																"src": "3489:45:1"
															},
															"nativeSrc": "3486:71:1",
															"nodeType": "YulIf",
															"src": "3486:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3395:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3426:1:1",
														"nodeType": "YulTypedName",
														"src": "3426:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3429:1:1",
														"nodeType": "YulTypedName",
														"src": "3429:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3435:7:1",
														"nodeType": "YulTypedName",
														"src": "3435:7:1",
														"type": ""
													}
												],
												"src": "3395:168:1"
											},
											{
												"body": {
													"nativeSrc": "3614:171:1",
													"nodeType": "YulBlock",
													"src": "3614:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3645:111:1",
																"nodeType": "YulBlock",
																"src": "3645:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3666:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3666:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3673:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3673:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3678:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3678:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3669:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3669:3:1"
																					},
																					"nativeSrc": "3669:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3669:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3659:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3659:6:1"
																			},
																			"nativeSrc": "3659:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3659:31:1"
																		},
																		"nativeSrc": "3659:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3659:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3710:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3710:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3713:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3713:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3703:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3703:6:1"
																			},
																			"nativeSrc": "3703:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3703:15:1"
																		},
																		"nativeSrc": "3703:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3703:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3738:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3738:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3741:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3741:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3731:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3731:6:1"
																			},
																			"nativeSrc": "3731:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3731:15:1"
																		},
																		"nativeSrc": "3731:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3731:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3634:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3634:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nativeSrc": "3627:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3627:9:1"
															},
															"nativeSrc": "3624:132:1",
															"nodeType": "YulIf",
															"src": "3624:132:1"
														},
														{
															"nativeSrc": "3765:14:1",
															"nodeType": "YulAssignment",
															"src": "3765:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3774:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3777:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3777:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3770:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:1"
																},
																"nativeSrc": "3770:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3770:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3765:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3765:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3568:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3599:1:1",
														"nodeType": "YulTypedName",
														"src": "3599:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3602:1:1",
														"nodeType": "YulTypedName",
														"src": "3602:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3608:1:1",
														"nodeType": "YulTypedName",
														"src": "3608:1:1",
														"type": ""
													}
												],
												"src": "3568:217:1"
											},
											{
												"body": {
													"nativeSrc": "3838:77:1",
													"nodeType": "YulBlock",
													"src": "3838:77:1",
													"statements": [
														{
															"nativeSrc": "3848:16:1",
															"nodeType": "YulAssignment",
															"src": "3848:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3859:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3859:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3862:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3862:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3855:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:1"
																},
																"nativeSrc": "3855:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3855:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3848:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3887:22:1",
																"nodeType": "YulBlock",
																"src": "3887:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3889:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3889:16:1"
																			},
																			"nativeSrc": "3889:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3889:18:1"
																		},
																		"nativeSrc": "3889:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3889:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3879:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3879:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3882:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3876:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3876:2:1"
																},
																"nativeSrc": "3876:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3876:10:1"
															},
															"nativeSrc": "3873:36:1",
															"nodeType": "YulIf",
															"src": "3873:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3790:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3821:1:1",
														"nodeType": "YulTypedName",
														"src": "3821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3824:1:1",
														"nodeType": "YulTypedName",
														"src": "3824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3830:3:1",
														"nodeType": "YulTypedName",
														"src": "3830:3:1",
														"type": ""
													}
												],
												"src": "3790:125:1"
											},
											{
												"body": {
													"nativeSrc": "4094:174:1",
													"nodeType": "YulBlock",
													"src": "4094:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4111:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4111:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4122:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:1"
																},
																"nativeSrc": "4104:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4104:21:1"
															},
															"nativeSrc": "4104:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4104:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4145:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4156:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:1"
																		},
																		"nativeSrc": "4141:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4141:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4161:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4161:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:1"
																},
																"nativeSrc": "4134:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4134:30:1"
															},
															"nativeSrc": "4134:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4134:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4184:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4184:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4195:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:1"
																		},
																		"nativeSrc": "4180:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:18:1"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"kind": "string",
																		"nativeSrc": "4200:26:1",
																		"nodeType": "YulLiteral",
																		"src": "4200:26:1",
																		"type": "",
																		"value": "Exceeds max wallet limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:1"
																},
																"nativeSrc": "4173:54:1",
																"nodeType": "YulFunctionCall",
																"src": "4173:54:1"
															},
															"nativeSrc": "4173:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "4173:54:1"
														},
														{
															"nativeSrc": "4236:26:1",
															"nodeType": "YulAssignment",
															"src": "4236:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4248:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4248:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4259:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4259:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4244:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4244:3:1"
																},
																"nativeSrc": "4244:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4244:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4236:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4236:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3920:348:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4071:9:1",
														"nodeType": "YulTypedName",
														"src": "4071:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4085:4:1",
														"nodeType": "YulTypedName",
														"src": "4085:4:1",
														"type": ""
													}
												],
												"src": "3920:348:1"
											},
											{
												"body": {
													"nativeSrc": "4447:179:1",
													"nodeType": "YulBlock",
													"src": "4447:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4464:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4464:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4475:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4457:6:1"
																},
																"nativeSrc": "4457:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4457:21:1"
															},
															"nativeSrc": "4457:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4457:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4498:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4509:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4494:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nativeSrc": "4494:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4514:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nativeSrc": "4487:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:30:1"
															},
															"nativeSrc": "4487:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4487:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4548:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4548:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4533:3:1"
																		},
																		"nativeSrc": "4533:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4533:18:1"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "4553:31:1",
																		"nodeType": "YulLiteral",
																		"src": "4553:31:1",
																		"type": "",
																		"value": "Exceeds max transaction limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:1"
																},
																"nativeSrc": "4526:59:1",
																"nodeType": "YulFunctionCall",
																"src": "4526:59:1"
															},
															"nativeSrc": "4526:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "4526:59:1"
														},
														{
															"nativeSrc": "4594:26:1",
															"nodeType": "YulAssignment",
															"src": "4594:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4606:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4606:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4617:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4617:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:1"
																},
																"nativeSrc": "4602:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4602:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4594:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4594:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4273:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4424:9:1",
														"nodeType": "YulTypedName",
														"src": "4424:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4438:4:1",
														"nodeType": "YulTypedName",
														"src": "4438:4:1",
														"type": ""
													}
												],
												"src": "4273:353:1"
											},
											{
												"body": {
													"nativeSrc": "4805:181:1",
													"nodeType": "YulBlock",
													"src": "4805:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4822:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4822:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:1"
																},
																"nativeSrc": "4815:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4815:21:1"
															},
															"nativeSrc": "4815:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4815:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4856:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4867:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4852:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nativeSrc": "4852:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4872:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4845:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nativeSrc": "4845:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4845:30:1"
															},
															"nativeSrc": "4845:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4845:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4895:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4906:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4906:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4891:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:1"
																		},
																		"nativeSrc": "4891:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4891:18:1"
																	},
																	{
																		"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "4911:33:1",
																		"nodeType": "YulLiteral",
																		"src": "4911:33:1",
																		"type": "",
																		"value": "New pair address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:1"
																},
																"nativeSrc": "4884:61:1",
																"nodeType": "YulFunctionCall",
																"src": "4884:61:1"
															},
															"nativeSrc": "4884:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "4884:61:1"
														},
														{
															"nativeSrc": "4954:26:1",
															"nodeType": "YulAssignment",
															"src": "4954:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4966:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4966:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4977:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4977:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4962:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4962:3:1"
																},
																"nativeSrc": "4962:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4962:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4954:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4954:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4631:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:1",
														"nodeType": "YulTypedName",
														"src": "4782:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4796:4:1",
														"nodeType": "YulTypedName",
														"src": "4796:4:1",
														"type": ""
													}
												],
												"src": "4631:355:1"
											},
											{
												"body": {
													"nativeSrc": "5148:188:1",
													"nodeType": "YulBlock",
													"src": "5148:188:1",
													"statements": [
														{
															"nativeSrc": "5158:26:1",
															"nodeType": "YulAssignment",
															"src": "5158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5170:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5181:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:1"
																},
																"nativeSrc": "5166:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5158:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5200:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5215:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5231:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5231:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5236:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5236:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5227:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5227:3:1"
																						},
																						"nativeSrc": "5227:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5227:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5240:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5240:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5223:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5223:3:1"
																				},
																				"nativeSrc": "5223:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5223:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5211:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:1"
																		},
																		"nativeSrc": "5211:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5211:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:1"
																},
																"nativeSrc": "5193:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5193:51:1"
															},
															"nativeSrc": "5193:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "5193:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:1"
																		},
																		"nativeSrc": "5260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5260:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5280:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5280:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:1"
																},
																"nativeSrc": "5253:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5253:34:1"
															},
															"nativeSrc": "5253:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5253:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5307:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5307:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5318:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5318:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:1"
																		},
																		"nativeSrc": "5303:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5303:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5323:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5296:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5296:6:1"
																},
																"nativeSrc": "5296:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5296:34:1"
															},
															"nativeSrc": "5296:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5296:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4991:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5101:9:1",
														"nodeType": "YulTypedName",
														"src": "5101:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5112:6:1",
														"nodeType": "YulTypedName",
														"src": "5112:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5120:6:1",
														"nodeType": "YulTypedName",
														"src": "5120:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5128:6:1",
														"nodeType": "YulTypedName",
														"src": "5128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5139:4:1",
														"nodeType": "YulTypedName",
														"src": "5139:4:1",
														"type": ""
													}
												],
												"src": "4991:345:1"
											},
											{
												"body": {
													"nativeSrc": "5390:79:1",
													"nodeType": "YulBlock",
													"src": "5390:79:1",
													"statements": [
														{
															"nativeSrc": "5400:17:1",
															"nodeType": "YulAssignment",
															"src": "5400:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5412:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5415:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5408:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:1"
																},
																"nativeSrc": "5408:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5408:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5400:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5400:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5441:22:1",
																"nodeType": "YulBlock",
																"src": "5441:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5443:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5443:16:1"
																			},
																			"nativeSrc": "5443:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5443:18:1"
																		},
																		"nativeSrc": "5443:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5432:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5438:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5438:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5429:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:1"
																},
																"nativeSrc": "5429:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5429:11:1"
															},
															"nativeSrc": "5426:37:1",
															"nodeType": "YulIf",
															"src": "5426:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5341:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5372:1:1",
														"nodeType": "YulTypedName",
														"src": "5372:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5375:1:1",
														"nodeType": "YulTypedName",
														"src": "5375:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5381:4:1",
														"nodeType": "YulTypedName",
														"src": "5381:4:1",
														"type": ""
													}
												],
												"src": "5341:128:1"
											},
											{
												"body": {
													"nativeSrc": "5676:212:1",
													"nodeType": "YulBlock",
													"src": "5676:212:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5704:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:1"
																},
																"nativeSrc": "5686:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5686:25:1"
															},
															"nativeSrc": "5686:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5686:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5742:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5742:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:1"
																		},
																		"nativeSrc": "5727:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5727:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5747:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5747:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:1"
																},
																"nativeSrc": "5720:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5720:30:1"
															},
															"nativeSrc": "5720:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5720:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5770:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5770:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5781:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5781:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5766:3:1"
																		},
																		"nativeSrc": "5766:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5766:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5786:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5786:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:1"
																},
																"nativeSrc": "5759:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5759:30:1"
															},
															"nativeSrc": "5759:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5759:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5809:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5809:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5820:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5820:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5805:3:1"
																		},
																		"nativeSrc": "5805:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5805:18:1"
																	},
																	{
																		"hexValue": "456e636f75726167656d656e742046756e64",
																		"kind": "string",
																		"nativeSrc": "5825:20:1",
																		"nodeType": "YulLiteral",
																		"src": "5825:20:1",
																		"type": "",
																		"value": "Encouragement Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5798:6:1"
																},
																"nativeSrc": "5798:48:1",
																"nodeType": "YulFunctionCall",
																"src": "5798:48:1"
															},
															"nativeSrc": "5798:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "5798:48:1"
														},
														{
															"nativeSrc": "5855:27:1",
															"nodeType": "YulAssignment",
															"src": "5855:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5867:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5867:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5878:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5878:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5863:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5863:3:1"
																},
																"nativeSrc": "5863:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5863:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5855:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5855:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5474:414:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5645:9:1",
														"nodeType": "YulTypedName",
														"src": "5645:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5656:6:1",
														"nodeType": "YulTypedName",
														"src": "5656:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5667:4:1",
														"nodeType": "YulTypedName",
														"src": "5667:4:1",
														"type": ""
													}
												],
												"src": "5474:414:1"
											},
											{
												"body": {
													"nativeSrc": "6095:208:1",
													"nodeType": "YulBlock",
													"src": "6095:208:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6112:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6112:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6123:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6123:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6105:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6105:6:1"
																},
																"nativeSrc": "6105:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6105:25:1"
															},
															"nativeSrc": "6105:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6105:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6150:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6161:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6161:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6146:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:1"
																		},
																		"nativeSrc": "6146:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6166:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6166:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6139:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6139:6:1"
																},
																"nativeSrc": "6139:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6139:30:1"
															},
															"nativeSrc": "6139:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6139:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6200:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6200:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:1"
																		},
																		"nativeSrc": "6185:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6205:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6205:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6178:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:1"
																},
																"nativeSrc": "6178:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6178:30:1"
															},
															"nativeSrc": "6178:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6228:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6228:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6239:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6239:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6224:3:1"
																		},
																		"nativeSrc": "6224:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6224:18:1"
																	},
																	{
																		"hexValue": "456d657267656e63792046756e64",
																		"kind": "string",
																		"nativeSrc": "6244:16:1",
																		"nodeType": "YulLiteral",
																		"src": "6244:16:1",
																		"type": "",
																		"value": "Emergency Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6217:6:1"
																},
																"nativeSrc": "6217:44:1",
																"nodeType": "YulFunctionCall",
																"src": "6217:44:1"
															},
															"nativeSrc": "6217:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "6217:44:1"
														},
														{
															"nativeSrc": "6270:27:1",
															"nodeType": "YulAssignment",
															"src": "6270:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6282:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6282:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6293:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6293:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6278:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6278:3:1"
																},
																"nativeSrc": "6278:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6278:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6270:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6270:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5893:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6064:9:1",
														"nodeType": "YulTypedName",
														"src": "6064:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6075:6:1",
														"nodeType": "YulTypedName",
														"src": "6075:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6086:4:1",
														"nodeType": "YulTypedName",
														"src": "6086:4:1",
														"type": ""
													}
												],
												"src": "5893:410:1"
											},
											{
												"body": {
													"nativeSrc": "6510:202:1",
													"nodeType": "YulBlock",
													"src": "6510:202:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6527:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6527:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6538:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:1"
																},
																"nativeSrc": "6520:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6520:25:1"
															},
															"nativeSrc": "6520:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6520:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6565:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6576:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6561:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:1"
																		},
																		"nativeSrc": "6561:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6581:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:1"
																},
																"nativeSrc": "6554:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6554:30:1"
															},
															"nativeSrc": "6554:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6554:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6604:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:1"
																		},
																		"nativeSrc": "6600:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6620:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6593:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:1"
																},
																"nativeSrc": "6593:29:1",
																"nodeType": "YulFunctionCall",
																"src": "6593:29:1"
															},
															"nativeSrc": "6593:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "6593:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6653:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6638:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:1"
																		},
																		"nativeSrc": "6638:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:1"
																	},
																	{
																		"hexValue": "4d61726b6574696e67",
																		"kind": "string",
																		"nativeSrc": "6658:11:1",
																		"nodeType": "YulLiteral",
																		"src": "6658:11:1",
																		"type": "",
																		"value": "Marketing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6631:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:1"
																},
																"nativeSrc": "6631:39:1",
																"nodeType": "YulFunctionCall",
																"src": "6631:39:1"
															},
															"nativeSrc": "6631:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "6631:39:1"
														},
														{
															"nativeSrc": "6679:27:1",
															"nodeType": "YulAssignment",
															"src": "6679:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6691:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6691:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6702:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6702:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6687:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:1"
																},
																"nativeSrc": "6687:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6687:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6679:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6308:404:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6479:9:1",
														"nodeType": "YulTypedName",
														"src": "6479:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6490:6:1",
														"nodeType": "YulTypedName",
														"src": "6490:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6501:4:1",
														"nodeType": "YulTypedName",
														"src": "6501:4:1",
														"type": ""
													}
												],
												"src": "6308:404:1"
											},
											{
												"body": {
													"nativeSrc": "6919:200:1",
													"nodeType": "YulBlock",
													"src": "6919:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6947:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6947:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nativeSrc": "6929:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6929:25:1"
															},
															"nativeSrc": "6929:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6929:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6974:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6985:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6970:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:1"
																		},
																		"nativeSrc": "6970:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6990:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6990:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:1"
																},
																"nativeSrc": "6963:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6963:30:1"
															},
															"nativeSrc": "6963:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6963:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7013:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7024:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7024:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7009:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:1"
																		},
																		"nativeSrc": "7009:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7009:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7029:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7029:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7002:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:1"
																},
																"nativeSrc": "7002:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7002:29:1"
															},
															"nativeSrc": "7002:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "7002:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7051:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7062:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7062:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7047:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:1"
																		},
																		"nativeSrc": "7047:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:18:1"
																	},
																	{
																		"hexValue": "5374616b696e67",
																		"kind": "string",
																		"nativeSrc": "7067:9:1",
																		"nodeType": "YulLiteral",
																		"src": "7067:9:1",
																		"type": "",
																		"value": "Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7040:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:1"
																},
																"nativeSrc": "7040:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7040:37:1"
															},
															"nativeSrc": "7040:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7040:37:1"
														},
														{
															"nativeSrc": "7086:27:1",
															"nodeType": "YulAssignment",
															"src": "7086:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7098:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7098:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7109:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7109:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7094:3:1"
																},
																"nativeSrc": "7094:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7094:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7086:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7086:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6717:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6888:9:1",
														"nodeType": "YulTypedName",
														"src": "6888:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6899:6:1",
														"nodeType": "YulTypedName",
														"src": "6899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6910:4:1",
														"nodeType": "YulTypedName",
														"src": "6910:4:1",
														"type": ""
													}
												],
												"src": "6717:402:1"
											},
											{
												"body": {
													"nativeSrc": "7326:208:1",
													"nodeType": "YulBlock",
													"src": "7326:208:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7343:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7343:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7354:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:1"
																},
																"nativeSrc": "7336:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7336:25:1"
															},
															"nativeSrc": "7336:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7336:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7392:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:1"
																		},
																		"nativeSrc": "7377:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7397:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7397:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:1"
																},
																"nativeSrc": "7370:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7370:30:1"
															},
															"nativeSrc": "7370:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7370:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7420:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7431:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7431:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7416:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:1"
																		},
																		"nativeSrc": "7416:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7416:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7436:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7436:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7409:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:1"
																},
																"nativeSrc": "7409:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7409:30:1"
															},
															"nativeSrc": "7409:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7409:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7459:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7459:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7470:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7470:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7455:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:1"
																		},
																		"nativeSrc": "7455:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:18:1"
																	},
																	{
																		"hexValue": "4c697175696469747920506f6f6c",
																		"kind": "string",
																		"nativeSrc": "7475:16:1",
																		"nodeType": "YulLiteral",
																		"src": "7475:16:1",
																		"type": "",
																		"value": "Liquidity Pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7448:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:1"
																},
																"nativeSrc": "7448:44:1",
																"nodeType": "YulFunctionCall",
																"src": "7448:44:1"
															},
															"nativeSrc": "7448:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "7448:44:1"
														},
														{
															"nativeSrc": "7501:27:1",
															"nodeType": "YulAssignment",
															"src": "7501:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7513:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7513:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7524:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7509:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7509:3:1"
																},
																"nativeSrc": "7509:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7509:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7501:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7501:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7124:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7295:9:1",
														"nodeType": "YulTypedName",
														"src": "7295:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7306:6:1",
														"nodeType": "YulTypedName",
														"src": "7306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7317:4:1",
														"nodeType": "YulTypedName",
														"src": "7317:4:1",
														"type": ""
													}
												],
												"src": "7124:410:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds max wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Exceeds max transaction limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"New pair address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 18)\n        mstore(add(headStart, 96), \"Encouragement Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Emergency Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 9)\n        mstore(add(headStart, 96), \"Marketing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 7)\n        mstore(add(headStart, 96), \"Staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Liquidity Pool\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x187 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x4FBEE193 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x36B4134A EQ PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x211 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x193 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH2 0x193 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19D JUMP JUMPDEST PUSH2 0x193 PUSH1 0xD DUP2 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x46E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0xF1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0xF1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x428 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x428 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x43F DUP2 DUP6 DUP6 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x458 DUP6 DUP3 DUP6 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x463 DUP6 DUP6 DUP6 PUSH2 0x7B7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x476 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x47F PUSH0 PUSH2 0x841 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x489 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0xF1E JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5E8 JUMPI PUSH1 0x64 PUSH2 0x4F0 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP3 PUSH2 0x519 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x523 SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH2 0x58F PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5F3 CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x604 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x6C6 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x70D DUP2 PUSH2 0x841 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x6C6 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x736 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x7B1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x7B1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBEA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH2 0x736 DUP4 DUP4 DUP4 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP10 AND SUB PUSH2 0x94F JUMPI PUSH1 0x64 PUSH2 0x8C1 PUSH1 0xC DUP10 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP6 POP PUSH1 0xC PUSH2 0x8DA DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0xC PUSH2 0x8F3 DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x8FD SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0xC PUSH2 0x90C DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x916 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0xC PUSH2 0x925 DUP8 PUSH1 0x2 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0xC PUSH2 0x93E DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x95C PUSH1 0xA DUP10 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x966 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP6 POP PUSH1 0xA PUSH2 0x975 DUP8 PUSH1 0x3 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0xA PUSH2 0x98E DUP8 PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x998 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0xA PUSH2 0x9A7 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP3 POP PUSH1 0xA PUSH2 0x9C0 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP PUSH1 0xA PUSH2 0x9D9 DUP8 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0x9F1 DUP8 DUP10 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xA0C SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xA74 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xAB8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xAD8 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xB17 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xB37 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xB74 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB87 DUP11 ADDRESS DUP9 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFC7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD PUSH2 0xBCB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBDE DUP11 DUP11 DUP4 PUSH2 0x7B7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7B1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCAE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCE6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD56 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD72 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDD5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE2D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE4C DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP5 PUSH2 0xE17 JUMP JUMPDEST SWAP3 POP PUSH2 0xE83 PUSH1 0x20 DUP6 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAD DUP3 PUSH2 0xE17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECE DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF07 DUP4 PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP PUSH2 0xF15 PUSH1 0x20 DUP5 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x445 JUMPI PUSH2 0x445 PUSH2 0xF56 JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 BLOBBASEFEE DELEGATECALL EXTCODEHASH 0xDF BALANCE POP EXP 0x4B 0x4E PUSH17 0x51E891D241240E96188837A19F1FBE2964 MOD 0x22 CREATE2 BLOCKHASH SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "28095:4412:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28599:36;;28633:2;28599:36;;;;;160:25:1;;;148:2;133:18;28599:36:0;;;;;;;;28480:28;;;;;-1:-1:-1;;;;;28480:28:0;;;;;;-1:-1:-1;;;;;360:32:1;;;342:51;;330:2;315:18;28480:28:0;196:203:1;12679:89:0;;;:::i;:::-;;;;;;;:::i;14898:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1475:14:1;;1468:22;1450:41;;1438:2;1423:18;14898:186:0;1310:187:1;13749:97:0;13827:12;;13749:97;;15676:244;;;;;;:::i;:::-;;:::i;28155:59::-;;28196:18;28155:59;;13607:82;;;13680:2;2023:36:1;;2011:2;1996:18;13607:82:0;1881:184:1;28684:37:0;;28719:2;28684:37;;28751:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;28372:32;;;;;-1:-1:-1;;;;;28372:32:0;;;28641:37;;28676:2;28641:37;;13904:116;;;;;;:::i;:::-;-1:-1:-1;;;;;13995:18:0;13969:7;13995:18;;;;;;;;;;;;13904:116;24064:101;;;:::i;:::-;;32033:163;;;;;;:::i;:::-;;:::i;28444:30::-;;;;;-1:-1:-1;;;;;28444:30:0;;;23409:85;23481:6;;-1:-1:-1;;;;;23481:6:0;23409:85;;12881:93;;;:::i;29471:469::-;;;;;;:::i;:::-;;:::i;32287:218::-;;;;;;:::i;:::-;;:::i;28514:26::-;;;;;-1:-1:-1;;;;;28514:26:0;;;28410:28;;;;;-1:-1:-1;;;;;28410:28:0;;;14451:140;;;;;;:::i;:::-;-1:-1:-1;;;;;14557:18:0;;;14531:7;14557:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14451:140;28220:63;;;:::i;24314:215::-;;;;;;:::i;:::-;;:::i;28295:61::-;;;:::i;12679:89::-;12724:13;12756:5;12749:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12679:89;:::o;14898:186::-;14971:4;4287:10;15025:31;4287:10;15041:7;15050:5;15025:8;:31::i;:::-;15073:4;15066:11;;;14898:186;;;;;:::o;15676:244::-;15763:4;4287:10;15819:37;15835:4;4287:10;15850:5;15819:15;:37::i;:::-;15866:26;15876:4;15882:2;15886:5;15866:9;:26::i;:::-;-1:-1:-1;15909:4:0;;15676:244;-1:-1:-1;;;;15676:244:0:o;24064:101::-;23302:13;:11;:13::i;:::-;24128:30:::1;24155:1;24128:18;:30::i;:::-;24064:101::o:0;32033:163::-;23302:13;:11;:13::i;:::-;-1:-1:-1;;;;;32151:27:0;;;::::1;;::::0;;;:18:::1;:27;::::0;;;;:38;;-1:-1:-1;;32151:38:0::1;::::0;::::1;;::::0;;;::::1;::::0;;32033:163::o;12881:93::-;12928:13;12960:7;12953:14;;;;;:::i;29471:469::-;29617:10;29573:4;29598:30;;;:18;:30;;;;;;;;29593:260;;28280:3;28258:18;28196;28275:1;28258:18;:::i;:::-;28257:26;;;;:::i;:::-;29692:6;29669:20;29679:9;-1:-1:-1;;;;;13995:18:0;13969:7;13995:18;;;;;;;;;;;;13904:116;29669:20;:29;;;;:::i;:::-;:43;;29644:126;;;;-1:-1:-1;;;29644:126:0;;4122:2:1;29644:126:0;;;4104:21:1;4161:2;4141:18;;;4134:30;4200:26;4180:18;;;4173:54;4244:18;;29644:126:0;;;;;;;;;28351:5;28329:18;28196;28346:1;28329:18;:::i;:::-;28328:28;;;;:::i;:::-;29792:6;:16;;29784:58;;;;-1:-1:-1;;;29784:58:0;;4475:2:1;29784:58:0;;;4457:21:1;4514:2;4494:18;;;4487:30;4553:31;4533:18;;;4526:59;4602:18;;29784:58:0;4273:353:1;29784:58:0;29863:49;29882:10;29894:9;29905:6;29863:18;:49::i;:::-;-1:-1:-1;29929:4:0;29471:469;;;;:::o;32287:218::-;23302:13;:11;:13::i;:::-;-1:-1:-1;;;;;32368:21:0;::::1;32360:65;;;::::0;-1:-1:-1;;;32360:65:0;;4833:2:1;32360:65:0::1;::::0;::::1;4815:21:1::0;4872:2;4852:18;;;4845:30;4911:33;4891:18;;;4884:61;4962:18;;32360:65:0::1;4631:355:1::0;32360:65:0::1;32435:11;:21:::0;;-1:-1:-1;;;;;;32435:21:0::1;-1:-1:-1::0;;;;;32435:21:0;::::1;::::0;;::::1;::::0;;;32471:27:::1;::::0;342:51:1;;;32471:27:0::1;::::0;330:2:1;315:18;32471:27:0::1;;;;;;;32287:218:::0;:::o;28220:63::-;28280:3;28258:18;28196;28275:1;28258:18;:::i;:::-;28257:26;;;;:::i;:::-;28220:63;:::o;24314:215::-;23302:13;:11;:13::i;:::-;-1:-1:-1;;;;;24398:22:0;::::1;24394:91;;24443:31;::::0;-1:-1:-1;;;24443:31:0;;24471:1:::1;24443:31;::::0;::::1;342:51:1::0;315:18;;24443:31:0::1;196:203:1::0;24394:91:0::1;24494:28;24513:8;24494:18;:28::i;:::-;24314:215:::0;:::o;28295:61::-;28351:5;28329:18;28196;28346:1;28329:18;:::i;19626:128::-;19710:37;19719:5;19726:7;19735:5;19742:4;19710:8;:37::i;:::-;19626:128;;;:::o;21315:476::-;-1:-1:-1;;;;;14557:18:0;;;21414:24;14557:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21480:36:0;;21476:309;;;21555:5;21536:16;:24;21532:130;;;21587:60;;-1:-1:-1;;;21587:60:0;;-1:-1:-1;;;;;5211:32:1;;21587:60:0;;;5193:51:1;5260:18;;;5253:34;;;5303:18;;;5296:34;;;5166:18;;21587:60:0;4991:345:1;21532:130:0;21703:57;21712:5;21719:7;21747:5;21728:16;:24;21754:5;21703:8;:57::i;:::-;21404:387;21315:476;;;:::o;16293:300::-;-1:-1:-1;;;;;16376:18:0;;16372:86;;16417:30;;-1:-1:-1;;;16417:30:0;;16444:1;16417:30;;;342:51:1;315:18;;16417:30:0;196:203:1;16372:86:0;-1:-1:-1;;;;;16471:16:0;;16467:86;;16510:32;;-1:-1:-1;;;16510:32:0;;16539:1;16510:32;;;342:51:1;315:18;;16510:32:0;196:203:1;16467:86:0;16562:24;16570:4;16576:2;16580:5;16562:7;:24::i;23567:162::-;23481:6;;-1:-1:-1;;;;;23481:6:0;4287:10;23626:23;23622:101;;23672:40;;-1:-1:-1;;;23672:40:0;;4287:10;23672:40;;;342:51:1;315:18;;23672:40:0;196:203:1;24683:187:0;24775:6;;;-1:-1:-1;;;;;24791:17:0;;;-1:-1:-1;;;;;;24791:17:0;;;;;;;24823:40;;24775:6;;;24791:17;24775:6;;24823:40;;24756:16;;24823:40;24746:124;24683:187;:::o;29946:2081::-;30319:11;;30074;;;;;;;;;;;;-1:-1:-1;;;;;30319:11:0;;;30306:24;;;;30302:924;;30416:3;30395:17;28676:2;30395:6;:17;:::i;:::-;30394:25;;;;:::i;:::-;30388:31;-1:-1:-1;30455:2:0;30444:7;30388:31;30450:1;30444:7;:::i;:::-;30443:14;;;;:::i;:::-;30433:24;-1:-1:-1;30526:2:0;30515:7;:3;30521:1;30515:7;:::i;:::-;30514:14;;;;:::i;:::-;30493:35;-1:-1:-1;30600:2:0;30589:7;:3;30595:1;30589:7;:::i;:::-;30588:14;;;;:::i;:::-;30571:31;-1:-1:-1;30674:2:0;30663:7;:3;30669:1;30663:7;:::i;:::-;30662:14;;;;:::i;:::-;30645:31;-1:-1:-1;30741:2:0;30730:7;:3;30736:1;30730:7;:::i;:::-;30729:14;;;;:::i;:::-;30714:29;;30302:924;;;30865:3;30845:16;28633:2;30845:6;:16;:::i;:::-;30844:24;;;;:::i;:::-;30838:30;-1:-1:-1;30904:2:0;30893:7;30838:30;30899:1;30893:7;:::i;:::-;30892:14;;;;:::i;:::-;30882:24;-1:-1:-1;30975:2:0;30964:7;:3;30970:1;30964:7;:::i;:::-;30963:14;;;;:::i;:::-;30942:35;-1:-1:-1;31049:2:0;31038:7;:3;31044:1;31038:7;:::i;:::-;31037:14;;;;:::i;:::-;31020:31;-1:-1:-1;31123:2:0;31112:7;:3;31118:1;31112:7;:::i;:::-;31111:14;;;;:::i;:::-;31094:31;-1:-1:-1;31190:2:0;31179:7;:3;31185:1;31179:7;:::i;:::-;31178:14;;;;:::i;:::-;31163:29;;30302:924;31236:17;31256:12;31265:3;31256:6;:12;:::i;:::-;31333:17;;31236:32;;-1:-1:-1;31309:62:0;;31325:6;;-1:-1:-1;;;;;31333:17:0;31352:18;31309:15;:62::i;:::-;-1:-1:-1;;;;;;;;;;;31401:18:0;31386:56;;;;5686:25:1;;5747:2;5742;5727:18;;5720:30;;;5786:2;5766:18;;;5759:30;-1:-1:-1;;;5820:2:1;5805:18;;5798:48;5878:3;5863:19;;5474:414;31386:56:0;;;;;;;;31477:13;;31453:54;;31469:6;;-1:-1:-1;;;;;31477:13:0;31492:14;31453:15;:54::i;:::-;-1:-1:-1;;;;;;;;;;;31537:14:0;31522:48;;;;6105:25:1;;6166:2;6161;6146:18;;6139:30;;;6205:2;6185:18;;;6178:30;-1:-1:-1;;;6239:2:1;6224:18;;6217:44;6293:3;6278:19;;5893:410;31522:48:0;;;;;;;;31605:15;;31581:56;;31597:6;;-1:-1:-1;;;;;31605:15:0;31622:14;31581:15;:56::i;:::-;-1:-1:-1;;;;;;;;;;;31667:14:0;31652:43;;;;6520:25:1;;6581:2;6576;6561:18;;6554:30;;;6620:1;6600:18;;;6593:29;-1:-1:-1;;;6653:2:1;6638:18;;6631:39;6702:3;6687:19;;6308:404;31652:43:0;;;;;;;;31730:13;;31706:52;;31722:6;;-1:-1:-1;;;;;31730:13:0;31745:12;31706:15;:52::i;:::-;-1:-1:-1;;;;;;;;;;;31788:12:0;31773:39;;;;6929:25:1;;6990:2;6985;6970:18;;6963:30;;;7029:1;7009:18;;;7002:29;-1:-1:-1;;;7062:2:1;7047:18;;7040:37;7109:3;7094:19;;6717:402;31773:39:0;;;;;;;;31823:47;31839:6;31855:4;31862:7;31823:15;:47::i;:::-;-1:-1:-1;;;;;;;;;;;31938:7:0;31923:41;;;;7336:25:1;;7397:2;7392;7377:18;;7370:30;;;7436:2;7416:18;;;7409:30;-1:-1:-1;;;7470:2:1;7455:18;;7448:44;7524:3;7509:19;;7124:410;31923:41:0;;;;;;;;31975:45;31991:6;31999:9;32010;31975:15;:45::i;:::-;30064:1963;;;;;;;29946:2081;;;:::o;20601:432::-;-1:-1:-1;;;;;20713:19:0;;20709:89;;20755:32;;-1:-1:-1;;;20755:32:0;;20784:1;20755:32;;;342:51:1;315:18;;20755:32:0;196:203:1;20709:89:0;-1:-1:-1;;;;;20811:21:0;;20807:90;;20855:31;;-1:-1:-1;;;20855:31:0;;20883:1;20855:31;;;342:51:1;315:18;;20855:31:0;196:203:1;20807:90:0;-1:-1:-1;;;;;20906:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20951:76;;;;21001:7;-1:-1:-1;;;;;20985:31:0;20994:5;-1:-1:-1;;;;;20985:31:0;;21010:5;20985:31;;;;160:25:1;;148:2;133:18;;14:177;20985:31:0;;;;;;;;20601:432;;;;:::o;16908:1107::-;-1:-1:-1;;;;;16997:18:0;;16993:540;;17149:5;17133:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16993:540:0;;-1:-1:-1;16993:540:0;;-1:-1:-1;;;;;17207:15:0;;17185:19;17207:15;;;;;;;;;;;17240:19;;;17236:115;;;17286:50;;-1:-1:-1;;;17286:50:0;;-1:-1:-1;;;;;5211:32:1;;17286:50:0;;;5193:51:1;5260:18;;;5253:34;;;5303:18;;;5296:34;;;5166:18;;17286:50:0;4991:345:1;17236:115:0;-1:-1:-1;;;;;17471:15:0;;:9;:15;;;;;;;;;;17489:19;;;;17471:37;;16993:540;-1:-1:-1;;;;;17547:16:0;;17543:425;;17710:12;:21;;;;;;;17543:425;;;-1:-1:-1;;;;;17921:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17543:425;17998:2;-1:-1:-1;;;;;17983:25:0;17992:4;-1:-1:-1;;;;;17983:25:0;;18002:5;17983:25;;;;160::1;;148:2;133:18;;14:177;17983:25:0;;;;;;;;16908:1107;;;:::o;404:418:1:-;553:2;542:9;535:21;516:4;585:6;579:13;628:6;623:2;612:9;608:18;601:34;687:6;682:2;674:6;670:15;665:2;654:9;650:18;644:50;743:1;738:2;729:6;718:9;714:22;710:31;703:42;813:2;806;802:7;797:2;789:6;785:15;781:29;770:9;766:45;762:54;754:62;;;404:418;;;;:::o;827:173::-;895:20;;-1:-1:-1;;;;;944:31:1;;934:42;;924:70;;990:1;987;980:12;924:70;827:173;;;:::o;1005:300::-;1073:6;1081;1134:2;1122:9;1113:7;1109:23;1105:32;1102:52;;;1150:1;1147;1140:12;1102:52;1173:29;1192:9;1173:29;:::i;:::-;1163:39;1271:2;1256:18;;;;1243:32;;-1:-1:-1;;;1005:300:1:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:1;1827:18;;;;1814:32;;1502:374::o;2070:186::-;2129:6;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;2070:186;-1:-1:-1;;;2070:186:1:o;2261:347::-;2326:6;2334;2387:2;2375:9;2366:7;2362:23;2358:32;2355:52;;;2403:1;2400;2393:12;2355:52;2426:29;2445:9;2426:29;:::i;:::-;2416:39;;2505:2;2494:9;2490:18;2477:32;2552:5;2545:13;2538:21;2531:5;2528:32;2518:60;;2574:1;2571;2564:12;2518:60;2597:5;2587:15;;;2261:347;;;;;:::o;2613:260::-;2681:6;2689;2742:2;2730:9;2721:7;2717:23;2713:32;2710:52;;;2758:1;2755;2748:12;2710:52;2781:29;2800:9;2781:29;:::i;:::-;2771:39;;2829:38;2863:2;2852:9;2848:18;2829:38;:::i;:::-;2819:48;;2613:260;;;;;:::o;2878:380::-;2957:1;2953:12;;;;3000;;;3021:61;;3075:4;3067:6;3063:17;3053:27;;3021:61;3128:2;3120:6;3117:14;3097:18;3094:38;3091:161;;3174:10;3169:3;3165:20;3162:1;3155:31;3209:4;3206:1;3199:15;3237:4;3234:1;3227:15;3091:161;;2878:380;;;:::o;3263:127::-;3324:10;3319:3;3315:20;3312:1;3305:31;3355:4;3352:1;3345:15;3379:4;3376:1;3369:15;3395:168;3468:9;;;3499;;3516:15;;;3510:22;;3496:37;3486:71;;3537:18;;:::i;3568:217::-;3608:1;3634;3624:132;;3678:10;3673:3;3669:20;3666:1;3659:31;3713:4;3710:1;3703:15;3741:4;3738:1;3731:15;3624:132;-1:-1:-1;3770:9:1;;3568:217::o;3790:125::-;3855:9;;;3876:10;;;3873:36;;;3889:18;;:::i;5341:128::-;5408:9;;;5429:11;;;5426:37;;;5443:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "824800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BUY_TAX()": "207",
								"INITIAL_SUPPLY()": "229",
								"MAX_TX()": "455",
								"MAX_WALLET()": "411",
								"SELL_TAX()": "272",
								"SLIPPAGE()": "273",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24802",
								"balanceOf(address)": "2637",
								"decimals()": "244",
								"emergencyFund()": "2425",
								"encouragementFund()": "2403",
								"isExcludedFromFees(address)": "2573",
								"marketingWallet()": "2403",
								"name()": "infinite",
								"owner()": "2419",
								"renounceOwnership()": "infinite",
								"stakingWallet()": "2382",
								"symbol()": "infinite",
								"totalSupply()": "2392",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"uniswapPair()": "2403",
								"updateExcludedAccountStatus(address,bool)": "26900",
								"updateUniswapPair(address)": "27866"
							},
							"internal": {
								"_transferWithTaxes(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 28915,
									"end": 29465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28915,
									"end": 29465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29140,
									"end": 29150,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2C22A0A6902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5845414D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12575,
									"end": 12580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12572,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12567,
									"end": 12580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12590,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12600,
									"end": 12607,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12590,
									"end": 12607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23121,
									"end": 23122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23163,
									"end": 23175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23144,
									"end": 23176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26622,
									"end": 26623,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26727,
									"end": 26734,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29179,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29162,
									"end": 29200,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29223,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29210,
									"end": 29240,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29250,
									"end": 29284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29307,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29294,
									"end": 29324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29345,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29334,
									"end": 29367,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29378,
									"end": 29411,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29384,
									"end": 29394,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 28196,
									"end": 28214,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1A784379D99DB42000000"
								},
								{
									"begin": 29378,
									"end": 29383,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 29378,
									"end": 29411,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29378,
									"end": 29411,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29378,
									"end": 29411,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 29440,
									"end": 29450,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29439,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 29421,
									"end": 29451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29451,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29458,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29458,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29421,
									"end": 29458,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29454,
									"end": 29458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29421,
									"end": 29458,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29421,
									"end": 29458,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24756,
									"end": 24772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24746,
									"end": 24870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18501,
									"end": 18502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3392,
									"end": 3595,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18540,
									"end": 18541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18544,
									"end": 18551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18553,
									"end": 18558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18524,
									"end": 18559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17149,
									"end": 17154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17145,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17133,
									"end": 17145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17133,
									"end": 17154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17185,
									"end": 17204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17259,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4029,
									"end": 4080,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3827,
									"end": 4172,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17508,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17508,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17722,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17998,
									"end": 18000,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17992,
									"end": 17996,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18002,
									"end": 18007,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4311,
									"end": 4313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 878,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 751,
									"end": 878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 812,
									"end": 822,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 810,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 824,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 962,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1084,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1085,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1131,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1136,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1137,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1189,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1170,
									"end": 1190,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1191,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1218,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1211,
									"end": 1212,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1204,
									"end": 1219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1247,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1498,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1499,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1537,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1522,
									"end": 1538,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1580,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1648,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1623,
									"end": 1650,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1670,
									"end": 1680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1687,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1709,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1755,
									"end": 1758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1751,
									"end": 1763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1748,
									"end": 1749,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1744,
									"end": 1764,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1765,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1833,
									"end": 1835,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1826,
									"end": 1831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1836,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1860,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2263,
									"end": 2281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2382,
									"end": 2388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2374,
									"end": 2378,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2379,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2342,
									"end": 2380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2292,
									"end": 2389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2469,
									"end": 2471,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2486,
									"end": 2487,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3191,
									"end": 3197,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3237,
									"end": 3263,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2061,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2062,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2063,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2077,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 2656,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2647,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2657,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2751,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2838,
									"end": 2842,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2791,
									"end": 2792,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2665,
									"end": 2677,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 2642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2885,
									"end": 2891,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2876,
									"end": 2883,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2892,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2940,
									"end": 2966,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3029,
									"end": 3030,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3021,
									"end": 3045,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3054,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3055,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2998,
									"end": 3056,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3097,
									"end": 3119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2088,
									"end": 3387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3733,
									"end": 3736,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3719,
									"end": 3750,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3773,
									"end": 3777,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3763,
									"end": 3778,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3805,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3798,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3806,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28095,
									"end": 32507,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204af43fdf31500a4b4e7051e891d241240e96188837a19f1fbe29640622f5409d64736f6c634300081a0033",
									".code": [
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "C12B7C4E"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "DF7787A4"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "F3B2DB3F"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "C12B7C4E"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "C816841B"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "CC859378"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "753CAFC3"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "75F0A874"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "4FBEE193"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "4FBEE193"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "52A6A9EC"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "54AD8AEE"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "36B4134A"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "2AF37BB"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "6EE6AD8"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28095,
											"end": 32507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28633,
											"end": 28635,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28599,
											"end": 28635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28480,
											"end": 28508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1310,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13827,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13827,
											"end": 13839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28155,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28155,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28155,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28196,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 28155,
											"end": 28214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28155,
											"end": 28214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13682,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1881,
											"end": 2065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28684,
											"end": 28721,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28684,
											"end": 28721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28684,
											"end": 28721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28719,
											"end": 28721,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 28684,
											"end": 28721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28684,
											"end": 28721,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28751,
											"end": 28801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 28801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28372,
											"end": 28404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28678,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28641,
											"end": 28678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28676,
											"end": 28678,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28641,
											"end": 28678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28678,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13904,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24064,
											"end": 24165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32033,
											"end": 32196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32033,
											"end": 32196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28444,
											"end": 28474,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12881,
											"end": 12974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29471,
											"end": 29940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29471,
											"end": 29940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32287,
											"end": 32505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32287,
											"end": 32505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28514,
											"end": 28540,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28410,
											"end": 28438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14451,
											"end": 14591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14531,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14568,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28220,
											"end": 28283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28295,
											"end": 28356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12756,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12749,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12749,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15048,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15050,
											"end": 15055,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15025,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15073,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15835,
											"end": 15839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15819,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15876,
											"end": 15880,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15884,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15866,
											"end": 15892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15909,
											"end": 15913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15909,
											"end": 15913,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24155,
											"end": 24156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24128,
											"end": 24146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24128,
											"end": 24158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32033,
											"end": 32196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32151,
											"end": 32178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32151,
											"end": 32189,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32189,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32033,
											"end": 32196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12941,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12960,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12953,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29616,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29598,
											"end": 29628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29593,
											"end": 29853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29593,
											"end": 29853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28283,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28196,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 28275,
											"end": 28276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28258,
											"end": 28276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28257,
											"end": 28283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29692,
											"end": 29698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 29679,
											"end": 29688,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29689,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 29669,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29669,
											"end": 29698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29669,
											"end": 29698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29712,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29669,
											"end": 29712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4226,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D61782077616C6C6574206C696D69740000000000000000"
										},
										{
											"begin": 4180,
											"end": 4198,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4180,
											"end": 4198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29644,
											"end": 29770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28351,
											"end": 28356,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 28196,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 28346,
											"end": 28347,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28329,
											"end": 28347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28328,
											"end": 28356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 28328,
											"end": 28356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 29798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 29808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 29808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4584,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D6178207472616E73616374696F6E206C696D6974000000"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4273,
											"end": 4626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29784,
											"end": 29842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29863,
											"end": 29912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29882,
											"end": 29892,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29903,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29863,
											"end": 29881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29863,
											"end": 29912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29863,
											"end": 29912,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29863,
											"end": 29912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29929,
											"end": 29933,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29471,
											"end": 29940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32368,
											"end": 32389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32368,
											"end": 32389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32360,
											"end": 32425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32360,
											"end": 32425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32360,
											"end": 32425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32360,
											"end": 32425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "4E6577207061697220616464726573732063616E6E6F74206265207A65726F00"
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4631,
											"end": 4986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 32360,
											"end": 32425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32435,
											"end": 32456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32435,
											"end": 32456,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32471,
											"end": 32498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344"
										},
										{
											"begin": 32471,
											"end": 32498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32498,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28283,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28196,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 28275,
											"end": 28276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28258,
											"end": 28276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28258,
											"end": 28276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28257,
											"end": 28283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 28257,
											"end": 28283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24398,
											"end": 24420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24398,
											"end": 24420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24443,
											"end": 24474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24443,
											"end": 24474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24471,
											"end": 24472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24443,
											"end": 24474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 24513,
											"end": 24521,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24494,
											"end": 24522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28295,
											"end": 28356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28351,
											"end": 28356,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28196,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 28346,
											"end": 28347,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28329,
											"end": 28347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28329,
											"end": 28347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19719,
											"end": 19724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19726,
											"end": 19733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19710,
											"end": 19718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19710,
											"end": 19747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14568,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21480,
											"end": 21516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21480,
											"end": 21516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21536,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21536,
											"end": 21560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5243,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4991,
											"end": 5336,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 21712,
											"end": 21717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 21726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21747,
											"end": 21752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21703,
											"end": 21711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21703,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21404,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16539,
											"end": 16540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16570,
											"end": 16574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 16562,
											"end": 16586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23729,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 23567,
											"end": 23729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24756,
											"end": 24772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24746,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29946,
											"end": 32027,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29946,
											"end": 32027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30330,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 30319,
											"end": 30330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30319,
											"end": 30330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30306,
											"end": 30330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30306,
											"end": 30330,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30306,
											"end": 30330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30306,
											"end": 30330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30416,
											"end": 30419,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30395,
											"end": 30412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 28676,
											"end": 28678,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30395,
											"end": 30401,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30395,
											"end": 30412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30395,
											"end": 30412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30395,
											"end": 30412,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30395,
											"end": 30412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30394,
											"end": 30419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30394,
											"end": 30419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30388,
											"end": 30419,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30455,
											"end": 30457,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30444,
											"end": 30451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30388,
											"end": 30419,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30450,
											"end": 30451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30444,
											"end": 30451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30444,
											"end": 30451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30444,
											"end": 30451,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30444,
											"end": 30451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30443,
											"end": 30457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30526,
											"end": 30528,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30515,
											"end": 30522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30515,
											"end": 30518,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30521,
											"end": 30522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30515,
											"end": 30522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30515,
											"end": 30522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30515,
											"end": 30522,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30515,
											"end": 30522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30514,
											"end": 30528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30514,
											"end": 30528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30493,
											"end": 30528,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30600,
											"end": 30602,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30589,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30589,
											"end": 30592,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30589,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30589,
											"end": 30596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30589,
											"end": 30596,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30589,
											"end": 30596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30588,
											"end": 30602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30571,
											"end": 30602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30674,
											"end": 30676,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30663,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30663,
											"end": 30666,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30670,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30663,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30663,
											"end": 30670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30663,
											"end": 30670,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30663,
											"end": 30670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30662,
											"end": 30676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30662,
											"end": 30676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30645,
											"end": 30676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30741,
											"end": 30743,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 30730,
											"end": 30737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30730,
											"end": 30733,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30736,
											"end": 30737,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30730,
											"end": 30737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30730,
											"end": 30737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30737,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30730,
											"end": 30737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30729,
											"end": 30743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30729,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30714,
											"end": 30743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30714,
											"end": 30743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30865,
											"end": 30868,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30845,
											"end": 30861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 28633,
											"end": 28635,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30845,
											"end": 30851,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30845,
											"end": 30861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30845,
											"end": 30861,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30845,
											"end": 30861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30844,
											"end": 30868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30844,
											"end": 30868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30838,
											"end": 30868,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30904,
											"end": 30906,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30893,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30838,
											"end": 30868,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30899,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30893,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30893,
											"end": 30900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30900,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30893,
											"end": 30900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30892,
											"end": 30906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30892,
											"end": 30906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30882,
											"end": 30906,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30975,
											"end": 30977,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30964,
											"end": 30971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30964,
											"end": 30967,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30970,
											"end": 30971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30964,
											"end": 30971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30964,
											"end": 30971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30971,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30964,
											"end": 30971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30963,
											"end": 30977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 30963,
											"end": 30977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30977,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31049,
											"end": 31051,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31038,
											"end": 31045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 31038,
											"end": 31041,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31044,
											"end": 31045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31038,
											"end": 31045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31038,
											"end": 31045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31038,
											"end": 31045,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 31038,
											"end": 31045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31037,
											"end": 31051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 31037,
											"end": 31051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31020,
											"end": 31051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31123,
											"end": 31125,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31112,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 31112,
											"end": 31115,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31118,
											"end": 31119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31112,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31112,
											"end": 31119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31112,
											"end": 31119,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 31112,
											"end": 31119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31111,
											"end": 31125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 31111,
											"end": 31125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31190,
											"end": 31192,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31179,
											"end": 31186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 31179,
											"end": 31182,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31186,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31179,
											"end": 31186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31179,
											"end": 31186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31186,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 31179,
											"end": 31186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31178,
											"end": 31192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 31178,
											"end": 31192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31163,
											"end": 31192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31163,
											"end": 31192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30302,
											"end": 31226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31256,
											"end": 31268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 31265,
											"end": 31268,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31262,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 31256,
											"end": 31268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31268,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 31256,
											"end": 31268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31333,
											"end": 31350,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31333,
											"end": 31350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31309,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 31309,
											"end": 31371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31325,
											"end": 31331,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31325,
											"end": 31331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31333,
											"end": 31350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31352,
											"end": 31370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31309,
											"end": 31324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31309,
											"end": 31371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31309,
											"end": 31371,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 31309,
											"end": 31371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31401,
											"end": 31419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5749,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B98DBDD5C9859D95B595B9D08119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5822,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5881,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5863,
											"end": 5882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5888,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31442,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31490,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31477,
											"end": 31490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31453,
											"end": 31507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 31453,
											"end": 31507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31469,
											"end": 31475,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31469,
											"end": 31475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31477,
											"end": 31490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31492,
											"end": 31506,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31453,
											"end": 31468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31453,
											"end": 31507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31453,
											"end": 31507,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 31453,
											"end": 31507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31537,
											"end": 31551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6205,
											"end": 6207,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B595C99D95B98DE48119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6239,
											"end": 6241,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6278,
											"end": 6297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 6303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31522,
											"end": 31570,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31605,
											"end": 31620,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31605,
											"end": 31620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 31581,
											"end": 31637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31597,
											"end": 31603,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31597,
											"end": 31603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31605,
											"end": 31620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31622,
											"end": 31636,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31581,
											"end": 31637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31637,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 31581,
											"end": 31637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31667,
											"end": 31681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D61726B6574696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6687,
											"end": 6706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6712,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31695,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31730,
											"end": 31743,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31730,
											"end": 31743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31706,
											"end": 31758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31706,
											"end": 31758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31722,
											"end": 31728,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31722,
											"end": 31728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31730,
											"end": 31743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31745,
											"end": 31757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31706,
											"end": 31721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31706,
											"end": 31758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31706,
											"end": 31758,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31706,
											"end": 31758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31788,
											"end": 31800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 6992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7029,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7094,
											"end": 7113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 7119,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31773,
											"end": 31812,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31823,
											"end": 31870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 31839,
											"end": 31845,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31855,
											"end": 31859,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31862,
											"end": 31869,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31823,
											"end": 31838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31823,
											"end": 31870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31823,
											"end": 31870,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 31823,
											"end": 31870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31938,
											"end": 31945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7438,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131A5C5D5A591A5D1E48141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7472,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7527,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7534,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31923,
											"end": 31964,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 32020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31991,
											"end": 31997,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31999,
											"end": 32008,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 32010,
											"end": 32019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 31990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31975,
											"end": 32020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 32020,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31975,
											"end": 32020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30064,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29946,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29946,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29946,
											"end": 32027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29946,
											"end": 32027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20784,
											"end": 20785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 315,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 20999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21010,
											"end": 21015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17145,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17133,
											"end": 17145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17133,
											"end": 17154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4991,
											"end": 5336,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 17996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18002,
											"end": 18007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 822,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 404,
											"end": 822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 579,
											"end": 592,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 621,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 608,
											"end": 626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 601,
											"end": 635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 687,
											"end": 693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 670,
											"end": 685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 650,
											"end": 668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 644,
											"end": 694,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 714,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 703,
											"end": 745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 789,
											"end": 795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 785,
											"end": 800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 766,
											"end": 811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 754,
											"end": 816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 754,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 754,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 404,
											"end": 822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 827,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 915,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 944,
											"end": 975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 944,
											"end": 975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 934,
											"end": 976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 976,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 924,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 924,
											"end": 994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 924,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 924,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 1000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 1000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1005,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1173,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1202,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1173,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1202,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1005,
											"end": 1305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2373,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2426,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2518,
											"end": 2578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2576,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2578,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2518,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2781,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2781,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2829,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2878,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3131,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 3091,
											"end": 3252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3169,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3165,
											"end": 3185,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 3091,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 3258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3390,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3263,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3315,
											"end": 3335,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3345,
											"end": 3360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3563,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3395,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3533,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3537,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3568,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3624,
											"end": 3756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3717,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3703,
											"end": 3718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3738,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3756,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3624,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3915,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3790,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3886,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3889,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 5341,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5440,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5426,
											"end": 5463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5443,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984"
									}
								}
							},
							"sourceList": [
								"indentity_test_3_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BUY_TAX()": "02af37bb",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_TX()": "f3b2db3f",
							"MAX_WALLET()": "df7787a4",
							"SELL_TAX()": "54ad8aee",
							"SLIPPAGE()": "36b4134a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"emergencyFund()": "cc859378",
							"encouragementFund()": "52a6a9ec",
							"isExcludedFromFees(address)": "4fbee193",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakingWallet()": "06ee6ad8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"updateExcludedAccountStatus(address,bool)": "753cafc3",
							"updateUniswapPair(address)": "c12b7c4e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_encouragementFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_emergencyFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialUniswapPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"TaxDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"UniswapPairUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUY_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELL_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLIPPAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encouragementFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"updateExcludedAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"updateUniswapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"indentity_test_3_flattened.sol\":\"XEAMToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"indentity_test_3_flattened.sol\":{\"keccak256\":\"0xfb38a22dd9baac34dec661a2967da5e1bbec695f860182f3e566f28b3c522b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea93ec79b64a2896d8e7a478d9ad8aba218b3af65b4148034e202bbd54b8e6c9\",\"dweb:/ipfs/QmSheLP4iAy5hacGNQ7hvQfW62nGiij6zFY5DQsfbfq3Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 926,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1012,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "encouragementFund",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1014,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "emergencyFund",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1016,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1018,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1020,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1033,
								"contract": "indentity_test_3_flattened.sol:XEAMToken",
								"label": "isExcludedFromFees",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"indentity_test_3_flattened.sol": {
				"ast": {
					"absolutePath": "indentity_test_3_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						],
						"ReentrancyGuard": [
							980
						],
						"XEAMToken": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:63:0"
									},
									"src": "679:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "763:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "842:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:9:0"
									},
									"scope": 77,
									"src": "833:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "894:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:9:0"
									},
									"scope": 77,
									"src": "970:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1044:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:6:0"
									},
									"scope": 77,
									"src": "1262:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1337:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1615:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:0"
									},
									"scope": 77,
									"src": "1606:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1695:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2376:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2367:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2757:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:6:0"
									},
									"scope": 77,
									"src": "2748:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "262:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3009:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3152:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3152:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3152:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3036:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3134:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3165:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3233:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3263:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:15:0"
									},
									"scope": 100,
									"src": "3224:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3284:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3354:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3386:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:15:0"
									},
									"scope": 100,
									"src": "3345:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3407:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3486:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3520:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:7:0"
									},
									"scope": 100,
									"src": "3477:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "3124:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3653:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3679:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4194:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4270:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4287:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4291:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4287:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4280:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4217:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4227:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4260:9:0"
									},
									"scope": 129,
									"src": "4208:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4377:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4394:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4398:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4394:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4387:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4319:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4327:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4361:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:16:0"
									},
									"scope": 129,
									"src": "4310:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4487:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4504:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4497:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4424:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4444:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:0"
									},
									"scope": 129,
									"src": "4415:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1411,
							"src": "4176:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4661:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4687:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4839:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4858:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5178:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5211:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:49:0"
									},
									"src": "5172:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5258:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5421:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:16:0"
									},
									"src": "5415:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5462:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5632:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5652:18:0"
									},
									"src": "5626:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5677:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6033:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6085:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6077:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:52:0"
									},
									"src": "6027:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6118:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6303:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:18:0"
									},
									"src": "6297:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6348:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6554:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:17:0"
									},
									"src": "6548:43:0"
								}
							],
							"scope": 1411,
							"src": "4829:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6595:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6749:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6769:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6999:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7026:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7018:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:15:0"
									},
									"src": "6993:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7039:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7182:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7204:17:0"
									},
									"src": "7176:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7228:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7528:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7590:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7582:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:48:0"
									},
									"src": "7522:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7603:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7766:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7785:16:0"
									},
									"src": "7760:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7808:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7978:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8008:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8000:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7999:18:0"
									},
									"src": "7972:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8024:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8282:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8317:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8309:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8308:35:0"
									},
									"src": "8276:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8350:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8535:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8565:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8557:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:18:0"
									},
									"src": "8529:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8581:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8789:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8819:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8811:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8810:18:0"
									},
									"src": "8783:46:0"
								}
							],
							"scope": 1411,
							"src": "6739:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8833:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8989:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9010:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9382:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9408:66:0"
									},
									"src": "9376:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9481:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9644:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9664:16:0"
									},
									"src": "9638:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9687:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9857:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9879:18:0"
									},
									"src": "9851:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9904:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10171:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:33:0"
									},
									"src": "10165:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10239:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10424:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:18:0"
									},
									"src": "10418:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10471:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10679:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10710:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10701:18:0"
									},
									"src": "10673:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10726:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11017:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11043:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11070:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11062:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11042:41:0"
									},
									"src": "11011:73:0"
								}
							],
							"scope": 1411,
							"src": "8979:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11218:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12033:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12033:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12033:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12042:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12042:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12042:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12050:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12050:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12050:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12066:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12066:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12066:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11248:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12024:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12129:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12085:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12101:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12093:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12085:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12217:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12145:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12161:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12145:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12188:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12180:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12172:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12199:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12251:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12235:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12285:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12270:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12311:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12557:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12567:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12567:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12567:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12590:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12590:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12325:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12527:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12513:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12534:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12534:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12512:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12557:0:0"
									},
									"scope": 771,
									"src": "12501:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12739:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12749:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12620:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12688:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12692:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12724:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12723:15:0"
									},
									"scope": 771,
									"src": "12679:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12943:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12953:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12774:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12890:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12928:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12927:15:0"
									},
									"scope": 771,
									"src": "12881:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13663:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13680:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13673:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12980:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13616:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13624:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13656:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13655:7:0"
									},
									"scope": 771,
									"src": "13607:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13810:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13827:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13820:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13695:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13758:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13769:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13801:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:9:0"
									},
									"scope": 771,
									"src": "13749:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13978:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13995:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13995:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13988:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13852:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13913:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13931:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13923:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13922:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13968:9:0"
									},
									"scope": 771,
									"src": "13904:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14290:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14308:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14300:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14300:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14316:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14316:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14300:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14348:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14355:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14359:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14338:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14338:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14338:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14375:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14026:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14224:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14241:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14233:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14245:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14232:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14284:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14283:6:0"
									},
									"scope": 771,
									"src": "14215:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14540:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14557:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14557:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14557:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14550:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14399:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14460:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14493:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14469:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14530:9:0"
									},
									"scope": 771,
									"src": "14451:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14977:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14995:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14987:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14987:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15003:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15003:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14987:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15050:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15025:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15025:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15025:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15066:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14597:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14907:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14914:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14971:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14970:6:0"
									},
									"scope": 771,
									"src": "14898:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15769:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15787:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15779:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15779:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15797:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15797:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15779:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15819:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15819:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15819:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15876:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15882:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15866:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15866:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15866:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15902:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15090:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15685:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15698:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15724:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15697:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15763:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15762:6:0"
									},
									"scope": 771,
									"src": "15676:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16362:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16376:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16392:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16384:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16384:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16384:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16376:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16372:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16396:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16417:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16417:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16410:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16471:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16477:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16477:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16471:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16467:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16489:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16539:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16531:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16531:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16531:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16510:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16510:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16503:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16570:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16562:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16562:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15926:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16320:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16312:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16346:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16311:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16362:0:0"
									},
									"scope": 771,
									"src": "16293:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16983:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16997:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17013:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17005:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17005:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16997:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17171:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17193:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17185:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17185:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17207:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17217:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17207:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17185:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17240:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17254:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17240:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17236:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17261:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17311:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17317:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17330:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17286:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17286:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17279:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17364:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17471:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17481:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17471:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17489:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17503:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17489:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17471:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17471:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16993:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17017:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17133:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17149:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17133:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17133:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17547:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17553:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17553:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17547:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17762:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17776:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17921:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17931:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17921:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17938:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17921:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17921:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17543:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17565:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17579:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17710:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17710:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17710:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17992:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17998:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18002:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17983:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17983:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17978:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16599:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16917:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16925:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16947:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16939:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16959:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16924:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16983:0:0"
									},
									"scope": 771,
									"src": "16908:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18414:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18439:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18439:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18428:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18424:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18451:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18501:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18493:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18493:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18493:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18472:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18472:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18465:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18540:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18532:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18532:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18532:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18553:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18524:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18524:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18021:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18367:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18381:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18398:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18390:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18372:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18414:0:0"
									},
									"scope": 771,
									"src": "18358:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18940:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18965:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18965:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18954:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18950:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18977:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19025:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19017:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19017:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19017:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18998:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18998:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18991:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19073:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19065:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19065:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19065:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19048:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19048:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18572:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18893:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18898:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18940:0:0"
									},
									"scope": 771,
									"src": "18884:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19700:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19742:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19710:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19710:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19710:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19096:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19635:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19667:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19676:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19643:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19700:0:0"
									},
									"scope": 771,
									"src": "19626:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20699:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20722:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20722:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20713:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20709:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20734:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20784:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20776:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20776:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20776:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20755:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20755:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20748:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20822:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20822:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20811:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20807:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20834:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20883:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20875:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20875:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20875:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20855:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20855:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20848:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20906:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20906:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20936:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20906:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20906:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20955:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20951:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20966:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20994:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21001:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21010:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20985:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20985:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20980:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19760:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20610:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20659:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20671:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20618:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20699:0:0"
									},
									"scope": 771,
									"src": "20601:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21404:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21422:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21414:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21441:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21441:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21414:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21480:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21504:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21504:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21499:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21499:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21513:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21499:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21480:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21476:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21518:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21536:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21555:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21536:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21532:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21562:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21614:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21623:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21641:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21587:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21587:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21580:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21675:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21712:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21719:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21728:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21747:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21728:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21754:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21703:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21703:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21703:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21039:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21324:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21380:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21339:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21404:0:0"
									},
									"scope": 771,
									"src": "21315:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1411,
							"src": "12006:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21919:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22463:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22463:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22463:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21946:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22452:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22493:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22477:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22477:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22506:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22602:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22628:17:0"
									},
									"src": "22596:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22652:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22745:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22764:15:0"
									},
									"src": "22739:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22792:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22829:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22813:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22844:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22812:57:0"
									},
									"src": "22786:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23030:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23044:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23068:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23060:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23060:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23060:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23044:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23040:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23072:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23121:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23113:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23113:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23113:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23093:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23093:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23086:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23163:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23144:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23144:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23144:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22876:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23016:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23008:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23007:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23030:0:0"
									},
									"scope": 916,
									"src": "22996:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23292:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23302:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23302:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23302:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23325:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23189:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23280:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23289:2:0"
									},
									"src": "23271:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23464:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23474:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23339:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23418:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23423:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23454:9:0"
									},
									"scope": 916,
									"src": "23409:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23612:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23626:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23626:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23637:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23637:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23626:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23622:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23651:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23699:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23699:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23672:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23672:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23665:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23500:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23576:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23587:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23612:0:0"
									},
									"scope": 916,
									"src": "23567:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24118:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24147:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24128:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24128:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23735:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24108:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24090:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24118:0:0"
									},
									"scope": 916,
									"src": "24064:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24384:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24398:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24410:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24410:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24398:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24394:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24422:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24471:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24463:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24463:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24463:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24443:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24443:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24436:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24513:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24494:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24494:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24494:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24171:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24374:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24340:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24384:0:0"
									},
									"scope": 916,
									"src": "24314:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24746:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24764:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24756:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24756:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24775:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24756:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24791:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24800:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24791:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24791:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24854:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24823:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24823:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24818:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24535:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24692:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24719:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24711:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24710:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24746:0:0"
									},
									"scope": 916,
									"src": "24683:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1411,
							"src": "22434:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25018:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "25043:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 980,
							"linearizedBaseContracts": [
								980
							],
							"name": "ReentrancyGuard",
							"nameLocation": "25812:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 921,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "26607:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26582:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26582:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 920,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26622:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 924,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "26654:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26629:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26629:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 923,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26665:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 926,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "26689:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26673:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 925,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26673:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "26717:39:0",
										"statements": [
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 929,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "26727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 930,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "26737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26727:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "26727:22:0"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26714:2:0"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26717:0:0"
									},
									"scope": 980,
									"src": "26703:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "27157:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 937,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "27167:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27167:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "27167:21:0"
											},
											{
												"id": 940,
												"nodeType": "PlaceholderStatement",
												"src": "27198:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 941,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "27209:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27209:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "27209:20:0"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "26762:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 945,
									"name": "nonReentrant",
									"nameLocation": "27142:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27154:2:0"
									},
									"src": "27133:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "27281:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "27374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 950,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "27385:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27374:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27395:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27366:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "27366:63:0"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "27514:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27504:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "27504:18:0"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "27251:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27270:2:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27281:0:0"
									},
									"scope": 980,
									"src": "27242:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "27573:171:0",
										"statements": [
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 964,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "27725:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27715:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "27715:22:0"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "27544:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27562:2:0"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27573:0:0"
									},
									"scope": 980,
									"src": "27535:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "27987:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "28004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 975,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "28015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28004:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 973,
												"id": 977,
												"nodeType": "Return",
												"src": "27997:26:0"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "27750:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "27932:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27955:2:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "27981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27980:6:0"
									},
									"scope": 980,
									"src": "27923:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1411,
							"src": "25794:2238:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "28066:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 982,
										"name": "ERC20",
										"nameLocations": [
											"28117:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "28117:5:0"
									},
									"id": 983,
									"nodeType": "InheritanceSpecifier",
									"src": "28117:5:0"
								},
								{
									"baseName": {
										"id": 984,
										"name": "Ownable",
										"nameLocations": [
											"28124:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "28124:7:0"
									},
									"id": 985,
									"nodeType": "InheritanceSpecifier",
									"src": "28124:7:0"
								},
								{
									"baseName": {
										"id": 986,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"28133:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 980,
										"src": "28133:15:0"
									},
									"id": 987,
									"nodeType": "InheritanceSpecifier",
									"src": "28133:15:0"
								}
							],
							"canonicalName": "XEAMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								980,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "XEAMToken",
							"nameLocation": "28104:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 994,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "28179:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28155:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28155:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										},
										"id": 993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "325f3030305f303030",
											"id": 989,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28196:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000000_by_1",
												"typeString": "int_const 2000000"
											},
											"value": "2_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 992,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 990,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "28208:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 991,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "28212:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "28208:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "28196:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "df7787a4",
									"id": 1002,
									"mutability": "constant",
									"name": "MAX_WALLET",
									"nameLocation": "28244:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28220:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28220:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1001,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "28258:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28258:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 999,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "28257:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1000,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28280:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "28257:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3b2db3f",
									"id": 1010,
									"mutability": "constant",
									"name": "MAX_TX",
									"nameLocation": "28319:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28295:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28295:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1009,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "28329:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28346:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "28329:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1007,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "28328:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130303030",
											"id": 1008,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28351:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"src": "28328:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52a6a9ec",
									"id": 1012,
									"mutability": "mutable",
									"name": "encouragementFund",
									"nameLocation": "28387:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28372:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1011,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc859378",
									"id": 1014,
									"mutability": "mutable",
									"name": "emergencyFund",
									"nameLocation": "28425:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28410:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1013,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28410:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1016,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "28459:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28444:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1015,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28444:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06ee6ad8",
									"id": 1018,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "28495:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28480:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1017,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28480:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1020,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "28529:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28514:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1019,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28514:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02af37bb",
									"id": 1023,
									"mutability": "constant",
									"name": "BUY_TAX",
									"nameLocation": "28623:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28599:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28599:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1022,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28633:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54ad8aee",
									"id": 1026,
									"mutability": "constant",
									"name": "SELL_TAX",
									"nameLocation": "28665:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28641:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1024,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28641:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28676:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36b4134a",
									"id": 1029,
									"mutability": "constant",
									"name": "SLIPPAGE",
									"nameLocation": "28708:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28684:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28684:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 1028,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28719:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fbee193",
									"id": 1033,
									"mutability": "mutable",
									"name": "isExcludedFromFees",
									"nameLocation": "28783:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "28751:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1032,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1030,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28759:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28751:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1031,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "28770:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984",
									"id": 1039,
									"name": "TaxDistributed",
									"nameLocation": "28814:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28837:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "28829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "28852:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "28845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28845:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28828:33:0"
									},
									"src": "28808:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344",
									"id": 1043,
									"name": "UniswapPairUpdated",
									"nameLocation": "28873:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "28900:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "28892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28891:17:0"
									},
									"src": "28867:42:0"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "29152:313:0",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "29162:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1065,
														"name": "_encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "29182:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29162:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "29162:38:0"
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "29210:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "_emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "29226:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29210:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "29210:30:0"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "29250:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "29268:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29250:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "29250:34:0"
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1076,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "29294:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1077,
														"name": "_stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "29310:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29294:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "29294:30:0"
											},
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1080,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "29334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "_initialUniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "29348:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29334:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "29334:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29388:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29384:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "29396:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "29378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29378:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "29378:33:0"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1090,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "29421:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1093,
														"indexExpression": {
															"expression": {
																"id": 1091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29440:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29444:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29440:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29421:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29454:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29421:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "29421:37:0"
											}
										]
									},
									"id": 1098,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5845414d20546f6b656e",
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29110:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98e1b9db00eaaf366b935ad530b190d9773aad50d000749d85e219b8a5ba6845",
														"typeString": "literal_string \"XEAM Token\""
													},
													"value": "XEAM Token"
												},
												{
													"hexValue": "5845414d",
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29124:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_86097711d31c646e79eccbaca29da45b57f182582f3ece5f934788d25ae5c98b",
														"typeString": "literal_string \"XEAM\""
													},
													"value": "XEAM"
												}
											],
											"id": 1058,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1055,
												"name": "ERC20",
												"nameLocations": [
													"29104:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "29104:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29104:27:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1060,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "29140:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29144:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "29140:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1062,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1059,
												"name": "Ownable",
												"nameLocations": [
													"29132:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "29132:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29132:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "_encouragementFund",
												"nameLocation": "28944:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "28936:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_emergencyFund",
												"nameLocation": "28980:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "28972:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "29012:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "29004:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "_stakingWallet",
												"nameLocation": "29046:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "29038:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "_initialUniswapPair",
												"nameLocation": "29078:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "29070:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28926:177:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29152:0:0"
									},
									"scope": 1410,
									"src": "28915:550:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "29583:357:0",
										"statements": [
											{
												"condition": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "29597:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 1108,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "29598:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"expression": {
																"id": 1109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29617:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29621:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29617:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29598:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "29593:260:0",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "29630:223:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1115,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1100,
																						"src": "29679:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1114,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 357,
																					"src": "29669:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29669:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1117,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "29692:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29669:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1119,
																			"name": "MAX_WALLET",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "29702:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29669:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29730:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		},
																		"value": "Exceeds max wallet limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		}
																	],
																	"id": 1113,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "29644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29644:126:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1123,
															"nodeType": "ExpressionStatement",
															"src": "29644:126:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1125,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1102,
																			"src": "29792:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1126,
																			"name": "MAX_TX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "29802:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29792:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29810:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		},
																		"value": "Exceeds max transaction limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		}
																	],
																	"id": 1124,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "29784:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29784:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "29784:58:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29882:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29886:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29882:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "29894:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "29905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1133,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "29863:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29863:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "29863:49:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1107,
												"id": 1141,
												"nodeType": "Return",
												"src": "29922:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "29480:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29547:8:0"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "29497:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29489:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29516:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29508:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29488:35:0"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29573:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29572:6:0"
									},
									"scope": 1410,
									"src": "29471:469:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "30064:1963:0",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "30082:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30074:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"nodeType": "VariableDeclarationStatement",
												"src": "30074:11:0"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "lpShare",
														"nameLocation": "30103:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30095:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"nodeType": "VariableDeclarationStatement",
												"src": "30095:15:0"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "encouragementShare",
														"nameLocation": "30128:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30120:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30120:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"nodeType": "VariableDeclarationStatement",
												"src": "30120:26:0"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "emergencyShare",
														"nameLocation": "30164:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30156:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"nodeType": "VariableDeclarationStatement",
												"src": "30156:22:0"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "marketingShare",
														"nameLocation": "30196:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30188:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"nodeType": "VariableDeclarationStatement",
												"src": "30188:22:0"
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "stakingShare",
														"nameLocation": "30228:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "30220:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"nodeType": "VariableDeclarationStatement",
												"src": "30220:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1170,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "30306:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1171,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "30319:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30306:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "30783:443:0",
													"statements": [
														{
															"expression": {
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1228,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "30838:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1229,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "30845:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1230,
																					"name": "BUY_TAX",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "30854:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30845:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1232,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30844:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30865:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "30844:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30838:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1236,
															"nodeType": "ExpressionStatement",
															"src": "30838:30:0"
														},
														{
															"expression": {
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1237,
																	"name": "lpShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "30882:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1238,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30893:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30899:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "30893:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1241,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30892:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30904:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "30892:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30882:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "30882:24:0"
														},
														{
															"expression": {
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1246,
																	"name": "encouragementShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "30942:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1247,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30964:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 1248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30970:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "30964:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1250,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30963:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30975:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "30963:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30942:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "30942:35:0"
														},
														{
															"expression": {
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1255,
																	"name": "emergencyShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "31020:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1256,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "31038:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31044:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "31038:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1259,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31037:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31049:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "31037:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31020:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "31020:31:0"
														},
														{
															"expression": {
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1264,
																	"name": "marketingShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "31094:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1265,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "31112:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31118:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "31112:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1268,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31111:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31123:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "31111:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31094:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "31094:31:0"
														},
														{
															"expression": {
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1273,
																	"name": "stakingShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "31163:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1274,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "31179:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31185:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "31179:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1277,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31178:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31190:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "31178:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31163:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "31163:29:0"
														}
													]
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "30302:924:0",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "30332:445:0",
													"statements": [
														{
															"expression": {
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1173,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "30388:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1174,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "30395:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1175,
																					"name": "SELL_TAX",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "30404:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30395:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1177,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30394:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30416:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "30394:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30388:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1181,
															"nodeType": "ExpressionStatement",
															"src": "30388:31:0"
														},
														{
															"expression": {
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1182,
																	"name": "lpShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "30433:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1183,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30444:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 1184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30450:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "30444:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1186,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30443:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3132",
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30455:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12_by_1",
																			"typeString": "int_const 12"
																		},
																		"value": "12"
																	},
																	"src": "30443:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30433:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "30433:24:0"
														},
														{
															"expression": {
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1191,
																	"name": "encouragementShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "30493:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30515:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 1193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30521:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "30515:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1195,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30514:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3132",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30526:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12_by_1",
																			"typeString": "int_const 12"
																		},
																		"value": "12"
																	},
																	"src": "30514:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30493:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1199,
															"nodeType": "ExpressionStatement",
															"src": "30493:35:0"
														},
														{
															"expression": {
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1200,
																	"name": "emergencyShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "30571:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1201,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30589:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1202,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30595:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "30589:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1204,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30588:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3132",
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30600:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12_by_1",
																			"typeString": "int_const 12"
																		},
																		"value": "12"
																	},
																	"src": "30588:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30571:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "30571:31:0"
														},
														{
															"expression": {
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "marketingShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "30645:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1210,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30663:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30669:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "30663:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1213,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30662:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3132",
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30674:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12_by_1",
																			"typeString": "int_const 12"
																		},
																		"value": "12"
																	},
																	"src": "30662:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30645:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "30645:31:0"
														},
														{
															"expression": {
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1218,
																	"name": "stakingShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "30714:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1219,
																					"name": "tax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "30730:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1220,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30736:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "30730:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1222,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30729:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3132",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30741:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12_by_1",
																			"typeString": "int_const 12"
																		},
																		"value": "12"
																	},
																	"src": "30729:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30714:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1226,
															"nodeType": "ExpressionStatement",
															"src": "30714:29:0"
														}
													]
												}
											},
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "31244:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "31236:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1286,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "31256:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1287,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "31265:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31256:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31236:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "encouragementFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "31333:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31352:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1290,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31315:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31309:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31309:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "31309:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1299,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31401:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456e636f75726167656d656e742046756e64",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31421:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															},
															"value": "Encouragement Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															}
														],
														"id": 1298,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "31386:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31386:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "EmitStatement",
												"src": "31381:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1306,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "emergencyFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "31477:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1308,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "31492:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1303,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31459:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31453:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31453:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "31453:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1312,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "31537:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456d657267656e63792046756e64",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31553:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															},
															"value": "Emergency Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															}
														],
														"id": 1311,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "31522:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31522:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "31517:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31605:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31622:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1316,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31587:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31581:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31581:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "31581:56:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1325,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31667:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4d61726b6574696e67",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31683:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															},
															"value": "Marketing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															}
														],
														"id": 1324,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "31652:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31652:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "EmitStatement",
												"src": "31647:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31722:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "stakingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "31730:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1334,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "31745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1329,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31706:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31712:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31706:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31706:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "31706:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1338,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "31788:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5374616b696e67",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															},
															"value": "Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															}
														],
														"id": 1337,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "31773:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31773:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "EmitStatement",
												"src": "31768:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1348,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1410",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1410",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31847:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31847:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "31862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1342,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31823:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31829:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31823:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31823:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "31823:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1354,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "31938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4c697175696469747920506f6f6c",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31947:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															},
															"value": "Liquidity Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															}
														],
														"id": 1353,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "31923:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31923:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "EmitStatement",
												"src": "31918:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1361,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "31991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "31999:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "32010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1358,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "31975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1410_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31981:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "31975:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31975:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "31975:45:0"
											}
										]
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWithTaxes",
									"nameLocation": "29955:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "29983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "30015:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "30007:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30042:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "30034:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29973:81:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30064:0:0"
									},
									"scope": 1410,
									"src": "29946:2081:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "32141:55:0",
										"statements": [
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1376,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "32151:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"id": 1377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "32170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32151:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1379,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "32181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "32151:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "32151:38:0"
											}
										]
									},
									"functionSelector": "753cafc3",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1374,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1373,
												"name": "onlyOwner",
												"nameLocations": [
													"32127:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "32127:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32127:9:0"
										}
									],
									"name": "updateExcludedAccountStatus",
									"nameLocation": "32042:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32078:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "32070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "32092:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "32087:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32069:32:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32141:0:0"
									},
									"scope": 1410,
									"src": "32033:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "32350:155:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1391,
																"name": "newPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "32368:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32387:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32379:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1392,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32379:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32379:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32368:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32391:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															},
															"value": "New pair address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32360:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "32360:65:0"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1400,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "32435:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1401,
														"name": "newPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "32449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32435:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "32435:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1405,
															"name": "newPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "32490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1404,
														"name": "UniswapPairUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "32471:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32471:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "EmitStatement",
												"src": "32466:32:0"
											}
										]
									},
									"functionSelector": "c12b7c4e",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1387,
												"name": "onlyOwner",
												"nameLocations": [
													"32340:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "32340:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32340:9:0"
										}
									],
									"name": "updateUniswapPair",
									"nameLocation": "32296:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "32322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "32314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32313:17:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32350:0:0"
									},
									"scope": 1410,
									"src": "32287:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "28095:4412:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793,
								1039,
								1043
							]
						}
					],
					"src": "164:32344:0"
				},
				"id": 0
			}
		}
	}
}