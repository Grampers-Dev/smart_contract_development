{
	"id": "01991ac70dba8f4a525545b3bf1e567e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"xeam_test_contract_1_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.26;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: xeam_test_contract_1.sol\n\n\npragma solidity ^0.8.26;\n\n\n\n\n\ncontract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {\n    uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18;\n    uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100; // 1%\n    uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000; // 0.05%\n\n    address public encouragementFund;\n    address public emergencyFund;\n    address public marketingWallet;\n    address public stakingWallet;\n    address public uniswapPair;\n\n    uint256 public buyTax = 10;\n    uint256 public sellTax = 12;\n\n    mapping(address => bool) public isExcludedFromFees;\n\n    event TaxDistributed(uint256 amount, string category);\n    event UniswapPairUpdated(address newPair);\n    event TaxesUpdated(uint256 newBuyTax, uint256 newSellTax);\n    event LPFundsWithdrawn(uint256 amount);\n\n    constructor(\n        address _encouragementFund,\n        address _emergencyFund,\n        address _marketingWallet,\n        address _stakingWallet,\n        address _initialUniswapPair\n    ) ERC20(\"XEAM Token\", \"XEAM\") Ownable(msg.sender) {\n        encouragementFund = _encouragementFund;\n        emergencyFund = _emergencyFund;\n        marketingWallet = _marketingWallet;\n        stakingWallet = _stakingWallet;\n        uniswapPair = _initialUniswapPair;\n\n        _mint(msg.sender, INITIAL_SUPPLY);\n        isExcludedFromFees[msg.sender] = true;\n    }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        _applyTransferLimits(msg.sender, recipient, amount);\n        _transferWithTaxes(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        _applyTransferLimits(sender, recipient, amount);\n        _transferWithTaxes(sender, recipient, amount);\n        _approve(sender, msg.sender, allowance(sender, msg.sender) - amount);\n        return true;\n    }\n\n    function _applyTransferLimits(address sender, address recipient, uint256 amount) internal view {\n        if (!isExcludedFromFees[sender]) {\n            require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\");\n            require(amount <= MAX_TX, \"Exceeds max transaction limit\");\n        }\n    }\n\n    function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {\n        uint256 tax = (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100;\n        require(amount >= tax, \"Tax exceeds transfer amount\");\n\n        uint256 netAmount = amount - tax;\n        uint256 lpShare = (tax * 4) / 12;\n        uint256 encouragementShare = (tax * 4) / 12;\n        uint256 emergencyShare = (tax * 1) / 12;\n        uint256 marketingShare = (tax * 2) / 12;\n        uint256 stakingShare = (tax * 1) / 12;\n\n        super._transfer(sender, encouragementFund, encouragementShare);\n        emit TaxDistributed(encouragementShare, \"Encouragement Fund\");\n\n        super._transfer(sender, emergencyFund, emergencyShare);\n        emit TaxDistributed(emergencyShare, \"Emergency Fund\");\n\n        super._transfer(sender, marketingWallet, marketingShare);\n        emit TaxDistributed(marketingShare, \"Marketing\");\n\n        super._transfer(sender, stakingWallet, stakingShare);\n        emit TaxDistributed(stakingShare, \"Staking\");\n\n        super._transfer(sender, address(this), lpShare);\n        emit TaxDistributed(lpShare, \"Liquidity Pool\");\n\n        super._transfer(sender, recipient, netAmount);\n    }\n\n    function withdrawLPFunds() external onlyOwner {\n        uint256 balance = balanceOf(address(this));\n        require(balance > 0, \"No LP funds available\");\n        super._transfer(address(this), owner(), balance);\n        emit LPFundsWithdrawn(balance);\n    }\n\n    function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {\n        isExcludedFromFees[account] = excluded;\n    }\n\n    function updateUniswapPair(address newPair) external onlyOwner {\n        require(newPair != address(0), \"New pair address cannot be zero\");\n        uniswapPair = newPair;\n        emit UniswapPairUpdated(newPair);\n    }\n\n    function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {\n        require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\");\n        buyTax = _buyTax;\n        sellTax = _sellTax;\n        emit TaxesUpdated(_buyTax, _sellTax);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"xeam_test_contract_1_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "xeam_test_contract_1_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "xeam_test_contract_1_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "xeam_test_contract_1_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "xeam_test_contract_1_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "xeam_test_contract_1_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "xeam_test_contract_1_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 996,
								"contract": "xeam_test_contract_1_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 926,
								"contract": "xeam_test_contract_1_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"XEAMToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_encouragementFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_emergencyFund",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialUniswapPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LPFundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "TaxDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyTax",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellTax",
									"type": "uint256"
								}
							],
							"name": "TaxesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "UniswapPairUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encouragementFund",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "updateExcludedAccountStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellTax",
									"type": "uint256"
								}
							],
							"name": "updateTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "updateUniswapPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawLPFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"xeam_test_contract_1_flattened.sol\":30617:35152  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"xeam_test_contract_1_flattened.sol\":31103:31105  10 */\n  0x0a\n    /* \"xeam_test_contract_1_flattened.sol\":31079:31105  uint256 public buyTax = 10 */\n  0x0c\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31136:31138  12 */\n  0x0c\n    /* \"xeam_test_contract_1_flattened.sol\":31111:31138  uint256 public sellTax = 12 */\n  0x0d\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31416:31966  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"xeam_test_contract_1_flattened.sol\":31641:31651  msg.sender */\n  caller\n    /* \"xeam_test_contract_1_flattened.sol\":12470:12583  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2c22a0a6902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x5845414d)\n  dup2\n  mstore\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":12544:12549  name_ */\n  dup2\n    /* \"xeam_test_contract_1_flattened.sol\":12536:12541  _name */\n  0x03\n    /* \"xeam_test_contract_1_flattened.sol\":12536:12549  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":12559:12566  _symbol */\n  0x04\n    /* \"xeam_test_contract_1_flattened.sol\":12559:12576  _symbol = symbol_ */\n  tag_12\n    /* \"xeam_test_contract_1_flattened.sol\":12569:12576  symbol_ */\n  dup3\n    /* \"xeam_test_contract_1_flattened.sol\":12559:12566  _symbol */\n  dup3\n    /* \"xeam_test_contract_1_flattened.sol\":12559:12576  _symbol = symbol_ */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":23013:23039  initialOwner == address(0) */\n  dup2\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":23009:23104  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"xeam_test_contract_1_flattened.sol\":23062:23093  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"xeam_test_contract_1_flattened.sol\":23090:23091  0 */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":23062:23093  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"xeam_test_contract_1_flattened.sol\":23062:23093  OwnableInvalidOwner(address(0)) */\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"xeam_test_contract_1_flattened.sol\":23009:23104  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"xeam_test_contract_1_flattened.sol\":23113:23145  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"xeam_test_contract_1_flattened.sol\":23132:23144  initialOwner */\n  dup2\n    /* \"xeam_test_contract_1_flattened.sol\":23113:23131  _transferOwnership */\n  tag_18\n    /* \"xeam_test_contract_1_flattened.sol\":23113:23145  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":26591:26592  1 */\n  0x01\n    /* \"xeam_test_contract_1_flattened.sol\":26696:26703  _status */\n  0x06\n    /* \"xeam_test_contract_1_flattened.sol\":26696:26718  _status = _NOT_ENTERED */\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":28993:29000  _paused */\n  0x07\n    /* \"xeam_test_contract_1_flattened.sol\":28993:29008  _paused = false */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x01))\n    /* \"xeam_test_contract_1_flattened.sol\":31663:31701  encouragementFund = _encouragementFund */\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":28993:29008  _paused = false */\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":31663:31701  encouragementFund = _encouragementFund */\n  dup9\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31711:31724  emergencyFund */\n  0x08\n    /* \"xeam_test_contract_1_flattened.sol\":31711:31741  emergencyFund = _emergencyFund */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31751:31766  marketingWallet */\n  0x09\n    /* \"xeam_test_contract_1_flattened.sol\":31751:31785  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31795:31808  stakingWallet */\n  0x0a\n    /* \"xeam_test_contract_1_flattened.sol\":31795:31825  stakingWallet = _stakingWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup6\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31835:31846  uniswapPair */\n  0x0b\n    /* \"xeam_test_contract_1_flattened.sol\":31835:31868  uniswapPair = _initialUniswapPair */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  dup4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":31879:31912  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_22\n    /* \"xeam_test_contract_1_flattened.sol\":31885:31895  msg.sender */\n  caller\n    /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n  0x01a784379d99db42000000\n    /* \"xeam_test_contract_1_flattened.sol\":31879:31884  _mint */\n  tag_23\n    /* \"xeam_test_contract_1_flattened.sol\":31879:31912  _mint(msg.sender, INITIAL_SUPPLY) */\n  jump\t// in\ntag_22:\n  pop\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":31941:31951  msg.sender */\n  caller\n    /* \"xeam_test_contract_1_flattened.sol\":31922:31952  isExcludedFromFees[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"xeam_test_contract_1_flattened.sol\":31922:31940  isExcludedFromFees */\n  0x0e\n    /* \"xeam_test_contract_1_flattened.sol\":31922:31952  isExcludedFromFees[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xeam_test_contract_1_flattened.sol\":31922:31959  isExcludedFromFees[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":31955:31959  true */\n  0x01\n    /* \"xeam_test_contract_1_flattened.sol\":31922:31959  isExcludedFromFees[msg.sender] = true */\n  or\n  swap1\n  sstore\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":30617:35152  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  tag_49\n  swap2\n  pop\n  pop\n  jump\n    /* \"xeam_test_contract_1_flattened.sol\":24652:24839  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":24760:24777  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n  swap2\n  and\n  swap2\n    /* \"xeam_test_contract_1_flattened.sol\":24760:24777  _owner = newOwner */\n  swap1\n    /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n  dup3\n  swap1\n    /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"xeam_test_contract_1_flattened.sol\":24725:24741  address oldOwner */\n  0x00\n  swap1\n    /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"xeam_test_contract_1_flattened.sol\":24715:24839  {... */\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":24652:24839  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"xeam_test_contract_1_flattened.sol\":18327:18535  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":18397:18418  account == address(0) */\n  dup3\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":18393:18484  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"xeam_test_contract_1_flattened.sol\":18441:18473  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"xeam_test_contract_1_flattened.sol\":18470:18471  0 */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":18441:18473  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3538:3589   */\n  mstore\n    /* \"#utility.yul\":3511:3529   */\n  0x24\n  add\n    /* \"xeam_test_contract_1_flattened.sol\":18441:18473  ERC20InvalidReceiver(address(0)) */\n  tag_15\n    /* \"#utility.yul\":3392:3595   */\n  jump\n    /* \"xeam_test_contract_1_flattened.sol\":18393:18484  if (account == address(0)) {... */\ntag_27:\n    /* \"xeam_test_contract_1_flattened.sol\":18493:18528  _update(address(0), account, value) */\n  tag_29\n    /* \"xeam_test_contract_1_flattened.sol\":18509:18510  0 */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":18513:18520  account */\n  dup4\n    /* \"xeam_test_contract_1_flattened.sol\":18522:18527  value */\n  dup4\n    /* \"xeam_test_contract_1_flattened.sol\":18493:18500  _update */\n  tag_30\n    /* \"xeam_test_contract_1_flattened.sol\":18493:18528  _update(address(0), account, value) */\n  jump\t// in\ntag_29:\n    /* \"xeam_test_contract_1_flattened.sol\":18327:18535  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"xeam_test_contract_1_flattened.sol\":16877:17984  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":16966:16984  from == address(0) */\n  dup4\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"xeam_test_contract_1_flattened.sol\":17118:17123  value */\n  dup1\n    /* \"xeam_test_contract_1_flattened.sol\":17102:17114  _totalSupply */\n  0x02\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":17102:17123  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\n  tag_35\n  swap1\n  pop\n  jump\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17176:17191  _balances[from] */\n  dup4\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17154:17173  uint256 fromBalance */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":17176:17191  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"xeam_test_contract_1_flattened.sol\":17209:17228  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"xeam_test_contract_1_flattened.sol\":17205:17320  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4047:4079   */\n  dup6\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4029:4080   */\n  mstore\n    /* \"#utility.yul\":4096:4114   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4089:4123   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4139:4157   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4132:4166   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4002:4020   */\n  0x64\n  add\n    /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_15\n    /* \"#utility.yul\":3827:4172   */\n  jump\n    /* \"xeam_test_contract_1_flattened.sol\":17205:17320  if (fromBalance < value) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17440:17455  _balances[from] */\n  dup5\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17440:17449  _balances */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":17440:17455  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xeam_test_contract_1_flattened.sol\":17458:17477  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"xeam_test_contract_1_flattened.sol\":17440:17477  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17516:17532  to == address(0) */\n  dup3\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"xeam_test_contract_1_flattened.sol\":17679:17691  _totalSupply */\n  0x02\n    /* \"xeam_test_contract_1_flattened.sol\":17679:17700  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17890:17903  _balances[to] */\n  dup3\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17890:17899  _balances */\n  0x00\n    /* \"xeam_test_contract_1_flattened.sol\":17890:17903  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xeam_test_contract_1_flattened.sol\":17890:17912  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\ntag_40:\n    /* \"xeam_test_contract_1_flattened.sol\":17967:17969  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n  and\n    /* \"xeam_test_contract_1_flattened.sol\":17961:17965  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"xeam_test_contract_1_flattened.sol\":17971:17976  value */\n  dup4\n    /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n    /* \"#utility.yul\":4323:4348   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4311:4313   */\n  0x20\n    /* \"#utility.yul\":4296:4314   */\n  add\n  swap1\n    /* \"#utility.yul\":4177:4354   */\n  jump\n    /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"xeam_test_contract_1_flattened.sol\":16877:17984  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_43:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_51:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_53:\n    /* \"#utility.yul\":427:467   */\n  tag_54\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_43\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_55\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_43\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_56\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_43\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_57\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_43\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_58\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_43\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":751:878   */\ntag_44:\n    /* \"#utility.yul\":812:822   */\n  0x4e487b71\n    /* \"#utility.yul\":807:810   */\n  0xe0\n    /* \"#utility.yul\":803:823   */\n  shl\n    /* \"#utility.yul\":800:801   */\n  0x00\n    /* \"#utility.yul\":793:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":883:1263   */\ntag_45:\n    /* \"#utility.yul\":962:963   */\n  0x01\n    /* \"#utility.yul\":958:970   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1005:1017   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1026:1087   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1080:1084   */\n  0x7f\n    /* \"#utility.yul\":1072:1078   */\n  dup3\n    /* \"#utility.yul\":1068:1085   */\n  and\n    /* \"#utility.yul\":1058:1085   */\n  swap2\n  pop\n    /* \"#utility.yul\":1026:1087   */\ntag_61:\n    /* \"#utility.yul\":1133:1135   */\n  0x20\n    /* \"#utility.yul\":1125:1131   */\n  dup3\n    /* \"#utility.yul\":1122:1136   */\n  lt\n    /* \"#utility.yul\":1102:1120   */\n  dup2\n    /* \"#utility.yul\":1099:1137   */\n  sub\n    /* \"#utility.yul\":1096:1257   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1179:1189   */\n  0x4e487b71\n    /* \"#utility.yul\":1174:1177   */\n  0xe0\n    /* \"#utility.yul\":1170:1190   */\n  shl\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1160:1191   */\n  mstore\n    /* \"#utility.yul\":1214:1218   */\n  0x22\n    /* \"#utility.yul\":1211:1212   */\n  0x04\n    /* \"#utility.yul\":1204:1219   */\n  mstore\n    /* \"#utility.yul\":1242:1246   */\n  0x24\n    /* \"#utility.yul\":1239:1240   */\n  0x00\n    /* \"#utility.yul\":1232:1247   */\n  revert\n    /* \"#utility.yul\":1096:1257   */\ntag_62:\n  pop\n    /* \"#utility.yul\":883:1263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1912   */\ntag_47:\n    /* \"#utility.yul\":1496:1498   */\n  0x1f\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1488:1499   */\n  gt\n    /* \"#utility.yul\":1485:1906   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1532:1537   */\n  dup1\n    /* \"#utility.yul\":1529:1530   */\n  0x00\n    /* \"#utility.yul\":1522:1538   */\n  mstore\n    /* \"#utility.yul\":1576:1580   */\n  0x20\n    /* \"#utility.yul\":1573:1574   */\n  0x00\n    /* \"#utility.yul\":1563:1581   */\n  keccak256\n    /* \"#utility.yul\":1646:1648   */\n  0x1f\n    /* \"#utility.yul\":1634:1644   */\n  dup5\n    /* \"#utility.yul\":1630:1649   */\n  add\n    /* \"#utility.yul\":1627:1628   */\n  0x05\n    /* \"#utility.yul\":1623:1650   */\n  shr\n    /* \"#utility.yul\":1617:1621   */\n  dup2\n    /* \"#utility.yul\":1613:1651   */\n  add\n    /* \"#utility.yul\":1682:1686   */\n  0x20\n    /* \"#utility.yul\":1670:1680   */\n  dup6\n    /* \"#utility.yul\":1667:1687   */\n  lt\n    /* \"#utility.yul\":1664:1711   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":1705:1709   */\n  dup1\n    /* \"#utility.yul\":1664:1711   */\ntag_66:\n    /* \"#utility.yul\":1760:1762   */\n  0x1f\n    /* \"#utility.yul\":1755:1758   */\n  dup5\n    /* \"#utility.yul\":1751:1763   */\n  add\n    /* \"#utility.yul\":1748:1749   */\n  0x05\n    /* \"#utility.yul\":1744:1764   */\n  shr\n    /* \"#utility.yul\":1738:1742   */\n  dup3\n    /* \"#utility.yul\":1734:1765   */\n  add\n    /* \"#utility.yul\":1724:1765   */\n  swap2\n  pop\n    /* \"#utility.yul\":1815:1896   */\ntag_67:\n    /* \"#utility.yul\":1833:1835   */\n  dup2\n    /* \"#utility.yul\":1826:1831   */\n  dup2\n    /* \"#utility.yul\":1823:1836   */\n  lt\n    /* \"#utility.yul\":1815:1896   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1878:1894   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1859:1860   */\n  0x01\n    /* \"#utility.yul\":1848:1861   */\n  add\n    /* \"#utility.yul\":1815:1896   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1819:1822   */\n  pop\n  pop\n    /* \"#utility.yul\":1485:1906   */\ntag_65:\n    /* \"#utility.yul\":1394:1912   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2088:3387   */\ntag_11:\n    /* \"#utility.yul\":2208:2218   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2230:2260   */\n  dup2\n  gt\n    /* \"#utility.yul\":2227:2283   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2263:2281   */\n  tag_73\n  tag_44\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2292:2389   */\n  tag_74\n    /* \"#utility.yul\":2382:2388   */\n  dup2\n    /* \"#utility.yul\":2342:2380   */\n  tag_75\n    /* \"#utility.yul\":2374:2378   */\n  dup5\n    /* \"#utility.yul\":2368:2379   */\n  sload\n    /* \"#utility.yul\":2342:2380   */\n  tag_45\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2336:2340   */\n  dup5\n    /* \"#utility.yul\":2292:2389   */\n  tag_47\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2438:2442   */\n  0x20\n    /* \"#utility.yul\":2469:2471   */\n  0x1f\n    /* \"#utility.yul\":2458:2472   */\n  dup3\n  gt\n    /* \"#utility.yul\":2486:2487   */\n  0x01\n    /* \"#utility.yul\":2481:3130   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3174:3175   */\n  0x00\n    /* \"#utility.yul\":3191:3197   */\n  dup4\n    /* \"#utility.yul\":3188:3277   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":3243:3262   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3237:3263   */\n  mload\n    /* \"#utility.yul\":3188:3277   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":2045:2046   */\n  0x03\n    /* \"#utility.yul\":2041:2052   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2037:2061   */\n  shr\n    /* \"#utility.yul\":2033:2062   */\n  not\n    /* \"#utility.yul\":2023:2063   */\n  and\n    /* \"#utility.yul\":2069:2070   */\n  0x01\n    /* \"#utility.yul\":2065:2076   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2020:2077   */\n  or\n    /* \"#utility.yul\":3290:3371   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2451:3381   */\n  jump(tag_69)\n    /* \"#utility.yul\":2481:3130   */\ntag_77:\n    /* \"#utility.yul\":1341:1342   */\n  0x00\n    /* \"#utility.yul\":1334:1348   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1378:1382   */\n  0x20\n    /* \"#utility.yul\":1365:1383   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2517:2537   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2635:2857   */\ntag_81:\n    /* \"#utility.yul\":2649:2656   */\n  dup3\n    /* \"#utility.yul\":2646:2647   */\n  dup2\n    /* \"#utility.yul\":2643:2657   */\n  lt\n    /* \"#utility.yul\":2635:2857   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2731:2750   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2725:2751   */\n  mload\n    /* \"#utility.yul\":2710:2752   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2838:2842   */\n  0x20\n    /* \"#utility.yul\":2823:2843   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2791:2792   */\n  0x01\n    /* \"#utility.yul\":2779:2793   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2665:2677   */\n  add\n    /* \"#utility.yul\":2635:2857   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":2639:2642   */\n  pop\n    /* \"#utility.yul\":2885:2891   */\n  dup5\n    /* \"#utility.yul\":2876:2883   */\n  dup3\n    /* \"#utility.yul\":2873:2892   */\n  lt\n    /* \"#utility.yul\":2870:3071   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2946:2965   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2940:2966   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3029:3030   */\n  0x03\n    /* \"#utility.yul\":3025:3039   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3041:3044   */\n  0xf8\n    /* \"#utility.yul\":3021:3045   */\n  and\n    /* \"#utility.yul\":3017:3054   */\n  shr\n    /* \"#utility.yul\":3013:3055   */\n  not\n    /* \"#utility.yul\":2998:3056   */\n  and\n    /* \"#utility.yul\":2983:3057   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2870:3071   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3117:3118   */\n  0x01\n    /* \"#utility.yul\":3101:3115   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3097:3119   */\n  add\n    /* \"#utility.yul\":3084:3120   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2088:3387   */\n  jump\t// out\n    /* \"#utility.yul\":3600:3822   */\ntag_34:\n    /* \"#utility.yul\":3665:3674   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3686:3696   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3683:3816   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3738:3748   */\n  0x4e487b71\n    /* \"#utility.yul\":3733:3736   */\n  0xe0\n    /* \"#utility.yul\":3729:3749   */\n  shl\n    /* \"#utility.yul\":3726:3727   */\n  0x00\n    /* \"#utility.yul\":3719:3750   */\n  mstore\n    /* \"#utility.yul\":3773:3777   */\n  0x11\n    /* \"#utility.yul\":3770:3771   */\n  0x04\n    /* \"#utility.yul\":3763:3778   */\n  mstore\n    /* \"#utility.yul\":3801:3805   */\n  0x24\n    /* \"#utility.yul\":3798:3799   */\n  0x00\n    /* \"#utility.yul\":3791:3806   */\n  revert\n    /* \"#utility.yul\":3683:3816   */\ntag_87:\n    /* \"#utility.yul\":3600:3822   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4177:4354   */\ntag_49:\n    /* \"xeam_test_contract_1_flattened.sol\":30617:35152  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"xeam_test_contract_1_flattened.sol\":30617:35152  contract XEAMToken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x753cafc3\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc12b7c4e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdf7787a4\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf3b2db3f\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xc12b7c4e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcc859378\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbea9ea62\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x753cafc3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x313ce567\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x52a6a9ec\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x52a6a9ec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4fbee193\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x1006ee0c\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x1006ee0c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x06ee6ad8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"xeam_test_contract_1_flattened.sol\":31012:31040  address public stakingWallet */\n    tag_3:\n      sload(0x0a)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":31012:31040  address public stakingWallet */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"xeam_test_contract_1_flattened.sol\":12648:12737  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":14867:15053  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":14867:15053  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_42\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":34764:35012  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_6:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"xeam_test_contract_1_flattened.sol\":13718:13815  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"xeam_test_contract_1_flattened.sol\":13796:13808  _totalSupply */\n      sload(0x02)\n        /* \"xeam_test_contract_1_flattened.sol\":13718:13815  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":1817:1842   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":13718:13815  function totalSupply() public view virtual returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":32224:32560  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_8:\n      tag_48\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":30687:30746  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n    tag_9:\n      tag_58\n        /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1_flattened.sol\":30687:30746  uint256 public constant INITIAL_SUPPLY = 2_000_000 * 10**18 */\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":13576:13658  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"xeam_test_contract_1_flattened.sol\":13649:13651  18 */\n      0x12\n        /* \"#utility.yul\":2374:2410   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2362:2364   */\n      0x20\n        /* \"#utility.yul\":2347:2365   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":13576:13658  function decimals() public view virtual returns (uint8) {... */\n      tag_42\n        /* \"#utility.yul\":2232:2416   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":35085:35150  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_54\n      tag_75\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":31079:31105  uint256 public buyTax = 10 */\n    tag_12:\n      tag_58\n      sload(0x0c)\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":31145:31195  mapping(address => bool) public isExcludedFromFees */\n    tag_13:\n      tag_48\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":30904:30936  address public encouragementFund */\n    tag_14:\n      sload(0x07)\n      tag_40\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":29612:29696  function paused() public view virtual returns (bool) {... */\n    tag_15:\n        /* \"xeam_test_contract_1_flattened.sol\":29682:29689  _paused */\n      and(0xff, sload(0x07))\n        /* \"xeam_test_contract_1_flattened.sol\":29612:29696  function paused() public view virtual returns (bool) {... */\n      jump(tag_48)\n        /* \"xeam_test_contract_1_flattened.sol\":13873:13989  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_58\n      tag_91\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":13964:13982  _balances[account] */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":13938:13945  uint256 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":13964:13982  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":13873:13989  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":24033:24134  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_54\n      tag_95\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":34391:34534  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n    tag_18:\n      tag_54\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":30976:31006  address public marketingWallet */\n    tag_19:\n      sload(0x09)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":35018:35079  function pause() external onlyOwner {... */\n    tag_20:\n      tag_54\n      tag_104\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":23378:23463  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"xeam_test_contract_1_flattened.sol\":23450:23456  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"xeam_test_contract_1_flattened.sol\":23378:23463  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"xeam_test_contract_1_flattened.sol\":12850:12943  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_44\n      tag_109\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":31972:32218  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_23:\n      tag_48\n      tag_112\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":34127:34385  function withdrawLPFunds() external onlyOwner {... */\n    tag_24:\n      tag_54\n      tag_116\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":34540:34758  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_25:\n      tag_54\n      tag_118\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":31046:31072  address public uniswapPair */\n    tag_26:\n      sload(0x0b)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":31111:31138  uint256 public sellTax = 12 */\n    tag_27:\n      tag_58\n      sload(0x0d)\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":30942:30970  address public emergencyFund */\n    tag_28:\n      sload(0x08)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":14420:14560  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_58\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":14500:14507  uint256 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14537  _allowances */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14553  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":14420:14560  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":30752:30815  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_30:\n      tag_58\n      tag_135\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":24283:24498  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_54\n      tag_138\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":30827:30888  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_32:\n      tag_58\n      tag_141\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":12648:12737  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"xeam_test_contract_1_flattened.sol\":12693:12706  string memory */\n      0x60\n        /* \"xeam_test_contract_1_flattened.sol\":12725:12730  _name */\n      0x03\n        /* \"xeam_test_contract_1_flattened.sol\":12718:12730  return _name */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_145\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":12648:12737  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":14867:15053  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"xeam_test_contract_1_flattened.sol\":14940:14944  bool */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":14994:15025  _approve(owner, spender, value) */\n      tag_153\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":15010:15017  spender */\n      dup6\n        /* \"xeam_test_contract_1_flattened.sol\":15019:15024  value */\n      dup6\n        /* \"xeam_test_contract_1_flattened.sol\":14994:15002  _approve */\n      tag_154\n        /* \"xeam_test_contract_1_flattened.sol\":14994:15025  _approve(owner, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"xeam_test_contract_1_flattened.sol\":15042:15046  true */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":15035:15046  return true */\n      swap2\n      pop\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":14867:15053  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_150:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":34764:35012  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n    tag_57:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_156\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"xeam_test_contract_1_flattened.sol\":34868:34870  15 */\n      0x0f\n        /* \"xeam_test_contract_1_flattened.sol\":34857:34864  _buyTax */\n      dup3\n        /* \"xeam_test_contract_1_flattened.sol\":34857:34870  _buyTax <= 15 */\n      gt\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":34857:34888  _buyTax <= 15 && _sellTax <= 20 */\n      dup1\n      iszero\n      tag_159\n      jumpi\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":34886:34888  20 */\n      0x14\n        /* \"xeam_test_contract_1_flattened.sol\":34874:34882  _sellTax */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":34874:34888  _sellTax <= 20 */\n      gt\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":34857:34888  _buyTax <= 15 && _sellTax <= 20 */\n    tag_159:\n        /* \"xeam_test_contract_1_flattened.sol\":34849:34905  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3816:3818   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":34849:34905  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3798:3819   */\n      mstore\n        /* \"#utility.yul\":3855:3857   */\n      0x0c\n        /* \"#utility.yul\":3835:3853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3828:3858   */\n      mstore\n      shl(0xa3, 0x0a8c2f040e8dede40d0d2ced)\n        /* \"#utility.yul\":3874:3892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3867:3909   */\n      mstore\n        /* \"#utility.yul\":3926:3944   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34849:34905  require(_buyTax <= 15 && _sellTax <= 20, \"Tax too high\") */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"xeam_test_contract_1_flattened.sol\":34915:34921  buyTax */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":34915:34931  buyTax = _buyTax */\n      dup3\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":34941:34948  sellTax */\n      0x0d\n        /* \"xeam_test_contract_1_flattened.sol\":34941:34959  sellTax = _sellTax */\n      dup2\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":34974:35005  TaxesUpdated(_buyTax, _sellTax) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4129:4154   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4185:4187   */\n      0x20\n        /* \"#utility.yul\":4170:4188   */\n      dup2\n      add\n        /* \"#utility.yul\":4163:4197   */\n      dup4\n      swap1\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":34974:35005  TaxesUpdated(_buyTax, _sellTax) */\n      0x35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4\n      swap2\n        /* \"#utility.yul\":4102:4120   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34974:35005  TaxesUpdated(_buyTax, _sellTax) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":34764:35012  function updateTaxes(uint256 _buyTax, uint256 _sellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":32224:32560  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_65:\n        /* \"xeam_test_contract_1_flattened.sol\":32336:32340  bool */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      tag_167\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29253  _requireNotPaused */\n      tag_168\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      jump\t// in\n    tag_167:\n        /* \"xeam_test_contract_1_flattened.sol\":32352:32399  _applyTransferLimits(sender, recipient, amount) */\n      tag_170\n        /* \"xeam_test_contract_1_flattened.sol\":32373:32379  sender */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32381:32390  recipient */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32392:32398  amount */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32352:32372  _applyTransferLimits */\n      tag_171\n        /* \"xeam_test_contract_1_flattened.sol\":32352:32399  _applyTransferLimits(sender, recipient, amount) */\n      jump\t// in\n    tag_170:\n        /* \"xeam_test_contract_1_flattened.sol\":32409:32454  _transferWithTaxes(sender, recipient, amount) */\n      tag_172\n        /* \"xeam_test_contract_1_flattened.sol\":32428:32434  sender */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32436:32445  recipient */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32447:32453  amount */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32409:32427  _transferWithTaxes */\n      tag_173\n        /* \"xeam_test_contract_1_flattened.sol\":32409:32454  _transferWithTaxes(sender, recipient, amount) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      dup5\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":14500:14507  uint256 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14537  _allowances */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":32481:32491  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14553  _allowances[owner][spender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"xeam_test_contract_1_flattened.sol\":32464:32532  _approve(sender, msg.sender, allowance(sender, msg.sender) - amount) */\n      tag_174\n      swap2\n        /* \"xeam_test_contract_1_flattened.sol\":14526:14544  _allowances[owner] */\n      dup7\n      swap2\n        /* \"xeam_test_contract_1_flattened.sol\":32493:32531  allowance(sender, msg.sender) - amount */\n      tag_176\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":32525:32531  amount */\n      dup7\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":32493:32531  allowance(sender, msg.sender) - amount */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"xeam_test_contract_1_flattened.sol\":32464:32472  _approve */\n      tag_154\n        /* \"xeam_test_contract_1_flattened.sol\":32464:32532  _approve(sender, msg.sender, allowance(sender, msg.sender) - amount) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":32549:32553  true */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":32224:32560  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":35085:35150  function unpause() external onlyOwner {... */\n    tag_75:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_180\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"xeam_test_contract_1_flattened.sol\":35133:35143  _unpause() */\n      tag_182\n        /* \"xeam_test_contract_1_flattened.sol\":35133:35141  _unpause */\n      tag_183\n        /* \"xeam_test_contract_1_flattened.sol\":35133:35143  _unpause() */\n      jump\t// in\n    tag_182:\n        /* \"xeam_test_contract_1_flattened.sol\":35085:35150  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":24033:24134  function renounceOwnership() public virtual onlyOwner {... */\n    tag_95:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_187\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"xeam_test_contract_1_flattened.sol\":24097:24127  _transferOwnership(address(0)) */\n      tag_182\n        /* \"xeam_test_contract_1_flattened.sol\":24124:24125  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":24097:24115  _transferOwnership */\n      tag_190\n        /* \"xeam_test_contract_1_flattened.sol\":24097:24127  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":34391:34534  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n    tag_99:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_192\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":34489:34516  isExcludedFromFees[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":34489:34507  isExcludedFromFees */\n      0x0e\n        /* \"xeam_test_contract_1_flattened.sol\":34489:34516  isExcludedFromFees[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":34489:34527  isExcludedFromFees[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":34391:34534  function updateExcludedAccountStatus(address account, bool excluded) external onlyOwner {... */\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":35018:35079  function pause() external onlyOwner {... */\n    tag_104:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_195\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"xeam_test_contract_1_flattened.sol\":35064:35072  _pause() */\n      tag_182\n        /* \"xeam_test_contract_1_flattened.sol\":35064:35070  _pause */\n      tag_198\n        /* \"xeam_test_contract_1_flattened.sol\":35064:35072  _pause() */\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":12850:12943  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"xeam_test_contract_1_flattened.sol\":12897:12910  string memory */\n      0x60\n        /* \"xeam_test_contract_1_flattened.sol\":12929:12936  _symbol */\n      0x04\n        /* \"xeam_test_contract_1_flattened.sol\":12922:12936  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":31972:32218  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_113:\n        /* \"xeam_test_contract_1_flattened.sol\":32064:32068  bool */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      tag_207\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29253  _requireNotPaused */\n      tag_168\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      jump\t// in\n    tag_207:\n        /* \"xeam_test_contract_1_flattened.sol\":32080:32131  _applyTransferLimits(msg.sender, recipient, amount) */\n      tag_209\n        /* \"xeam_test_contract_1_flattened.sol\":32101:32111  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":32113:32122  recipient */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32124:32130  amount */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32080:32100  _applyTransferLimits */\n      tag_171\n        /* \"xeam_test_contract_1_flattened.sol\":32080:32131  _applyTransferLimits(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_209:\n        /* \"xeam_test_contract_1_flattened.sol\":32141:32190  _transferWithTaxes(msg.sender, recipient, amount) */\n      tag_210\n        /* \"xeam_test_contract_1_flattened.sol\":32160:32170  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":32172:32181  recipient */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32183:32189  amount */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":32141:32159  _transferWithTaxes */\n      tag_173\n        /* \"xeam_test_contract_1_flattened.sol\":32141:32190  _transferWithTaxes(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":32207:32211  true */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":31972:32218  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":34127:34385  function withdrawLPFunds() external onlyOwner {... */\n    tag_116:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_212\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"xeam_test_contract_1_flattened.sol\":34219:34223  this */\n      address\n        /* \"xeam_test_contract_1_flattened.sol\":34183:34198  uint256 balance */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":13964:13982  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"xeam_test_contract_1_flattened.sol\":34243:34254  balance > 0 */\n      dup1\n        /* \"xeam_test_contract_1_flattened.sol\":34235:34280  require(balance > 0, \"No LP funds available\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":34235:34280  require(balance > 0, \"No LP funds available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4657:4678   */\n      mstore\n        /* \"#utility.yul\":4714:4716   */\n      0x15\n        /* \"#utility.yul\":4694:4712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4687:4717   */\n      mstore\n      shl(0x58, 0x4e6f204c502066756e647320617661696c61626c65)\n        /* \"#utility.yul\":4733:4751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4726:4777   */\n      mstore\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34235:34280  require(balance > 0, \"No LP funds available\") */\n      tag_161\n        /* \"#utility.yul\":4473:4818   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":34235:34280  require(balance > 0, \"No LP funds available\") */\n    tag_215:\n        /* \"xeam_test_contract_1_flattened.sol\":34290:34338  super._transfer(address(this), owner(), balance) */\n      tag_218\n        /* \"xeam_test_contract_1_flattened.sol\":34314:34318  this */\n      address\n        /* \"xeam_test_contract_1_flattened.sol\":34321:34328  owner() */\n      tag_219\n        /* \"xeam_test_contract_1_flattened.sol\":23450:23456  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":23378:23463  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":34321:34328  owner() */\n    tag_219:\n        /* \"xeam_test_contract_1_flattened.sol\":34330:34337  balance */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":34290:34305  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":34290:34338  super._transfer(address(this), owner(), balance) */\n      jump\t// in\n    tag_218:\n        /* \"xeam_test_contract_1_flattened.sol\":34353:34378  LPFundsWithdrawn(balance) */\n      mload(0x40)\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":34353:34378  LPFundsWithdrawn(balance) */\n      0xbba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93\n      swap1\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34353:34378  LPFundsWithdrawn(balance) */\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":34173:34385  {... */\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":34127:34385  function withdrawLPFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":34540:34758  function updateUniswapPair(address newPair) external onlyOwner {... */\n    tag_119:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_223\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":34621:34642  newPair != address(0) */\n      dup2\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":34613:34678  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5025:5027   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":34613:34678  require(newPair != address(0), \"New pair address cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5007:5028   */\n      mstore\n        /* \"#utility.yul\":5064:5066   */\n      0x1f\n        /* \"#utility.yul\":5044:5062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5037:5067   */\n      mstore\n        /* \"#utility.yul\":5103:5136   */\n      0x4e6577207061697220616464726573732063616e6e6f74206265207a65726f00\n        /* \"#utility.yul\":5083:5101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5076:5137   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34613:34678  require(newPair != address(0), \"New pair address cannot be zero\") */\n      tag_161\n        /* \"#utility.yul\":4823:5178   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":34613:34678  require(newPair != address(0), \"New pair address cannot be zero\") */\n    tag_225:\n        /* \"xeam_test_contract_1_flattened.sol\":34688:34699  uniswapPair */\n      0x0b\n        /* \"xeam_test_contract_1_flattened.sol\":34688:34709  uniswapPair = newPair */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":34724:34751  UniswapPairUpdated(newPair) */\n      mload(0x40)\n        /* \"#utility.yul\":160:211   */\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":34724:34751  UniswapPairUpdated(newPair) */\n      0xdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":34724:34751  UniswapPairUpdated(newPair) */\n      tag_221\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":30752:30815  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n    tag_135:\n        /* \"xeam_test_contract_1_flattened.sol\":30812:30815  100 */\n      0x64\n        /* \"xeam_test_contract_1_flattened.sol\":30790:30808  INITIAL_SUPPLY * 1 */\n      tag_230\n        /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1_flattened.sol\":30807:30808  1 */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":30790:30808  INITIAL_SUPPLY * 1 */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"xeam_test_contract_1_flattened.sol\":30789:30815  (INITIAL_SUPPLY * 1) / 100 */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"xeam_test_contract_1_flattened.sol\":30752:30815  uint256 public constant MAX_WALLET = (INITIAL_SUPPLY * 1) / 100 */\n      dup2\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":24283:24498  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_139:\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      tag_235\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23282  _checkOwner */\n      tag_157\n        /* \"xeam_test_contract_1_flattened.sol\":23271:23284  _checkOwner() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":24367:24389  newOwner == address(0) */\n      dup2\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":24363:24454  if (newOwner == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":24412:24443  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":24440:24441  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":24412:24443  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":24412:24443  OwnableInvalidOwner(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":24363:24454  if (newOwner == address(0)) {... */\n    tag_237:\n        /* \"xeam_test_contract_1_flattened.sol\":24463:24491  _transferOwnership(newOwner) */\n      tag_239\n        /* \"xeam_test_contract_1_flattened.sol\":24482:24490  newOwner */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":24463:24481  _transferOwnership */\n      tag_190\n        /* \"xeam_test_contract_1_flattened.sol\":24463:24491  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_239:\n        /* \"xeam_test_contract_1_flattened.sol\":24283:24498  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":30827:30888  uint256 public constant MAX_TX = (INITIAL_SUPPLY * 5) / 10000 */\n    tag_141:\n        /* \"xeam_test_contract_1_flattened.sol\":30883:30888  10000 */\n      0x2710\n        /* \"xeam_test_contract_1_flattened.sol\":30861:30879  INITIAL_SUPPLY * 5 */\n      tag_230\n        /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1_flattened.sol\":30878:30879  5 */\n      0x05\n        /* \"xeam_test_contract_1_flattened.sol\":30861:30879  INITIAL_SUPPLY * 5 */\n      tag_231\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":19595:19723  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_154:\n        /* \"xeam_test_contract_1_flattened.sol\":19679:19716  _approve(owner, spender, value, true) */\n      tag_244\n        /* \"xeam_test_contract_1_flattened.sol\":19688:19693  owner */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":19695:19702  spender */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":19704:19709  value */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":19711:19715  true */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":19679:19687  _approve */\n      tag_245\n        /* \"xeam_test_contract_1_flattened.sol\":19679:19716  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_244:\n        /* \"xeam_test_contract_1_flattened.sol\":19595:19723  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":23536:23698  function _checkOwner() internal view virtual {... */\n    tag_157:\n        /* \"xeam_test_contract_1_flattened.sol\":23450:23456  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":23595:23618  owner() != _msgSender() */\n      eq\n        /* \"xeam_test_contract_1_flattened.sol\":23591:23692  if (owner() != _msgSender()) {... */\n      tag_182\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":23641:23681  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":23641:23681  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":23641:23681  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":29764:29870  function _requireNotPaused() internal view virtual {... */\n    tag_168:\n        /* \"xeam_test_contract_1_flattened.sol\":29682:29689  _paused */\n      and(0xff, sload(0x07))\n        /* \"xeam_test_contract_1_flattened.sol\":29833:29842  !paused() */\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":29825:29863  require(!paused(), \"Pausable: paused\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":29825:29863  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5762:5783   */\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x10\n        /* \"#utility.yul\":5799:5817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5792:5822   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5838:5856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5831:5877   */\n      mstore\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":29825:29863  require(!paused(), \"Pausable: paused\") */\n      tag_161\n        /* \"#utility.yul\":5578:5918   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":32566:32887  function _applyTransferLimits(address sender, address recipient, uint256 amount) internal view {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":32676:32702  isExcludedFromFees[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":32676:32694  isExcludedFromFees */\n      0x0e\n        /* \"xeam_test_contract_1_flattened.sol\":32676:32702  isExcludedFromFees[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":32671:32881  if (!isExcludedFromFees[sender]) {... */\n      tag_244\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":30812:30815  100 */\n      0x64\n        /* \"xeam_test_contract_1_flattened.sol\":30790:30808  INITIAL_SUPPLY * 1 */\n      tag_259\n        /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1_flattened.sol\":30807:30808  1 */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":30790:30808  INITIAL_SUPPLY * 1 */\n      tag_231\n      jump\t// in\n    tag_259:\n        /* \"xeam_test_contract_1_flattened.sol\":30789:30815  (INITIAL_SUPPLY * 1) / 100 */\n      tag_260\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_260:\n        /* \"xeam_test_contract_1_flattened.sol\":32749:32755  amount */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":32726:32746  balanceOf(recipient) */\n      tag_261\n        /* \"xeam_test_contract_1_flattened.sol\":32736:32745  recipient */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":13964:13982  _balances[account] */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":13938:13945  uint256 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":13964:13982  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":13873:13989  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":32726:32746  balanceOf(recipient) */\n    tag_261:\n        /* \"xeam_test_contract_1_flattened.sol\":32726:32755  balanceOf(recipient) + amount */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"xeam_test_contract_1_flattened.sol\":32726:32769  balanceOf(recipient) + amount <= MAX_WALLET */\n      gt\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":32718:32798  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6255:6257   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":32718:32798  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6237:6258   */\n      mstore\n        /* \"#utility.yul\":6294:6296   */\n      0x18\n        /* \"#utility.yul\":6274:6292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6267:6297   */\n      mstore\n        /* \"#utility.yul\":6333:6359   */\n      0x45786365656473206d61782077616c6c6574206c696d69740000000000000000\n        /* \"#utility.yul\":6313:6331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6306:6360   */\n      mstore\n        /* \"#utility.yul\":6377:6395   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":32718:32798  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n      tag_161\n        /* \"#utility.yul\":6053:6401   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":32718:32798  require(balanceOf(recipient) + amount <= MAX_WALLET, \"Exceeds max wallet limit\") */\n    tag_264:\n        /* \"xeam_test_contract_1_flattened.sol\":30883:30888  10000 */\n      0x2710\n        /* \"xeam_test_contract_1_flattened.sol\":30861:30879  INITIAL_SUPPLY * 5 */\n      tag_267\n        /* \"xeam_test_contract_1_flattened.sol\":30728:30746  2_000_000 * 10**18 */\n      0x01a784379d99db42000000\n        /* \"xeam_test_contract_1_flattened.sol\":30878:30879  5 */\n      0x05\n        /* \"xeam_test_contract_1_flattened.sol\":30861:30879  INITIAL_SUPPLY * 5 */\n      tag_231\n      jump\t// in\n    tag_267:\n        /* \"xeam_test_contract_1_flattened.sol\":30860:30888  (INITIAL_SUPPLY * 5) / 10000 */\n      tag_268\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_268:\n        /* \"xeam_test_contract_1_flattened.sol\":32820:32826  amount */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":32820:32836  amount <= MAX_TX */\n      gt\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":32812:32870  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6608:6610   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":32812:32870  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6590:6611   */\n      mstore\n        /* \"#utility.yul\":6647:6649   */\n      0x1d\n        /* \"#utility.yul\":6627:6645   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6620:6650   */\n      mstore\n        /* \"#utility.yul\":6686:6717   */\n      0x45786365656473206d6178207472616e73616374696f6e206c696d6974000000\n        /* \"#utility.yul\":6666:6684   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6659:6718   */\n      mstore\n        /* \"#utility.yul\":6735:6753   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":32812:32870  require(amount <= MAX_TX, \"Exceeds max transaction limit\") */\n      tag_161\n        /* \"#utility.yul\":6406:6759   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":32893:34121  function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {... */\n    tag_173:\n        /* \"xeam_test_contract_1_flattened.sol\":33019:33030  uniswapPair */\n      sload(0x0b)\n        /* \"xeam_test_contract_1_flattened.sol\":32991:33002  uint256 tax */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":33006:33030  recipient == uniswapPair */\n      dup5\n      dup2\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33019:33030  uniswapPair */\n      swap2\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33006:33030  recipient == uniswapPair */\n      eq\n        /* \"xeam_test_contract_1_flattened.sol\":33005:33084  (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      tag_273\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":33081:33084  100 */\n      0x64\n        /* \"xeam_test_contract_1_flattened.sol\":33071:33077  buyTax */\n      sload(0x0c)\n        /* \"xeam_test_contract_1_flattened.sol\":33062:33068  amount */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":33062:33077  amount * buyTax */\n      tag_274\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_274:\n        /* \"xeam_test_contract_1_flattened.sol\":33061:33084  (amount * buyTax) / 100 */\n      tag_275\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_275:\n        /* \"xeam_test_contract_1_flattened.sol\":33005:33084  (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      jump(tag_278)\n    tag_273:\n        /* \"xeam_test_contract_1_flattened.sol\":33055:33058  100 */\n      0x64\n        /* \"xeam_test_contract_1_flattened.sol\":33044:33051  sellTax */\n      sload(0x0d)\n        /* \"xeam_test_contract_1_flattened.sol\":33035:33041  amount */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":33035:33051  amount * sellTax */\n      tag_277\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_277:\n        /* \"xeam_test_contract_1_flattened.sol\":33034:33058  (amount * sellTax) / 100 */\n      tag_278\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_278:\n        /* \"xeam_test_contract_1_flattened.sol\":32991:33084  uint256 tax = (recipient == uniswapPair) ? (amount * sellTax) / 100 : (amount * buyTax) / 100 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33112:33115  tax */\n      dup1\n        /* \"xeam_test_contract_1_flattened.sol\":33102:33108  amount */\n      dup3\n        /* \"xeam_test_contract_1_flattened.sol\":33102:33115  amount >= tax */\n      lt\n      iszero\n        /* \"xeam_test_contract_1_flattened.sol\":33094:33147  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":33094:33147  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6948:6969   */\n      mstore\n        /* \"#utility.yul\":7005:7007   */\n      0x1b\n        /* \"#utility.yul\":6985:7003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6978:7008   */\n      mstore\n        /* \"#utility.yul\":7044:7073   */\n      0x5461782065786365656473207472616e7366657220616d6f756e740000000000\n        /* \"#utility.yul\":7024:7042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7017:7074   */\n      mstore\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":33094:33147  require(amount >= tax, \"Tax exceeds transfer amount\") */\n      tag_161\n        /* \"#utility.yul\":6764:7115   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":33094:33147  require(amount >= tax, \"Tax exceeds transfer amount\") */\n    tag_279:\n        /* \"xeam_test_contract_1_flattened.sol\":33158:33175  uint256 netAmount */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33178:33190  amount - tax */\n      tag_282\n        /* \"xeam_test_contract_1_flattened.sol\":33187:33190  tax */\n      dup3\n        /* \"xeam_test_contract_1_flattened.sol\":33178:33184  amount */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":33178:33190  amount - tax */\n      tag_177\n      jump\t// in\n    tag_282:\n        /* \"xeam_test_contract_1_flattened.sol\":33158:33190  uint256 netAmount = amount - tax */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33200:33215  uint256 lpShare */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33230:33232  12 */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":33219:33226  tax * 4 */\n      tag_283\n        /* \"xeam_test_contract_1_flattened.sol\":33219:33222  tax */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":33225:33226  4 */\n      0x04\n        /* \"xeam_test_contract_1_flattened.sol\":33219:33226  tax * 4 */\n      tag_231\n      jump\t// in\n    tag_283:\n        /* \"xeam_test_contract_1_flattened.sol\":33218:33232  (tax * 4) / 12 */\n      tag_284\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_284:\n        /* \"xeam_test_contract_1_flattened.sol\":33200:33232  uint256 lpShare = (tax * 4) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33242:33268  uint256 encouragementShare */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33283:33285  12 */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":33272:33279  tax * 4 */\n      tag_285\n        /* \"xeam_test_contract_1_flattened.sol\":33272:33275  tax */\n      dup6\n        /* \"xeam_test_contract_1_flattened.sol\":33278:33279  4 */\n      0x04\n        /* \"xeam_test_contract_1_flattened.sol\":33272:33279  tax * 4 */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"xeam_test_contract_1_flattened.sol\":33271:33285  (tax * 4) / 12 */\n      tag_286\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_286:\n        /* \"xeam_test_contract_1_flattened.sol\":33242:33285  uint256 encouragementShare = (tax * 4) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33295:33317  uint256 emergencyShare */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33332:33334  12 */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":33321:33328  tax * 1 */\n      tag_287\n        /* \"xeam_test_contract_1_flattened.sol\":33321:33324  tax */\n      dup7\n        /* \"xeam_test_contract_1_flattened.sol\":33327:33328  1 */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":33321:33328  tax * 1 */\n      tag_231\n      jump\t// in\n    tag_287:\n        /* \"xeam_test_contract_1_flattened.sol\":33320:33334  (tax * 1) / 12 */\n      tag_288\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_288:\n        /* \"xeam_test_contract_1_flattened.sol\":33295:33334  uint256 emergencyShare = (tax * 1) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33344:33366  uint256 marketingShare */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33381:33383  12 */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":33370:33377  tax * 2 */\n      tag_289\n        /* \"xeam_test_contract_1_flattened.sol\":33370:33373  tax */\n      dup8\n        /* \"xeam_test_contract_1_flattened.sol\":33376:33377  2 */\n      0x02\n        /* \"xeam_test_contract_1_flattened.sol\":33370:33377  tax * 2 */\n      tag_231\n      jump\t// in\n    tag_289:\n        /* \"xeam_test_contract_1_flattened.sol\":33369:33383  (tax * 2) / 12 */\n      tag_290\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_290:\n        /* \"xeam_test_contract_1_flattened.sol\":33344:33383  uint256 marketingShare = (tax * 2) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33393:33413  uint256 stakingShare */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":33428:33430  12 */\n      0x0c\n        /* \"xeam_test_contract_1_flattened.sol\":33417:33424  tax * 1 */\n      tag_291\n        /* \"xeam_test_contract_1_flattened.sol\":33417:33420  tax */\n      dup9\n        /* \"xeam_test_contract_1_flattened.sol\":33423:33424  1 */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":33417:33424  tax * 1 */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"xeam_test_contract_1_flattened.sol\":33416:33430  (tax * 1) / 12 */\n      tag_292\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_292:\n        /* \"xeam_test_contract_1_flattened.sol\":33393:33430  uint256 stakingShare = (tax * 1) / 12 */\n      swap1\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":33441:33503  super._transfer(sender, encouragementFund, encouragementShare) */\n      tag_293\n        /* \"xeam_test_contract_1_flattened.sol\":33457:33463  sender */\n      dup11\n        /* \"xeam_test_contract_1_flattened.sol\":33465:33482  encouragementFund */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33484:33502  encouragementShare */\n      dup7\n        /* \"xeam_test_contract_1_flattened.sol\":33441:33456  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":33441:33503  super._transfer(sender, encouragementFund, encouragementShare) */\n      jump\t// in\n    tag_293:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":33533:33551  encouragementShare */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":33518:33574  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n      mload(0x40)\n      tag_294\n      swap2\n        /* \"#utility.yul\":7332:7357   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x40\n        /* \"#utility.yul\":7388:7390   */\n      0x20\n        /* \"#utility.yul\":7373:7391   */\n      dup3\n      add\n        /* \"#utility.yul\":7366:7396   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7432:7434   */\n      0x12\n        /* \"#utility.yul\":7412:7430   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7405:7435   */\n      mstore\n      shl(0x72, 0x115b98dbdd5c9859d95b595b9d08119d5b99)\n        /* \"#utility.yul\":7466:7468   */\n      0x60\n        /* \"#utility.yul\":7451:7469   */\n      dup3\n      add\n        /* \"#utility.yul\":7444:7492   */\n      mstore\n        /* \"#utility.yul\":7524:7527   */\n      0x80\n        /* \"#utility.yul\":7509:7528   */\n      add\n      swap1\n        /* \"#utility.yul\":7120:7534   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":33518:33574  TaxDistributed(encouragementShare, \"Encouragement Fund\") */\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":33609:33622  emergencyFund */\n      sload(0x08)\n        /* \"xeam_test_contract_1_flattened.sol\":33585:33639  super._transfer(sender, emergencyFund, emergencyShare) */\n      tag_296\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":33601:33607  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":33609:33622  emergencyFund */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33624:33638  emergencyShare */\n      dup6\n        /* \"xeam_test_contract_1_flattened.sol\":33585:33600  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":33585:33639  super._transfer(sender, emergencyFund, emergencyShare) */\n      jump\t// in\n    tag_296:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":33669:33683  emergencyShare */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":33654:33702  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n      mload(0x40)\n      tag_297\n      swap2\n        /* \"#utility.yul\":7751:7776   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7812:7814   */\n      0x40\n        /* \"#utility.yul\":7807:7809   */\n      0x20\n        /* \"#utility.yul\":7792:7810   */\n      dup3\n      add\n        /* \"#utility.yul\":7785:7815   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7851:7853   */\n      0x0e\n        /* \"#utility.yul\":7831:7849   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7824:7854   */\n      mstore\n      shl(0x92, 0x115b595c99d95b98de48119d5b99)\n        /* \"#utility.yul\":7885:7887   */\n      0x60\n        /* \"#utility.yul\":7870:7888   */\n      dup3\n      add\n        /* \"#utility.yul\":7863:7907   */\n      mstore\n        /* \"#utility.yul\":7939:7942   */\n      0x80\n        /* \"#utility.yul\":7924:7943   */\n      add\n      swap1\n        /* \"#utility.yul\":7539:7949   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":33654:33702  TaxDistributed(emergencyShare, \"Emergency Fund\") */\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":33737:33752  marketingWallet */\n      sload(0x09)\n        /* \"xeam_test_contract_1_flattened.sol\":33713:33769  super._transfer(sender, marketingWallet, marketingShare) */\n      tag_299\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":33729:33735  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":33737:33752  marketingWallet */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33754:33768  marketingShare */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":33713:33728  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":33713:33769  super._transfer(sender, marketingWallet, marketingShare) */\n      jump\t// in\n    tag_299:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":33799:33813  marketingShare */\n      dup3\n        /* \"xeam_test_contract_1_flattened.sol\":33784:33827  TaxDistributed(marketingShare, \"Marketing\") */\n      mload(0x40)\n      tag_300\n      swap2\n        /* \"#utility.yul\":8166:8191   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8227:8229   */\n      0x40\n        /* \"#utility.yul\":8222:8224   */\n      0x20\n        /* \"#utility.yul\":8207:8225   */\n      dup3\n      add\n        /* \"#utility.yul\":8200:8230   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8266:8267   */\n      0x09\n        /* \"#utility.yul\":8246:8264   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8239:8268   */\n      mstore\n      shl(0xb8, 0x4d61726b6574696e67)\n        /* \"#utility.yul\":8299:8301   */\n      0x60\n        /* \"#utility.yul\":8284:8302   */\n      dup3\n      add\n        /* \"#utility.yul\":8277:8316   */\n      mstore\n        /* \"#utility.yul\":8348:8351   */\n      0x80\n        /* \"#utility.yul\":8333:8352   */\n      add\n      swap1\n        /* \"#utility.yul\":7954:8358   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":33784:33827  TaxDistributed(marketingShare, \"Marketing\") */\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":33862:33875  stakingWallet */\n      sload(0x0a)\n        /* \"xeam_test_contract_1_flattened.sol\":33838:33890  super._transfer(sender, stakingWallet, stakingShare) */\n      tag_302\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":33854:33860  sender */\n      dup12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":33862:33875  stakingWallet */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":33877:33889  stakingShare */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":33838:33853  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":33838:33890  super._transfer(sender, stakingWallet, stakingShare) */\n      jump\t// in\n    tag_302:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":33920:33932  stakingShare */\n      dup2\n        /* \"xeam_test_contract_1_flattened.sol\":33905:33944  TaxDistributed(stakingShare, \"Staking\") */\n      mload(0x40)\n      tag_303\n      swap2\n        /* \"#utility.yul\":8575:8600   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8636:8638   */\n      0x40\n        /* \"#utility.yul\":8631:8633   */\n      0x20\n        /* \"#utility.yul\":8616:8634   */\n      dup3\n      add\n        /* \"#utility.yul\":8609:8639   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8675:8676   */\n      0x07\n        /* \"#utility.yul\":8655:8673   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8648:8677   */\n      mstore\n      shl(0xc8, 0x5374616b696e67)\n        /* \"#utility.yul\":8708:8710   */\n      0x60\n        /* \"#utility.yul\":8693:8711   */\n      dup3\n      add\n        /* \"#utility.yul\":8686:8723   */\n      mstore\n        /* \"#utility.yul\":8755:8758   */\n      0x80\n        /* \"#utility.yul\":8740:8759   */\n      add\n      swap1\n        /* \"#utility.yul\":8363:8765   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":33905:33944  TaxDistributed(stakingShare, \"Staking\") */\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":33955:34002  super._transfer(sender, address(this), lpShare) */\n      tag_305\n        /* \"xeam_test_contract_1_flattened.sol\":33971:33977  sender */\n      dup11\n        /* \"xeam_test_contract_1_flattened.sol\":33987:33991  this */\n      address\n        /* \"xeam_test_contract_1_flattened.sol\":33994:34001  lpShare */\n      dup8\n        /* \"xeam_test_contract_1_flattened.sol\":33955:33970  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":33955:34002  super._transfer(sender, address(this), lpShare) */\n      jump\t// in\n    tag_305:\n      0x00\n      dup1\n      mload\n      0x20\n      data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":34032:34039  lpShare */\n      dup6\n        /* \"xeam_test_contract_1_flattened.sol\":34017:34058  TaxDistributed(lpShare, \"Liquidity Pool\") */\n      mload(0x40)\n      tag_306\n      swap2\n        /* \"#utility.yul\":8982:9007   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9043:9045   */\n      0x40\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9023:9041   */\n      dup3\n      add\n        /* \"#utility.yul\":9016:9046   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9082:9084   */\n      0x0e\n        /* \"#utility.yul\":9062:9080   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9055:9085   */\n      mstore\n      shl(0x92, 0x131a5c5d5a591a5d1e48141bdbdb)\n        /* \"#utility.yul\":9116:9118   */\n      0x60\n        /* \"#utility.yul\":9101:9119   */\n      dup3\n      add\n        /* \"#utility.yul\":9094:9138   */\n      mstore\n        /* \"#utility.yul\":9170:9173   */\n      0x80\n        /* \"#utility.yul\":9155:9174   */\n      add\n      swap1\n        /* \"#utility.yul\":8770:9180   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":34017:34058  TaxDistributed(lpShare, \"Liquidity Pool\") */\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":34069:34114  super._transfer(sender, recipient, netAmount) */\n      tag_308\n        /* \"xeam_test_contract_1_flattened.sol\":34085:34091  sender */\n      dup11\n        /* \"xeam_test_contract_1_flattened.sol\":34093:34102  recipient */\n      dup11\n        /* \"xeam_test_contract_1_flattened.sol\":34104:34113  netAmount */\n      dup9\n        /* \"xeam_test_contract_1_flattened.sol\":34069:34084  super._transfer */\n      tag_220\n        /* \"xeam_test_contract_1_flattened.sol\":34069:34114  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_308:\n        /* \"xeam_test_contract_1_flattened.sol\":32981:34121  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":32893:34121  function _transferWithTaxes(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":30430:30547  function _unpause() internal virtual whenPaused {... */\n    tag_183:\n        /* \"xeam_test_contract_1_flattened.sol\":29483:29499  _requirePaused() */\n      tag_310\n        /* \"xeam_test_contract_1_flattened.sol\":29483:29497  _requirePaused */\n      tag_311\n        /* \"xeam_test_contract_1_flattened.sol\":29483:29499  _requirePaused() */\n      jump\t// in\n    tag_310:\n        /* \"xeam_test_contract_1_flattened.sol\":30488:30495  _paused */\n      0x07\n        /* \"xeam_test_contract_1_flattened.sol\":30488:30503  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":30518:30540  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"xeam_test_contract_1_flattened.sol\":30527:30539  _msgSender() */\n    tag_313:\n        /* \"xeam_test_contract_1_flattened.sol\":30518:30540  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":30518:30540  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"xeam_test_contract_1_flattened.sol\":30430:30547  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":24652:24839  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_190:\n        /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":24760:24777  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n      swap2\n      and\n      swap2\n        /* \"xeam_test_contract_1_flattened.sol\":24760:24777  _owner = newOwner */\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":24744:24750  _owner */\n      dup3\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":24725:24741  address oldOwner */\n      0x00\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":24792:24832  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"xeam_test_contract_1_flattened.sol\":24715:24839  {... */\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":24652:24839  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":30183:30298  function _pause() internal virtual whenNotPaused {... */\n    tag_198:\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      tag_317\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29253  _requireNotPaused */\n      tag_168\n        /* \"xeam_test_contract_1_flattened.sol\":29236:29255  _requireNotPaused() */\n      jump\t// in\n    tag_317:\n        /* \"xeam_test_contract_1_flattened.sol\":30242:30249  _paused */\n      0x07\n        /* \"xeam_test_contract_1_flattened.sol\":30242:30256  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":30252:30256  true */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":30242:30256  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":30271:30291  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"xeam_test_contract_1_flattened.sol\":30278:30290  _msgSender() */\n      tag_313\n        /* \"xeam_test_contract_1_flattened.sol\":4256:4266  msg.sender */\n      caller\n      swap1\n        /* \"xeam_test_contract_1_flattened.sol\":4177:4273  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":16262:16562  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":16345:16363  from == address(0) */\n      dup4\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":16341:16427  if (from == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":16386:16416  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":16413:16414  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":16386:16416  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":16386:16416  ERC20InvalidSender(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":16341:16427  if (from == address(0)) {... */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":16440:16456  to == address(0) */\n      dup3\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":16436:16522  if (to == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":16479:16511  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":16508:16509  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":16479:16511  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":16479:16511  ERC20InvalidReceiver(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":16436:16522  if (to == address(0)) {... */\n    tag_324:\n        /* \"xeam_test_contract_1_flattened.sol\":16531:16555  _update(from, to, value) */\n      tag_244\n        /* \"xeam_test_contract_1_flattened.sol\":16539:16543  from */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":16545:16547  to */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":16549:16554  value */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":16531:16538  _update */\n      tag_327\n        /* \"xeam_test_contract_1_flattened.sol\":16531:16555  _update(from, to, value) */\n      jump\t// in\n        /* \"xeam_test_contract_1_flattened.sol\":20570:21002  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":20682:20701  owner == address(0) */\n      dup5\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":20678:20767  if (owner == address(0)) {... */\n      tag_329\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":20724:20756  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":20753:20754  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":20724:20756  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":20724:20756  ERC20InvalidApprover(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":20678:20767  if (owner == address(0)) {... */\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":20780:20801  spender == address(0) */\n      dup4\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":20776:20866  if (spender == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":20824:20855  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":20852:20853  0 */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":20824:20855  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":20824:20855  ERC20InvalidSpender(address(0)) */\n      tag_161\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":20776:20866  if (spender == address(0)) {... */\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":20875:20893  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xeam_test_contract_1_flattened.sol\":20875:20886  _allowances */\n      0x01\n        /* \"xeam_test_contract_1_flattened.sol\":20875:20893  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":20875:20902  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":20875:20910  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":20920:20996  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_333\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":20970:20977  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":20954:20985  Approval(owner, spender, value) */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":20963:20968  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":20954:20985  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"xeam_test_contract_1_flattened.sol\":20979:20984  value */\n      dup5\n        /* \"xeam_test_contract_1_flattened.sol\":20954:20985  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_334\n      swap2\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n      swap1\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":20954:20985  Approval(owner, spender, value) */\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"xeam_test_contract_1_flattened.sol\":20920:20996  if (emitEvent) {... */\n    tag_333:\n        /* \"xeam_test_contract_1_flattened.sol\":20570:21002  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xeam_test_contract_1_flattened.sol\":29942:30048  function _requirePaused() internal view virtual {... */\n    tag_311:\n        /* \"xeam_test_contract_1_flattened.sol\":29682:29689  _paused */\n      and(0xff, sload(0x07))\n        /* \"xeam_test_contract_1_flattened.sol\":30000:30041  require(paused(), \"Pausable: not paused\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9387:9389   */\n      0x20\n        /* \"xeam_test_contract_1_flattened.sol\":30000:30041  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9369:9390   */\n      mstore\n        /* \"#utility.yul\":9426:9428   */\n      0x14\n        /* \"#utility.yul\":9406:9424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9399:9429   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9445:9463   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9438:9488   */\n      mstore\n        /* \"#utility.yul\":9505:9523   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":30000:30041  require(paused(), \"Pausable: not paused\") */\n      tag_161\n        /* \"#utility.yul\":9185:9529   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":16877:17984  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":16966:16984  from == address(0) */\n      dup4\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":17118:17123  value */\n      dup1\n        /* \"xeam_test_contract_1_flattened.sol\":17102:17114  _totalSupply */\n      0x02\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":17102:17123  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_342\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_342:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\n      tag_343\n      swap1\n      pop\n      jump\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17176:17191  _balances[from] */\n      dup4\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17154:17173  uint256 fromBalance */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":17176:17191  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"xeam_test_contract_1_flattened.sol\":17209:17228  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"xeam_test_contract_1_flattened.sol\":17205:17320  if (fromBalance < value) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9754:9786   */\n      dup6\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9736:9787   */\n      mstore\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9796:9830   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9846:9864   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9839:9873   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9709:9727   */\n      0x64\n      add\n        /* \"xeam_test_contract_1_flattened.sol\":17255:17305  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_161\n        /* \"#utility.yul\":9534:9879   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":17205:17320  if (fromBalance < value) {... */\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17440:17455  _balances[from] */\n      dup5\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17440:17449  _balances */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":17440:17455  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":17458:17477  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"xeam_test_contract_1_flattened.sol\":17440:17477  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":16962:17502  if (from == address(0)) {... */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17516:17532  to == address(0) */\n      dup3\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\n      tag_347\n      jumpi\n        /* \"xeam_test_contract_1_flattened.sol\":17679:17691  _totalSupply */\n      0x02\n        /* \"xeam_test_contract_1_flattened.sol\":17679:17700  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\n      jump(tag_348)\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17890:17903  _balances[to] */\n      dup3\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17890:17899  _balances */\n      0x00\n        /* \"xeam_test_contract_1_flattened.sol\":17890:17903  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xeam_test_contract_1_flattened.sol\":17890:17912  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"xeam_test_contract_1_flattened.sol\":17512:17937  if (to == address(0)) {... */\n    tag_348:\n        /* \"xeam_test_contract_1_flattened.sol\":17967:17969  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n      and\n        /* \"xeam_test_contract_1_flattened.sol\":17961:17965  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"xeam_test_contract_1_flattened.sol\":17971:17976  value */\n      dup4\n        /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n      mload(0x40)\n      tag_349\n      swap2\n        /* \"#utility.yul\":1817:1842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      0x20\n        /* \"#utility.yul\":1790:1808   */\n      add\n      swap1\n        /* \"#utility.yul\":1671:1848   */\n      jump\n        /* \"xeam_test_contract_1_flattened.sol\":17952:17977  Transfer(from, to, value) */\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"xeam_test_contract_1_flattened.sol\":16877:17984  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_47:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_350:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_356:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_50:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_358:\n        /* \"#utility.yul\":991:1020   */\n      tag_359\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_350\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1320:1666   */\n    tag_56:\n        /* \"#utility.yul\":1388:1394   */\n      0x00\n        /* \"#utility.yul\":1396:1402   */\n      dup1\n        /* \"#utility.yul\":1449:1451   */\n      0x40\n        /* \"#utility.yul\":1437:1446   */\n      dup4\n        /* \"#utility.yul\":1428:1435   */\n      dup6\n        /* \"#utility.yul\":1424:1447   */\n      sub\n        /* \"#utility.yul\":1420:1452   */\n      slt\n        /* \"#utility.yul\":1417:1469   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1462:1463   */\n      dup1\n        /* \"#utility.yul\":1455:1467   */\n      revert\n        /* \"#utility.yul\":1417:1469   */\n    tag_362:\n      pop\n      pop\n        /* \"#utility.yul\":1510:1533   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1630:1632   */\n      0x20\n        /* \"#utility.yul\":1615:1633   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1602:1634   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1320:1666   */\n      jump\t// out\n        /* \"#utility.yul\":1853:2227   */\n    tag_64:\n        /* \"#utility.yul\":1930:1936   */\n      0x00\n        /* \"#utility.yul\":1938:1944   */\n      dup1\n        /* \"#utility.yul\":1946:1952   */\n      0x00\n        /* \"#utility.yul\":1999:2001   */\n      0x60\n        /* \"#utility.yul\":1987:1996   */\n      dup5\n        /* \"#utility.yul\":1978:1985   */\n      dup7\n        /* \"#utility.yul\":1974:1997   */\n      sub\n        /* \"#utility.yul\":1970:2002   */\n      slt\n        /* \"#utility.yul\":1967:2019   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2015:2016   */\n      0x00\n        /* \"#utility.yul\":2012:2013   */\n      dup1\n        /* \"#utility.yul\":2005:2017   */\n      revert\n        /* \"#utility.yul\":1967:2019   */\n    tag_365:\n        /* \"#utility.yul\":2038:2067   */\n      tag_366\n        /* \"#utility.yul\":2057:2066   */\n      dup5\n        /* \"#utility.yul\":2038:2067   */\n      tag_350\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2028:2067   */\n      swap3\n      pop\n        /* \"#utility.yul\":2086:2124   */\n      tag_367\n        /* \"#utility.yul\":2120:2122   */\n      0x20\n        /* \"#utility.yul\":2109:2118   */\n      dup6\n        /* \"#utility.yul\":2105:2123   */\n      add\n        /* \"#utility.yul\":2086:2124   */\n      tag_350\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1853:2227   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2076:2124   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2193:2195   */\n      0x40\n        /* \"#utility.yul\":2178:2196   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2165:2197   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1853:2227   */\n      jump\t// out\n        /* \"#utility.yul\":2421:2607   */\n    tag_81:\n        /* \"#utility.yul\":2480:2486   */\n      0x00\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"#utility.yul\":2521:2530   */\n      dup3\n        /* \"#utility.yul\":2512:2519   */\n      dup5\n        /* \"#utility.yul\":2508:2531   */\n      sub\n        /* \"#utility.yul\":2504:2536   */\n      slt\n        /* \"#utility.yul\":2501:2553   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":2549:2550   */\n      0x00\n        /* \"#utility.yul\":2546:2547   */\n      dup1\n        /* \"#utility.yul\":2539:2551   */\n      revert\n        /* \"#utility.yul\":2501:2553   */\n    tag_370:\n        /* \"#utility.yul\":2572:2601   */\n      tag_371\n        /* \"#utility.yul\":2591:2600   */\n      dup3\n        /* \"#utility.yul\":2572:2601   */\n      tag_350\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2562:2601   */\n      swap4\n        /* \"#utility.yul\":2421:2607   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:2959   */\n    tag_98:\n        /* \"#utility.yul\":2677:2683   */\n      0x00\n        /* \"#utility.yul\":2685:2691   */\n      dup1\n        /* \"#utility.yul\":2738:2740   */\n      0x40\n        /* \"#utility.yul\":2726:2735   */\n      dup4\n        /* \"#utility.yul\":2717:2724   */\n      dup6\n        /* \"#utility.yul\":2713:2736   */\n      sub\n        /* \"#utility.yul\":2709:2741   */\n      slt\n        /* \"#utility.yul\":2706:2758   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2754:2755   */\n      0x00\n        /* \"#utility.yul\":2751:2752   */\n      dup1\n        /* \"#utility.yul\":2744:2756   */\n      revert\n        /* \"#utility.yul\":2706:2758   */\n    tag_373:\n        /* \"#utility.yul\":2777:2806   */\n      tag_374\n        /* \"#utility.yul\":2796:2805   */\n      dup4\n        /* \"#utility.yul\":2777:2806   */\n      tag_350\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2767:2806   */\n      swap2\n      pop\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"#utility.yul\":2845:2854   */\n      dup4\n        /* \"#utility.yul\":2841:2859   */\n      add\n        /* \"#utility.yul\":2828:2860   */\n      calldataload\n        /* \"#utility.yul\":2903:2908   */\n      dup1\n        /* \"#utility.yul\":2896:2909   */\n      iszero\n        /* \"#utility.yul\":2889:2910   */\n      iszero\n        /* \"#utility.yul\":2882:2887   */\n      dup2\n        /* \"#utility.yul\":2879:2911   */\n      eq\n        /* \"#utility.yul\":2869:2929   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2922:2923   */\n      dup1\n        /* \"#utility.yul\":2915:2927   */\n      revert\n        /* \"#utility.yul\":2869:2929   */\n    tag_375:\n        /* \"#utility.yul\":2948:2953   */\n      dup1\n        /* \"#utility.yul\":2938:2953   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2612:2959   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3224   */\n    tag_131:\n        /* \"#utility.yul\":3032:3038   */\n      0x00\n        /* \"#utility.yul\":3040:3046   */\n      dup1\n        /* \"#utility.yul\":3093:3095   */\n      0x40\n        /* \"#utility.yul\":3081:3090   */\n      dup4\n        /* \"#utility.yul\":3072:3079   */\n      dup6\n        /* \"#utility.yul\":3068:3091   */\n      sub\n        /* \"#utility.yul\":3064:3096   */\n      slt\n        /* \"#utility.yul\":3061:3113   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3106:3107   */\n      dup1\n        /* \"#utility.yul\":3099:3111   */\n      revert\n        /* \"#utility.yul\":3061:3113   */\n    tag_377:\n        /* \"#utility.yul\":3132:3161   */\n      tag_378\n        /* \"#utility.yul\":3151:3160   */\n      dup4\n        /* \"#utility.yul\":3132:3161   */\n      tag_350\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3122:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3180:3218   */\n      tag_379\n        /* \"#utility.yul\":3214:3216   */\n      0x20\n        /* \"#utility.yul\":3203:3212   */\n      dup5\n        /* \"#utility.yul\":3199:3217   */\n      add\n        /* \"#utility.yul\":3180:3218   */\n      tag_350\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3170:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":2964:3224   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3609   */\n    tag_145:\n        /* \"#utility.yul\":3308:3309   */\n      0x01\n        /* \"#utility.yul\":3304:3316   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3351:3363   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3372:3433   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3426:3430   */\n      0x7f\n        /* \"#utility.yul\":3418:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3431   */\n      and\n        /* \"#utility.yul\":3404:3431   */\n      swap2\n      pop\n        /* \"#utility.yul\":3372:3433   */\n    tag_381:\n        /* \"#utility.yul\":3479:3481   */\n      0x20\n        /* \"#utility.yul\":3471:3477   */\n      dup3\n        /* \"#utility.yul\":3468:3482   */\n      lt\n        /* \"#utility.yul\":3448:3466   */\n      dup2\n        /* \"#utility.yul\":3445:3483   */\n      sub\n        /* \"#utility.yul\":3442:3603   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3525:3535   */\n      0x4e487b71\n        /* \"#utility.yul\":3520:3523   */\n      0xe0\n        /* \"#utility.yul\":3516:3536   */\n      shl\n        /* \"#utility.yul\":3513:3514   */\n      0x00\n        /* \"#utility.yul\":3506:3537   */\n      mstore\n        /* \"#utility.yul\":3560:3564   */\n      0x22\n        /* \"#utility.yul\":3557:3558   */\n      0x04\n        /* \"#utility.yul\":3550:3565   */\n      mstore\n        /* \"#utility.yul\":3588:3592   */\n      0x24\n        /* \"#utility.yul\":3585:3586   */\n      0x00\n        /* \"#utility.yul\":3578:3593   */\n      revert\n        /* \"#utility.yul\":3442:3603   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":3229:3609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4335   */\n    tag_351:\n        /* \"#utility.yul\":4269:4279   */\n      0x4e487b71\n        /* \"#utility.yul\":4264:4267   */\n      0xe0\n        /* \"#utility.yul\":4260:4280   */\n      shl\n        /* \"#utility.yul\":4257:4258   */\n      0x00\n        /* \"#utility.yul\":4250:4281   */\n      mstore\n        /* \"#utility.yul\":4300:4304   */\n      0x11\n        /* \"#utility.yul\":4297:4298   */\n      0x04\n        /* \"#utility.yul\":4290:4305   */\n      mstore\n        /* \"#utility.yul\":4324:4328   */\n      0x24\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4329   */\n      revert\n        /* \"#utility.yul\":4340:4468   */\n    tag_177:\n        /* \"#utility.yul\":4407:4416   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4428:4439   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4425:4462   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4442:4460   */\n      tag_150\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":5183:5351   */\n    tag_231:\n        /* \"#utility.yul\":5256:5265   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5287:5296   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5304:5319   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5298:5320   */\n      dup5\n      eq\n        /* \"#utility.yul\":5284:5321   */\n      or\n        /* \"#utility.yul\":5274:5345   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5325:5343   */\n      tag_150\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":5356:5573   */\n    tag_233:\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5422:5423   */\n      dup3\n        /* \"#utility.yul\":5412:5544   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5466:5476   */\n      0x4e487b71\n        /* \"#utility.yul\":5461:5464   */\n      0xe0\n        /* \"#utility.yul\":5457:5477   */\n      shl\n        /* \"#utility.yul\":5454:5455   */\n      0x00\n        /* \"#utility.yul\":5447:5478   */\n      mstore\n        /* \"#utility.yul\":5501:5505   */\n      0x12\n        /* \"#utility.yul\":5498:5499   */\n      0x04\n        /* \"#utility.yul\":5491:5506   */\n      mstore\n        /* \"#utility.yul\":5529:5533   */\n      0x24\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5519:5534   */\n      revert\n        /* \"#utility.yul\":5412:5544   */\n    tag_395:\n      pop\n        /* \"#utility.yul\":5558:5567   */\n      div\n      swap1\n        /* \"#utility.yul\":5356:5573   */\n      jump\t// out\n        /* \"#utility.yul\":5923:6048   */\n    tag_263:\n        /* \"#utility.yul\":5988:5997   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6009:6019   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6006:6042   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":6022:6040   */\n      tag_150\n      tag_351\n      jump\t// in\n    stop\n    data_859952f8ad95bf3b9d6ec6d5182f93b209cbb9a33d14bac6f48292b740d5a146 6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984\n\n    auxdata: 0xa26469706673582212205d7f440aafe1ba8988fe8525874d7a3e000e88547da5f40029ddc05e024349cb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1005": {
									"entryPoint": null,
									"id": 1005,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1213": {
									"entryPoint": null,
									"id": 1213,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 453,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 372,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 509,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4356:1",
										"nodeType": "YulBlock",
										"src": "0:4356:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "345:401:1",
													"nodeType": "YulBlock",
													"src": "345:401:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:1",
																"nodeType": "YulBlock",
																"src": "392:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:1",
																					"nodeType": "YulLiteral",
																					"src": "401:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:1",
																					"nodeType": "YulLiteral",
																					"src": "404:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:1"
																			},
																			"nativeSrc": "394:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:1"
																		},
																		"nativeSrc": "394:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:1"
																		},
																		"nativeSrc": "362:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:1",
																		"nodeType": "YulLiteral",
																		"src": "387:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:1"
																},
																"nativeSrc": "358:33:1",
																"nodeType": "YulFunctionCall",
																"src": "358:33:1"
															},
															"nativeSrc": "355:53:1",
															"nodeType": "YulIf",
															"src": "355:53:1"
														},
														{
															"nativeSrc": "417:50:1",
															"nodeType": "YulAssignment",
															"src": "417:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:1"
																},
																"nativeSrc": "427:40:1",
																"nodeType": "YulFunctionCall",
																"src": "427:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																}
															]
														},
														{
															"nativeSrc": "476:59:1",
															"nodeType": "YulAssignment",
															"src": "476:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:1",
																				"nodeType": "YulLiteral",
																				"src": "531:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:1"
																		},
																		"nativeSrc": "516:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:1"
																},
																"nativeSrc": "486:49:1",
																"nodeType": "YulFunctionCall",
																"src": "486:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:1"
																}
															]
														},
														{
															"nativeSrc": "544:59:1",
															"nodeType": "YulAssignment",
															"src": "544:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:1",
																				"nodeType": "YulLiteral",
																				"src": "599:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:1"
																},
																"nativeSrc": "554:49:1",
																"nodeType": "YulFunctionCall",
																"src": "554:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																}
															]
														},
														{
															"nativeSrc": "612:59:1",
															"nodeType": "YulAssignment",
															"src": "612:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:1",
																				"nodeType": "YulLiteral",
																				"src": "667:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:1"
																},
																"nativeSrc": "622:49:1",
																"nodeType": "YulFunctionCall",
																"src": "622:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:1"
																}
															]
														},
														{
															"nativeSrc": "680:60:1",
															"nodeType": "YulAssignment",
															"src": "680:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:3:1",
																				"nodeType": "YulLiteral",
																				"src": "735:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:1"
																		},
																		"nativeSrc": "720:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:1"
																},
																"nativeSrc": "690:50:1",
																"nodeType": "YulFunctionCall",
																"src": "690:50:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:550:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:1",
														"nodeType": "YulTypedName",
														"src": "279:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:1",
														"nodeType": "YulTypedName",
														"src": "290:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:1",
														"nodeType": "YulTypedName",
														"src": "302:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:1",
														"nodeType": "YulTypedName",
														"src": "310:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:1",
														"nodeType": "YulTypedName",
														"src": "318:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:1",
														"nodeType": "YulTypedName",
														"src": "326:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:1",
														"nodeType": "YulTypedName",
														"src": "334:6:1",
														"type": ""
													}
												],
												"src": "196:550:1"
											},
											{
												"body": {
													"nativeSrc": "783:95:1",
													"nodeType": "YulBlock",
													"src": "783:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "800:1:1",
																		"nodeType": "YulLiteral",
																		"src": "800:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "807:3:1",
																				"nodeType": "YulLiteral",
																				"src": "807:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "812:10:1",
																				"nodeType": "YulLiteral",
																				"src": "812:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "803:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:1"
																		},
																		"nativeSrc": "803:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "803:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "793:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																},
																"nativeSrc": "793:31:1",
																"nodeType": "YulFunctionCall",
																"src": "793:31:1"
															},
															"nativeSrc": "793:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "793:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:1",
																		"nodeType": "YulLiteral",
																		"src": "840:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:1",
																		"nodeType": "YulLiteral",
																		"src": "843:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:1"
																},
																"nativeSrc": "833:15:1",
																"nodeType": "YulFunctionCall",
																"src": "833:15:1"
															},
															"nativeSrc": "833:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:1",
																		"nodeType": "YulLiteral",
																		"src": "864:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:1",
																		"nodeType": "YulLiteral",
																		"src": "867:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:1"
																},
																"nativeSrc": "857:15:1",
																"nodeType": "YulFunctionCall",
																"src": "857:15:1"
															},
															"nativeSrc": "857:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "751:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "751:127:1"
											},
											{
												"body": {
													"nativeSrc": "938:325:1",
													"nodeType": "YulBlock",
													"src": "938:325:1",
													"statements": [
														{
															"nativeSrc": "948:22:1",
															"nodeType": "YulAssignment",
															"src": "948:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "962:1:1",
																		"nodeType": "YulLiteral",
																		"src": "962:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "965:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "965:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "958:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:1"
																},
																"nativeSrc": "958:12:1",
																"nodeType": "YulFunctionCall",
																"src": "958:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:1"
																}
															]
														},
														{
															"nativeSrc": "979:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "979:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1009:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1009:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:1"
																},
																"nativeSrc": "1005:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "983:18:1",
																	"nodeType": "YulTypedName",
																	"src": "983:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1056:31:1",
																"nodeType": "YulBlock",
																"src": "1056:31:1",
																"statements": [
																	{
																		"nativeSrc": "1058:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1058:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1072:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1072:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1080:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1080:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1068:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1068:3:1"
																			},
																			"nativeSrc": "1068:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1068:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1058:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1036:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1036:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:1"
																},
																"nativeSrc": "1029:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1029:26:1"
															},
															"nativeSrc": "1026:61:1",
															"nodeType": "YulIf",
															"src": "1026:61:1"
														},
														{
															"body": {
																"nativeSrc": "1146:111:1",
																"nodeType": "YulBlock",
																"src": "1146:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1174:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1174:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1179:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1179:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1170:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1170:3:1"
																					},
																					"nativeSrc": "1170:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1170:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1160:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:1"
																			},
																			"nativeSrc": "1160:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1160:31:1"
																		},
																		"nativeSrc": "1160:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1214:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:1"
																			},
																			"nativeSrc": "1204:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:15:1"
																		},
																		"nativeSrc": "1204:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1239:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1242:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1242:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1232:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nativeSrc": "1232:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1232:15:1"
																		},
																		"nativeSrc": "1232:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1102:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1102:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1125:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1133:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1122:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:2:1"
																		},
																		"nativeSrc": "1122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1122:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1099:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1099:2:1"
																},
																"nativeSrc": "1099:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1099:38:1"
															},
															"nativeSrc": "1096:161:1",
															"nodeType": "YulIf",
															"src": "1096:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "883:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "918:4:1",
														"nodeType": "YulTypedName",
														"src": "918:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "927:6:1",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													}
												],
												"src": "883:380:1"
											},
											{
												"body": {
													"nativeSrc": "1324:65:1",
													"nodeType": "YulBlock",
													"src": "1324:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1344:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:14:1"
															},
															"nativeSrc": "1334:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:14:1"
														},
														{
															"nativeSrc": "1357:26:1",
															"nodeType": "YulAssignment",
															"src": "1357:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1375:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1378:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1378:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1365:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1365:9:1"
																},
																"nativeSrc": "1365:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1365:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1357:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1357:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1268:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1307:3:1",
														"nodeType": "YulTypedName",
														"src": "1307:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1315:4:1",
														"nodeType": "YulTypedName",
														"src": "1315:4:1",
														"type": ""
													}
												],
												"src": "1268:121:1"
											},
											{
												"body": {
													"nativeSrc": "1475:437:1",
													"nodeType": "YulBlock",
													"src": "1475:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1508:398:1",
																"nodeType": "YulBlock",
																"src": "1508:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1532:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1532:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1522:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:1"
																			},
																			"nativeSrc": "1522:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1522:16:1"
																		},
																		"nativeSrc": "1522:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:16:1"
																	},
																	{
																		"nativeSrc": "1551:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1551:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1573:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1573:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1576:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1576:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1563:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:1"
																			},
																			"nativeSrc": "1563:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1563:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1555:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1555:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1594:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1594:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1617:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1617:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1627:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1627:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1634:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1634:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1646:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1646:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1630:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1630:3:1"
																							},
																							"nativeSrc": "1630:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1630:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1623:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1623:3:1"
																					},
																					"nativeSrc": "1623:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1623:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1613:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:1"
																			},
																			"nativeSrc": "1613:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1613:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1598:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1598:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1688:23:1",
																			"nodeType": "YulBlock",
																			"src": "1688:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1690:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1690:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1705:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1705:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1690:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1690:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1670:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1670:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1682:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1682:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1667:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1667:2:1"
																			},
																			"nativeSrc": "1667:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1667:20:1"
																		},
																		"nativeSrc": "1664:47:1",
																		"nodeType": "YulIf",
																		"src": "1664:47:1"
																	},
																	{
																		"nativeSrc": "1724:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1724:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1738:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1748:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1748:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1755:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1755:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1760:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1760:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1751:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1751:3:1"
																							},
																							"nativeSrc": "1751:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1751:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1744:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1744:3:1"
																					},
																					"nativeSrc": "1744:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1744:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:1"
																			},
																			"nativeSrc": "1734:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1728:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1728:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1778:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1778:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1791:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1791:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1782:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1782:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1876:20:1",
																			"nodeType": "YulBlock",
																			"src": "1876:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1885:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1885:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1892:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1892:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1878:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1878:6:1"
																						},
																						"nativeSrc": "1878:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1878:16:1"
																					},
																					"nativeSrc": "1878:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1878:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1826:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1826:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1833:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1833:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1823:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1823:2:1"
																			},
																			"nativeSrc": "1823:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1823:13:1"
																		},
																		"nativeSrc": "1815:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1837:26:1",
																			"nodeType": "YulBlock",
																			"src": "1837:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1839:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1839:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1852:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1852:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1859:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1859:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1848:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1848:3:1"
																						},
																						"nativeSrc": "1848:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1848:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1839:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1839:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1819:3:1",
																			"nodeType": "YulBlock",
																			"src": "1819:3:1",
																			"statements": []
																		},
																		"src": "1815:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1491:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1488:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:2:1"
																},
																"nativeSrc": "1488:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1488:11:1"
															},
															"nativeSrc": "1485:421:1",
															"nodeType": "YulIf",
															"src": "1485:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1394:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1447:5:1",
														"nodeType": "YulTypedName",
														"src": "1447:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1454:3:1",
														"nodeType": "YulTypedName",
														"src": "1454:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1459:10:1",
														"nodeType": "YulTypedName",
														"src": "1459:10:1",
														"type": ""
													}
												],
												"src": "1394:518:1"
											},
											{
												"body": {
													"nativeSrc": "2002:81:1",
													"nodeType": "YulBlock",
													"src": "2002:81:1",
													"statements": [
														{
															"nativeSrc": "2012:65:1",
															"nodeType": "YulAssignment",
															"src": "2012:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2027:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2045:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2045:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2048:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2048:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2041:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:1"
																								},
																								"nativeSrc": "2041:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2041:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2058:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2058:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2054:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2054:3:1"
																								},
																								"nativeSrc": "2054:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2054:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2037:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2037:3:1"
																						},
																						"nativeSrc": "2037:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2037:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2033:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2033:3:1"
																				},
																				"nativeSrc": "2033:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2033:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nativeSrc": "2023:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2069:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2069:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2072:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2072:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2065:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:1"
																		},
																		"nativeSrc": "2065:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2020:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2020:2:1"
																},
																"nativeSrc": "2020:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2020:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2012:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2012:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1917:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1979:4:1",
														"nodeType": "YulTypedName",
														"src": "1979:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1985:3:1",
														"nodeType": "YulTypedName",
														"src": "1985:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1993:4:1",
														"nodeType": "YulTypedName",
														"src": "1993:4:1",
														"type": ""
													}
												],
												"src": "1917:166:1"
											},
											{
												"body": {
													"nativeSrc": "2184:1203:1",
													"nodeType": "YulBlock",
													"src": "2184:1203:1",
													"statements": [
														{
															"nativeSrc": "2194:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2214:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2214:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2208:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2208:5:1"
																},
																"nativeSrc": "2208:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2208:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2198:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2198:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2261:22:1",
																"nodeType": "YulBlock",
																"src": "2261:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2263:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2263:16:1"
																			},
																			"nativeSrc": "2263:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:18:1"
																		},
																		"nativeSrc": "2263:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2233:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2233:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2249:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2249:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2253:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2253:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2245:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2245:3:1"
																				},
																				"nativeSrc": "2245:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2245:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2257:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2257:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2241:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:1"
																		},
																		"nativeSrc": "2241:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2230:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2230:2:1"
																},
																"nativeSrc": "2230:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2230:30:1"
															},
															"nativeSrc": "2227:56:1",
															"nodeType": "YulIf",
															"src": "2227:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2336:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2336:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2374:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2374:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2368:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2368:5:1"
																				},
																				"nativeSrc": "2368:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2368:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2342:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2342:25:1"
																		},
																		"nativeSrc": "2342:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2382:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2292:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2292:43:1"
																},
																"nativeSrc": "2292:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2292:97:1"
															},
															"nativeSrc": "2292:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2292:97:1"
														},
														{
															"nativeSrc": "2398:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2398:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2415:1:1",
																"nodeType": "YulLiteral",
																"src": "2415:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2402:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2402:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2425:17:1",
															"nodeType": "YulAssignment",
															"src": "2425:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2438:4:1",
																"nodeType": "YulLiteral",
																"src": "2438:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2425:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2425:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2488:642:1",
																		"nodeType": "YulBlock",
																		"src": "2488:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2502:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2502:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2521:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2521:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2533:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2533:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2529:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2529:3:1"
																							},
																							"nativeSrc": "2529:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2529:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2517:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2517:3:1"
																					},
																					"nativeSrc": "2517:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2517:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2506:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2506:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2550:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2550:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2594:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2594:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2564:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2564:29:1"
																					},
																					"nativeSrc": "2564:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2564:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2554:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2554:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2612:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2612:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2621:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2616:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2616:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2692:165:1",
																					"nodeType": "YulBlock",
																					"src": "2692:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2717:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2717:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2735:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2735:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2740:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2740:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2731:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2731:3:1"
																												},
																												"nativeSrc": "2731:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2731:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2725:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2725:5:1"
																										},
																										"nativeSrc": "2725:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2725:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2710:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2710:6:1"
																								},
																								"nativeSrc": "2710:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2710:42:1"
																							},
																							"nativeSrc": "2710:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2710:42:1"
																						},
																						{
																							"nativeSrc": "2769:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2769:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2783:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2783:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2791:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2791:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2779:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:1"
																								},
																								"nativeSrc": "2779:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2769:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2769:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2810:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2810:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2827:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2827:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2838:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2838:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2823:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2823:3:1"
																								},
																								"nativeSrc": "2823:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2823:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2810:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2810:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2646:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2646:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2649:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2649:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2643:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2643:2:1"
																					},
																					"nativeSrc": "2643:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:14:1"
																				},
																				"nativeSrc": "2635:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2658:21:1",
																					"nodeType": "YulBlock",
																					"src": "2658:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2660:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2660:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2669:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2669:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2672:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2672:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2665:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:3:1"
																								},
																								"nativeSrc": "2665:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2665:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2660:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2660:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2639:3:1",
																					"nodeType": "YulBlock",
																					"src": "2639:3:1",
																					"statements": []
																				},
																				"src": "2635:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2905:166:1",
																					"nodeType": "YulBlock",
																					"src": "2905:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2923:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2923:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2950:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2950:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2955:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2955:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2946:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2946:3:1"
																										},
																										"nativeSrc": "2946:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2946:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2940:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2940:5:1"
																								},
																								"nativeSrc": "2940:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2940:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2927:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2927:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2990:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2990:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3002:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3002:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3029:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3029:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3032:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3032:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3025:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3025:3:1"
																																		},
																																		"nativeSrc": "3025:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3025:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3041:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3041:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3021:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3021:3:1"
																																},
																																"nativeSrc": "3021:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3021:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3051:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3051:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3047:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3047:3:1"
																																},
																																"nativeSrc": "3047:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3047:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3017:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3017:3:1"
																														},
																														"nativeSrc": "3017:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3017:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3013:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3013:3:1"
																												},
																												"nativeSrc": "3013:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3013:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2998:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2998:3:1"
																										},
																										"nativeSrc": "2998:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2998:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2983:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2983:6:1"
																								},
																								"nativeSrc": "2983:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2983:74:1"
																							},
																							"nativeSrc": "2983:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2983:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2876:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2876:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2885:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2885:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2873:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2873:2:1"
																					},
																					"nativeSrc": "2873:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2873:19:1"
																				},
																				"nativeSrc": "2870:201:1",
																				"nodeType": "YulIf",
																				"src": "2870:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3091:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3091:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3105:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3105:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3108:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3108:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3101:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3101:3:1"
																									},
																									"nativeSrc": "3101:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3101:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3117:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3117:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3097:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3097:3:1"
																							},
																							"nativeSrc": "3097:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3097:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3084:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3084:6:1"
																					},
																					"nativeSrc": "3084:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3084:36:1"
																				},
																				"nativeSrc": "3084:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3084:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2481:649:1",
																	"nodeType": "YulCase",
																	"src": "2481:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2486:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2486:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3147:234:1",
																		"nodeType": "YulBlock",
																		"src": "3147:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3161:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3161:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3165:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3165:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3210:67:1",
																					"nodeType": "YulBlock",
																					"src": "3210:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3228:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3228:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3247:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3247:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3252:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3252:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3243:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3243:3:1"
																										},
																										"nativeSrc": "3243:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3243:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3237:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3237:5:1"
																								},
																								"nativeSrc": "3237:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3237:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3228:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3228:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3191:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3191:6:1"
																				},
																				"nativeSrc": "3188:89:1",
																				"nodeType": "YulIf",
																				"src": "3188:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3297:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3297:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3356:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3356:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3363:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3363:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3303:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3303:52:1"
																							},
																							"nativeSrc": "3303:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3303:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3290:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3290:6:1"
																					},
																					"nativeSrc": "3290:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3290:81:1"
																				},
																				"nativeSrc": "3290:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3290:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3139:242:1",
																	"nodeType": "YulCase",
																	"src": "3139:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2461:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2461:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2469:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2469:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2458:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2458:2:1"
																},
																"nativeSrc": "2458:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2458:14:1"
															},
															"nativeSrc": "2451:930:1",
															"nodeType": "YulSwitch",
															"src": "2451:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2088:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2169:4:1",
														"nodeType": "YulTypedName",
														"src": "2169:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2175:3:1",
														"nodeType": "YulTypedName",
														"src": "2175:3:1",
														"type": ""
													}
												],
												"src": "2088:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3493:102:1",
													"nodeType": "YulBlock",
													"src": "3493:102:1",
													"statements": [
														{
															"nativeSrc": "3503:26:1",
															"nodeType": "YulAssignment",
															"src": "3503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3515:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3526:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:1"
																},
																"nativeSrc": "3511:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3503:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3503:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3545:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3560:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3576:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3576:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3581:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3581:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3572:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3572:3:1"
																						},
																						"nativeSrc": "3572:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3572:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3585:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3585:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:1"
																				},
																				"nativeSrc": "3568:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3568:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3556:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:1"
																		},
																		"nativeSrc": "3556:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:1"
																},
																"nativeSrc": "3538:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3538:51:1"
															},
															"nativeSrc": "3538:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3538:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3392:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3462:9:1",
														"nodeType": "YulTypedName",
														"src": "3462:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3473:6:1",
														"nodeType": "YulTypedName",
														"src": "3473:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3484:4:1",
														"nodeType": "YulTypedName",
														"src": "3484:4:1",
														"type": ""
													}
												],
												"src": "3392:203:1"
											},
											{
												"body": {
													"nativeSrc": "3648:174:1",
													"nodeType": "YulBlock",
													"src": "3648:174:1",
													"statements": [
														{
															"nativeSrc": "3658:16:1",
															"nodeType": "YulAssignment",
															"src": "3658:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3669:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3669:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3672:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3672:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3665:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:1"
																},
																"nativeSrc": "3665:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3665:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3658:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3705:111:1",
																"nodeType": "YulBlock",
																"src": "3705:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3726:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3726:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3733:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3733:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3738:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3738:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3729:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3729:3:1"
																					},
																					"nativeSrc": "3729:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3729:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3719:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:1"
																			},
																			"nativeSrc": "3719:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:31:1"
																		},
																		"nativeSrc": "3719:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3770:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3770:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3773:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3773:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:1"
																			},
																			"nativeSrc": "3763:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3763:15:1"
																		},
																		"nativeSrc": "3763:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3801:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3801:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3791:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:1"
																			},
																			"nativeSrc": "3791:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:15:1"
																		},
																		"nativeSrc": "3791:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3689:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3689:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3692:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3692:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3686:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:2:1"
																},
																"nativeSrc": "3686:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:10:1"
															},
															"nativeSrc": "3683:133:1",
															"nodeType": "YulIf",
															"src": "3683:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3600:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3631:1:1",
														"nodeType": "YulTypedName",
														"src": "3631:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3634:1:1",
														"nodeType": "YulTypedName",
														"src": "3634:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3640:3:1",
														"nodeType": "YulTypedName",
														"src": "3640:3:1",
														"type": ""
													}
												],
												"src": "3600:222:1"
											},
											{
												"body": {
													"nativeSrc": "3984:188:1",
													"nodeType": "YulBlock",
													"src": "3984:188:1",
													"statements": [
														{
															"nativeSrc": "3994:26:1",
															"nodeType": "YulAssignment",
															"src": "3994:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4006:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4017:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4017:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4002:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:1"
																},
																"nativeSrc": "4002:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4002:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4036:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4036:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4051:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4051:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4067:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4067:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4072:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4072:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4063:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4063:3:1"
																						},
																						"nativeSrc": "4063:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4063:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4076:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4076:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4059:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4059:3:1"
																				},
																				"nativeSrc": "4059:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4047:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:1"
																		},
																		"nativeSrc": "4047:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:1"
																},
																"nativeSrc": "4029:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4029:51:1"
															},
															"nativeSrc": "4029:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4029:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4100:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4100:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4096:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:1"
																		},
																		"nativeSrc": "4096:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4116:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4116:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:1"
																},
																"nativeSrc": "4089:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4089:34:1"
															},
															"nativeSrc": "4089:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4089:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4143:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4154:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4139:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:1"
																		},
																		"nativeSrc": "4139:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4159:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:1"
																},
																"nativeSrc": "4132:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:34:1"
															},
															"nativeSrc": "4132:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4132:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3827:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3937:9:1",
														"nodeType": "YulTypedName",
														"src": "3937:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3948:6:1",
														"nodeType": "YulTypedName",
														"src": "3948:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3956:6:1",
														"nodeType": "YulTypedName",
														"src": "3956:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3964:6:1",
														"nodeType": "YulTypedName",
														"src": "3964:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3975:4:1",
														"nodeType": "YulTypedName",
														"src": "3975:4:1",
														"type": ""
													}
												],
												"src": "3827:345:1"
											},
											{
												"body": {
													"nativeSrc": "4278:76:1",
													"nodeType": "YulBlock",
													"src": "4278:76:1",
													"statements": [
														{
															"nativeSrc": "4288:26:1",
															"nodeType": "YulAssignment",
															"src": "4288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4300:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4300:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4311:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4296:3:1"
																},
																"nativeSrc": "4296:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4288:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4341:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4323:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:1"
																},
																"nativeSrc": "4323:25:1",
																"nodeType": "YulFunctionCall",
																"src": "4323:25:1"
															},
															"nativeSrc": "4323:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "4323:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4177:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4247:9:1",
														"nodeType": "YulTypedName",
														"src": "4247:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4258:6:1",
														"nodeType": "YulTypedName",
														"src": "4258:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4269:4:1",
														"nodeType": "YulTypedName",
														"src": "4269:4:1",
														"type": ""
													}
												],
												"src": "4177:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a600c55600c600d55348015610019575f80fd5b506040516118163803806118168339810160408190526100389161033e565b336040518060400160405280600a8152602001692c22a0a6902a37b5b2b760b11b815250604051806040016040528060048152602001635845414d60e01b81525081600390816100889190610437565b5060046100958282610437565b5050506001600160a01b0381166100c657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100cf81610174565b506001600655600780546001600160a81b0319166101006001600160a01b038881169190910291909117909155600880546001600160a01b031990811687841617909155600980548216868416179055600a80548216858416179055600b8054909116918316919091179055610150336a01a784379d99db420000006101c5565b5050335f908152600e60205260409020805460ff1916600117905550610516915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101ee5760405163ec442f0560e01b81525f60048201526024016100bd565b6101f95f83836101fd565b5050565b6001600160a01b038316610227578060025f82825461021c91906104f1565b909155506102979050565b6001600160a01b0383165f90815260208190526040902054818110156102795760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100bd565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166102b3576002805482900390556102d1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161031691815260200190565b60405180910390a3505050565b80516001600160a01b0381168114610339575f80fd5b919050565b5f805f805f60a08688031215610352575f80fd5b61035b86610323565b945061036960208701610323565b935061037760408701610323565b925061038560608701610323565b915061039360808701610323565b90509295509295909350565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806103c757607f821691505b6020821081036103e557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561043257805f5260205f20601f840160051c810160208510156104105750805b601f840160051c820191505b8181101561042f575f815560010161041c565b50505b505050565b81516001600160401b038111156104505761045061039f565b6104648161045e84546103b3565b846103eb565b6020601f821160018114610496575f831561047f5750848201515b5f19600385901b1c1916600184901b17845561042f565b5f84815260208120601f198516915b828110156104c557878501518255602094850194600190920191016104a5565b50848210156104e257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561051057634e487b7160e01b5f52601160045260245ffd5b92915050565b6112f3806105235f395ff3fe608060405234801561000f575f80fd5b50600436106101d1575f3560e01c8063753cafc3116100fe578063c12b7c4e1161009e578063dd62ed3e1161006e578063dd62ed3e146103c2578063df7787a4146103fa578063f2fde38b14610402578063f3b2db3f14610415575f80fd5b8063c12b7c4e14610380578063c816841b14610393578063cc1776d3146103a6578063cc859378146103af575f80fd5b80638da5cb5b116100d95780638da5cb5b1461034c57806395d89b411461035d578063a9059cbb14610365578063bea9ea6214610378575f80fd5b8063753cafc31461031e57806375f0a874146103315780638456cb5914610344575f80fd5b8063313ce5671161017457806352a6a9ec1161014457806352a6a9ec146102cb5780635c975abb146102e357806370a08231146102ee578063715018a614610316575f80fd5b8063313ce567146102895780633f4ba83a146102985780634f7041a5146102a05780634fbee193146102a9575f80fd5b80631006ee0c116101af5780631006ee0c1461023d57806318160ddd1461025257806323b872dd146102645780632ff2e9dc14610277575f80fd5b806306ee6ad8146101d557806306fdde0314610205578063095ea7b31461021a575b5f80fd5b600a546101e8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61020d61041d565b6040516101fc9190611099565b61022d6102283660046110e9565b6104ad565b60405190151581526020016101fc565b61025061024b366004611111565b6104c6565b005b6002545b6040519081526020016101fc565b61022d610272366004611131565b610567565b6102566a01a784379d99db4200000081565b604051601281526020016101fc565b6102506105ca565b610256600c5481565b61022d6102b736600461116b565b600e6020525f908152604090205460ff1681565b6007546101e89061010090046001600160a01b031681565b60075460ff1661022d565b6102566102fc36600461116b565b6001600160a01b03165f9081526020819052604090205490565b6102506105dc565b61025061032c36600461118b565b6105ed565b6009546101e8906001600160a01b031681565b61025061061f565b6005546001600160a01b03166101e8565b61020d61062f565b61022d6103733660046110e9565b61063e565b610250610666565b61025061038e36600461116b565b610715565b600b546101e8906001600160a01b031681565b610256600d5481565b6008546101e8906001600160a01b031681565b6102566103d03660046111c4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102566107c1565b61025061041036600461116b565b6107e6565b610256610823565b60606003805461042c906111f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610458906111f5565b80156104a35780601f1061047a576101008083540402835291602001916104a3565b820191905f5260205f20905b81548152906001019060200180831161048657829003601f168201915b5050505050905090565b5f336104ba81858561083c565b60019150505b92915050565b6104ce61084e565b600f82111580156104e0575060148111155b6105205760405162461bcd60e51b815260206004820152600c60248201526b0a8c2f040e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600c829055600d81905560408051838152602081018390527f35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4910160405180910390a15050565b5f61057061087b565b61057b8484846108c1565b6105868484846109eb565b6001600160a01b0384165f908152600160209081526040808320338085529252909120546105c09186916105bb908690611241565b61083c565b5060019392505050565b6105d261084e565b6105da610d1a565b565b6105e461084e565b6105da5f610d6c565b6105f561084e565b6001600160a01b03919091165f908152600e60205260409020805460ff1916911515919091179055565b61062761084e565b6105da610dbd565b60606004805461042c906111f5565b5f61064761087b565b6106523384846108c1565b61065d3384846109eb565b50600192915050565b61066e61084e565b305f90815260208190526040902054806106c25760405162461bcd60e51b81526020600482015260156024820152744e6f204c502066756e647320617661696c61626c6560581b6044820152606401610517565b6106de306106d86005546001600160a01b031690565b83610dfa565b6040518181527fbba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93906020015b60405180910390a150565b61071d61084e565b6001600160a01b0381166107735760405162461bcd60e51b815260206004820152601f60248201527f4e6577207061697220616464726573732063616e6e6f74206265207a65726f006044820152606401610517565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527fdd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa842713449060200161070a565b60646107d96a01a784379d99db420000006001611254565b6107e3919061126b565b81565b6107ee61084e565b6001600160a01b03811661081757604051631e4fbdf760e01b81525f6004820152602401610517565b61082081610d6c565b50565b6127106107d96a01a784379d99db420000006005611254565b6108498383836001610e57565b505050565b6005546001600160a01b031633146105da5760405163118cdaa760e01b8152336004820152602401610517565b60075460ff16156105da5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610517565b6001600160a01b0383165f908152600e602052604090205460ff166108495760646108f86a01a784379d99db420000006001611254565b610902919061126b565b81610921846001600160a01b03165f9081526020819052604090205490565b61092b919061128a565b11156109795760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d697400000000000000006044820152606401610517565b6127106109926a01a784379d99db420000006005611254565b61099c919061126b565b8111156108495760405162461bcd60e51b815260206004820152601d60248201527f45786365656473206d6178207472616e73616374696f6e206c696d69740000006044820152606401610517565b600b545f906001600160a01b03848116911614610a21576064600c5483610a129190611254565b610a1c919061126b565b610a3b565b6064600d5483610a319190611254565b610a3b919061126b565b905080821015610a8d5760405162461bcd60e51b815260206004820152601b60248201527f5461782065786365656473207472616e7366657220616d6f756e7400000000006044820152606401610517565b5f610a988284611241565b90505f600c610aa8846004611254565b610ab2919061126b565b90505f600c610ac2856004611254565b610acc919061126b565b90505f600c610adc866001611254565b610ae6919061126b565b90505f600c610af6876002611254565b610b00919061126b565b90505f600c610b10886001611254565b610b1a919061126b565b9050610b3c8a600760019054906101000a90046001600160a01b031686610dfa565b5f8051602061129e83398151915284604051610b8491815260406020820181905260129082015271115b98dbdd5c9859d95b595b9d08119d5b9960721b606082015260800190565b60405180910390a1600854610ba4908b906001600160a01b031685610dfa565b5f8051602061129e83398151915283604051610be8918152604060208201819052600e908201526d115b595c99d95b98de48119d5b9960921b606082015260800190565b60405180910390a1600954610c08908b906001600160a01b031684610dfa565b5f8051602061129e83398151915282604051610c47918152604060208201819052600990820152684d61726b6574696e6760b81b606082015260800190565b60405180910390a1600a54610c67908b906001600160a01b031683610dfa565b5f8051602061129e83398151915281604051610ca4918152604060208201819052600790820152665374616b696e6760c81b606082015260800190565b60405180910390a1610cb78a3087610dfa565b5f8051602061129e83398151915285604051610cfb918152604060208201819052600e908201526d131a5c5d5a591a5d1e48141bdbdb60921b606082015260800190565b60405180910390a1610d0e8a8a88610dfa565b50505050505050505050565b610d22610f2a565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610dc561087b565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d4f3390565b6001600160a01b038316610e2357604051634b637e8f60e11b81525f6004820152602401610517565b6001600160a01b038216610e4c5760405163ec442f0560e01b81525f6004820152602401610517565b610849838383610f73565b6001600160a01b038416610e805760405163e602df0560e01b81525f6004820152602401610517565b6001600160a01b038316610ea957604051634a1406b160e11b81525f6004820152602401610517565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610f2457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1b91815260200190565b60405180910390a35b50505050565b60075460ff166105da5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610517565b6001600160a01b038316610f9d578060025f828254610f92919061128a565b9091555061100d9050565b6001600160a01b0383165f9081526020819052604090205481811015610fef5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610517565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661102957600280548290039055611047565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161108c91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146110e4575f80fd5b919050565b5f80604083850312156110fa575f80fd5b611103836110ce565b946020939093013593505050565b5f8060408385031215611122575f80fd5b50508035926020909101359150565b5f805f60608486031215611143575f80fd5b61114c846110ce565b925061115a602085016110ce565b929592945050506040919091013590565b5f6020828403121561117b575f80fd5b611184826110ce565b9392505050565b5f806040838503121561119c575f80fd5b6111a5836110ce565b9150602083013580151581146111b9575f80fd5b809150509250929050565b5f80604083850312156111d5575f80fd5b6111de836110ce565b91506111ec602084016110ce565b90509250929050565b600181811c9082168061120957607f821691505b60208210810361122757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104c0576104c061122d565b80820281158282048414176104c0576104c061122d565b5f8261128557634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156104c0576104c061122d56fe6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984a26469706673582212205d7f440aafe1ba8988fe8525874d7a3e000e88547da5f40029ddc05e024349cb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC SSTORE PUSH1 0xC PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1816 CODESIZE SUB DUP1 PUSH2 0x1816 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x38 SWAP2 PUSH2 0x33E JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2C22A0A6902A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x5845414D PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x95 DUP3 DUP3 PUSH2 0x437 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF DUP2 PUSH2 0x174 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP8 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND DUP6 DUP5 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x150 CALLER PUSH11 0x1A784379D99DB42000000 PUSH2 0x1C5 JUMP JUMPDEST POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0x516 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0x1F9 PUSH0 DUP4 DUP4 PUSH2 0x1FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x227 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x297 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35B DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP5 POP PUSH2 0x369 PUSH1 0x20 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP4 POP PUSH2 0x377 PUSH1 0x40 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP3 POP PUSH2 0x385 PUSH1 0x60 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP PUSH2 0x393 PUSH1 0x80 DUP8 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x410 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x42F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x41C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x45E DUP5 SLOAD PUSH2 0x3B3 JUMP JUMPDEST DUP5 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x496 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x47F JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x42F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4A5 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4E2 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x510 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F3 DUP1 PUSH2 0x523 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x753CAFC3 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xBEA9EA62 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x52A6A9EC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1006EE0C GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1006EE0C EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x256 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x256 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x22D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x62F JUMP JUMPDEST PUSH2 0x22D PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4BA DUP2 DUP6 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x84E JUMP JUMPDEST PUSH1 0xF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x57B DUP5 DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x586 DUP5 DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x5C0 SWAP2 DUP7 SWAP2 PUSH2 0x5BB SWAP1 DUP7 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xD1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH0 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x627 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH0 PUSH2 0x647 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x652 CALLER DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0x84E JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F204C502066756E647320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x6DE ADDRESS PUSH2 0x6D8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xBBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x71D PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH2 0x70A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x849 JUMPI PUSH1 0x64 PUSH2 0x8F8 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 PUSH2 0x921 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x992 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xA21 JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0xD SLOAD DUP4 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461782065786365656473207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP3 DUP5 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAA8 DUP5 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAC2 DUP6 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xADC DUP7 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAF6 DUP8 PUSH1 0x2 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xB10 DUP9 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP11 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xBA4 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xC08 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xC67 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xCB7 DUP11 ADDRESS DUP8 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xCFB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD0E DUP11 DUP11 DUP9 PUSH2 0xDFA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD4F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x100D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1029 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x114C DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP PUSH2 0x115A PUSH1 0x20 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1184 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11DE DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC PUSH1 0x20 DUP5 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1209 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1285 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 TSTORE PUSH32 0x440AAFE1BA8988FE8525874D7A3E000E88547DA5F40029DDC05E024349CB6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "30617:4535:0:-:0;;;31103:2;31079:26;;31136:2;31111:27;;31416:550;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31641:10;12470:113;;;;;;;;;;;;;-1:-1:-1;;;12470:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12470:113:0;;;12544:5;12536;:13;;;;;;:::i;:::-;-1:-1:-1;12559:7:0;:17;12569:7;12559;:17;:::i;:::-;-1:-1:-1;;;;;;;;23013:26:0;;23009:95;;23062:31;;-1:-1:-1;;;23062:31:0;;23090:1;23062:31;;;3538:51:1;3511:18;;23062:31:0;;;;;;;;23009:95;23113:32;23132:12;23113:18;:32::i;:::-;-1:-1:-1;26591:1:0;26696:7;:22;28993:7;:15;;-1:-1:-1;;;;;;31663:38:0;28993:15;-1:-1:-1;;;;;31663:38:0;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;31711:13:::2;:30:::0;;-1:-1:-1;;;;;;31711:30:0;;::::2;::::0;;::::2;;::::0;;;31751:15:::2;:34:::0;;;::::2;::::0;;::::2;;::::0;;31795:13:::2;:30:::0;;;::::2;::::0;;::::2;;::::0;;31835:11:::2;:33:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;31879::::2;31885:10;30728:18;31879:5;:33::i;:::-;-1:-1:-1::0;;31941:10:0::2;31922:30;::::0;;;:18:::2;:30;::::0;;;;:37;;-1:-1:-1;;31922:37:0::2;31955:4;31922:37;::::0;;-1:-1:-1;30617:4535:0;;-1:-1:-1;;30617:4535:0;24652:187;24744:6;;;-1:-1:-1;;;;;24760:17:0;;;-1:-1:-1;;;;;;24760:17:0;;;;;;;24792:40;;24744:6;;;24760:17;24744:6;;24792:40;;24725:16;;24792:40;24715:124;24652:187;:::o;18327:208::-;-1:-1:-1;;;;;18397:21:0;;18393:91;;18441:32;;-1:-1:-1;;;18441:32:0;;18470:1;18441:32;;;3538:51:1;3511:18;;18441:32:0;3392:203:1;18393:91:0;18493:35;18509:1;18513:7;18522:5;18493:7;:35::i;:::-;18327:208;;:::o;16877:1107::-;-1:-1:-1;;;;;16966:18:0;;16962:540;;17118:5;17102:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16962:540:0;;-1:-1:-1;16962:540:0;;-1:-1:-1;;;;;17176:15:0;;17154:19;17176:15;;;;;;;;;;;17209:19;;;17205:115;;;17255:50;;-1:-1:-1;;;17255:50:0;;-1:-1:-1;;;;;4047:32:1;;17255:50:0;;;4029:51:1;4096:18;;;4089:34;;;4139:18;;;4132:34;;;4002:18;;17255:50:0;3827:345:1;17205:115:0;-1:-1:-1;;;;;17440:15:0;;:9;:15;;;;;;;;;;17458:19;;;;17440:37;;16962:540;-1:-1:-1;;;;;17516:16:0;;17512:425;;17679:12;:21;;;;;;;17512:425;;;-1:-1:-1;;;;;17890:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17512:425;17967:2;-1:-1:-1;;;;;17952:25:0;17961:4;-1:-1:-1;;;;;17952:25:0;;17971:5;17952:25;;;;4323::1;;4311:2;4296:18;;4177:177;17952:25:0;;;;;;;;16877:1107;;;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;751:127::-;812:10;807:3;803:20;800:1;793:31;843:4;840:1;833:15;867:4;864:1;857:15;883:380;962:1;958:12;;;;1005;;;1026:61;;1080:4;1072:6;1068:17;1058:27;;1026:61;1133:2;1125:6;1122:14;1102:18;1099:38;1096:161;;1179:10;1174:3;1170:20;1167:1;1160:31;1214:4;1211:1;1204:15;1242:4;1239:1;1232:15;1096:161;;883:380;;;:::o;1394:518::-;1496:2;1491:3;1488:11;1485:421;;;1532:5;1529:1;1522:16;1576:4;1573:1;1563:18;1646:2;1634:10;1630:19;1627:1;1623:27;1617:4;1613:38;1682:4;1670:10;1667:20;1664:47;;;-1:-1:-1;1705:4:1;1664:47;1760:2;1755:3;1751:12;1748:1;1744:20;1738:4;1734:31;1724:41;;1815:81;1833:2;1826:5;1823:13;1815:81;;;1892:1;1878:16;;1859:1;1848:13;1815:81;;;1819:3;;1485:421;1394:518;;;:::o;2088:1299::-;2208:10;;-1:-1:-1;;;;;2230:30:1;;2227:56;;;2263:18;;:::i;:::-;2292:97;2382:6;2342:38;2374:4;2368:11;2342:38;:::i;:::-;2336:4;2292:97;:::i;:::-;2438:4;2469:2;2458:14;;2486:1;2481:649;;;;3174:1;3191:6;3188:89;;;-1:-1:-1;3243:19:1;;;3237:26;3188:89;-1:-1:-1;;2045:1:1;2041:11;;;2037:24;2033:29;2023:40;2069:1;2065:11;;;2020:57;3290:81;;2451:930;;2481:649;1341:1;1334:14;;;1378:4;1365:18;;-1:-1:-1;;2517:20:1;;;2635:222;2649:7;2646:1;2643:14;2635:222;;;2731:19;;;2725:26;2710:42;;2838:4;2823:20;;;;2791:1;2779:14;;;;2665:12;2635:222;;;2639:3;2885:6;2876:7;2873:19;2870:201;;;2946:19;;;2940:26;-1:-1:-1;;3029:1:1;3025:14;;;3041:3;3021:24;3017:37;3013:42;2998:58;2983:74;;2870:201;-1:-1:-1;;;;3117:1:1;3101:14;;;3097:22;3084:36;;-1:-1:-1;2088:1299:1:o;3600:222::-;3665:9;;;3686:10;;;3683:133;;;3738:10;3733:3;3729:20;3726:1;3719:31;3773:4;3770:1;3763:15;3801:4;3798:1;3791:15;3683:133;3600:222;;;;:::o;4177:177::-;30617:4535:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INITIAL_SUPPLY_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TX_1118": {
									"entryPoint": 2083,
									"id": 1118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_WALLET_1110": {
									"entryPoint": 1985,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_applyTransferLimits_1318": {
									"entryPoint": 2241,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 2108,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3671,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 2126,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1069": {
									"entryPoint": 3517,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1042": {
									"entryPoint": 2171,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1053": {
									"entryPoint": 3882,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 3436,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferWithTaxes_1482": {
									"entryPoint": 2539,
									"id": 1482,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 3578,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1085": {
									"entryPoint": 3354,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3955,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1197,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTax_1131": {
									"entryPoint": null,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyFund_1122": {
									"entryPoint": null,
									"id": 1122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@encouragementFund_1120": {
									"entryPoint": null,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFees_1138": {
									"entryPoint": null,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1124": {
									"entryPoint": null,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1053,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1605": {
									"entryPoint": 1567,
									"id": 1605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1030": {
									"entryPoint": null,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1500,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1134": {
									"entryPoint": null,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingWallet_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1583,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1284": {
									"entryPoint": 1383,
									"id": 1284,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 2022,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1242": {
									"entryPoint": 1598,
									"id": 1242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1128": {
									"entryPoint": null,
									"id": 1128,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1614": {
									"entryPoint": 1482,
									"id": 1614,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateExcludedAccountStatus_1536": {
									"entryPoint": 1517,
									"id": 1536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateTaxes_1596": {
									"entryPoint": 1222,
									"id": 1596,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateUniswapPair_1562": {
									"entryPoint": 1813,
									"id": 1562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawLPFunds_1520": {
									"entryPoint": 1638,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9881:1",
										"nodeType": "YulBlock",
										"src": "0:9881:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:1",
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:1",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nativeSrc": "194:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:1",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nativeSrc": "190:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nativeSrc": "178:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:51:1",
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nativeSrc": "160:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nativeSrc": "343:297:1",
													"nodeType": "YulBlock",
													"src": "343:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:1",
																		"nodeType": "YulLiteral",
																		"src": "371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:1"
																},
																"nativeSrc": "353:21:1",
																"nodeType": "YulFunctionCall",
																"src": "353:21:1"
															},
															"nativeSrc": "353:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:1"
														},
														{
															"nativeSrc": "383:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:1"
																},
																"nativeSrc": "397:13:1",
																"nodeType": "YulFunctionCall",
																"src": "397:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:1",
																	"nodeType": "YulTypedName",
																	"src": "387:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:1",
																				"nodeType": "YulLiteral",
																				"src": "441:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:1"
																		},
																		"nativeSrc": "426:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nativeSrc": "419:34:1",
																"nodeType": "YulFunctionCall",
																"src": "419:34:1"
															},
															"nativeSrc": "419:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:1",
																				"nodeType": "YulLiteral",
																				"src": "483:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:1"
																		},
																		"nativeSrc": "468:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:1",
																				"nodeType": "YulLiteral",
																				"src": "500:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:1"
																		},
																		"nativeSrc": "488:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:1"
																},
																"nativeSrc": "462:50:1",
																"nodeType": "YulFunctionCall",
																"src": "462:50:1"
															},
															"nativeSrc": "462:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:1"
																				},
																				"nativeSrc": "532:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:1",
																				"nodeType": "YulLiteral",
																				"src": "556:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:1"
																		},
																		"nativeSrc": "528:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:1",
																		"nodeType": "YulLiteral",
																		"src": "561:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:1"
																},
																"nativeSrc": "521:42:1",
																"nodeType": "YulFunctionCall",
																"src": "521:42:1"
															},
															"nativeSrc": "521:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:1"
														},
														{
															"nativeSrc": "572:62:1",
															"nodeType": "YulAssignment",
															"src": "572:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:1",
																								"nodeType": "YulLiteral",
																								"src": "615:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:1"
																						},
																						"nativeSrc": "603:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:1",
																								"nodeType": "YulLiteral",
																								"src": "624:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:1"
																						},
																						"nativeSrc": "620:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:1"
																				},
																				"nativeSrc": "599:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:1",
																		"nodeType": "YulLiteral",
																		"src": "631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:1"
																},
																"nativeSrc": "580:54:1",
																"nodeType": "YulFunctionCall",
																"src": "580:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:1",
														"nodeType": "YulTypedName",
														"src": "312:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:1",
														"nodeType": "YulTypedName",
														"src": "323:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:1",
														"nodeType": "YulTypedName",
														"src": "334:4:1",
														"type": ""
													}
												],
												"src": "222:418:1"
											},
											{
												"body": {
													"nativeSrc": "694:124:1",
													"nodeType": "YulBlock",
													"src": "694:124:1",
													"statements": [
														{
															"nativeSrc": "704:29:1",
															"nodeType": "YulAssignment",
															"src": "704:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:1"
																},
																"nativeSrc": "713:20:1",
																"nodeType": "YulFunctionCall",
																"src": "713:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:1",
																"nodeType": "YulBlock",
																"src": "796:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:1",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:1"
																			},
																			"nativeSrc": "798:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:1"
																		},
																		"nativeSrc": "798:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:1",
																										"nodeType": "YulLiteral",
																										"src": "781:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:1",
																										"nodeType": "YulLiteral",
																										"src": "786:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:1"
																								},
																								"nativeSrc": "777:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:1",
																								"nodeType": "YulLiteral",
																								"src": "790:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:1"
																						},
																						"nativeSrc": "773:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:1"
																				},
																				"nativeSrc": "762:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:1"
																		},
																		"nativeSrc": "752:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:50:1",
																"nodeType": "YulFunctionCall",
																"src": "745:50:1"
															},
															"nativeSrc": "742:70:1",
															"nodeType": "YulIf",
															"src": "742:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:1",
														"nodeType": "YulTypedName",
														"src": "673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:1",
														"nodeType": "YulTypedName",
														"src": "684:5:1",
														"type": ""
													}
												],
												"src": "645:173:1"
											},
											{
												"body": {
													"nativeSrc": "910:213:1",
													"nodeType": "YulBlock",
													"src": "910:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:1",
																"nodeType": "YulBlock",
																"src": "956:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:1",
																					"nodeType": "YulLiteral",
																					"src": "968:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			"nativeSrc": "958:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:1"
																		},
																		"nativeSrc": "958:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nativeSrc": "927:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:1",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:1"
																},
																"nativeSrc": "923:32:1",
																"nodeType": "YulFunctionCall",
																"src": "923:32:1"
															},
															"nativeSrc": "920:52:1",
															"nodeType": "YulIf",
															"src": "920:52:1"
														},
														{
															"nativeSrc": "981:39:1",
															"nodeType": "YulAssignment",
															"src": "981:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:1"
																},
																"nativeSrc": "991:29:1",
																"nodeType": "YulFunctionCall",
																"src": "991:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:1"
																}
															]
														},
														{
															"nativeSrc": "1029:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:1",
																"nodeType": "YulLiteral",
																"src": "1042:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:1",
															"nodeType": "YulAssignment",
															"src": "1052:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:1"
																		},
																		"nativeSrc": "1074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:1"
																},
																"nativeSrc": "1061:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:1"
																}
															]
														},
														{
															"nativeSrc": "1102:15:1",
															"nodeType": "YulAssignment",
															"src": "1102:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:1",
																"nodeType": "YulIdentifier",
																"src": "1112:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:1",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:1",
														"nodeType": "YulTypedName",
														"src": "879:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:1",
														"nodeType": "YulTypedName",
														"src": "891:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:1",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"src": "823:300:1"
											},
											{
												"body": {
													"nativeSrc": "1223:92:1",
													"nodeType": "YulBlock",
													"src": "1223:92:1",
													"statements": [
														{
															"nativeSrc": "1233:26:1",
															"nodeType": "YulAssignment",
															"src": "1233:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:1"
																},
																"nativeSrc": "1241:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:1"
																				},
																				"nativeSrc": "1293:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:1"
																		},
																		"nativeSrc": "1286:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:1"
																},
																"nativeSrc": "1268:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:1"
															},
															"nativeSrc": "1268:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:1",
														"nodeType": "YulTypedName",
														"src": "1192:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:1",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:1",
														"nodeType": "YulTypedName",
														"src": "1214:4:1",
														"type": ""
													}
												],
												"src": "1128:187:1"
											},
											{
												"body": {
													"nativeSrc": "1407:259:1",
													"nodeType": "YulBlock",
													"src": "1407:259:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1453:16:1",
																"nodeType": "YulBlock",
																"src": "1453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:1"
																			},
																			"nativeSrc": "1455:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:1"
																		},
																		"nativeSrc": "1455:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1428:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1437:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1437:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1424:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nativeSrc": "1424:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1449:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1420:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1420:3:1"
																},
																"nativeSrc": "1420:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1420:32:1"
															},
															"nativeSrc": "1417:52:1",
															"nodeType": "YulIf",
															"src": "1417:52:1"
														},
														{
															"nativeSrc": "1478:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1478:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1491:1:1",
																"nodeType": "YulLiteral",
																"src": "1491:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1482:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1482:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1501:32:1",
															"nodeType": "YulAssignment",
															"src": "1501:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1523:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1510:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1510:12:1"
																},
																"nativeSrc": "1510:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1510:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1501:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1501:5:1"
																}
															]
														},
														{
															"nativeSrc": "1542:15:1",
															"nodeType": "YulAssignment",
															"src": "1542:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1552:5:1",
																"nodeType": "YulIdentifier",
																"src": "1552:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1542:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:1"
																}
															]
														},
														{
															"nativeSrc": "1566:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1566:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1581:1:1",
																"nodeType": "YulLiteral",
																"src": "1581:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1570:7:1",
																	"nodeType": "YulTypedName",
																	"src": "1570:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1591:43:1",
															"nodeType": "YulAssignment",
															"src": "1591:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1630:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1630:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1615:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:1"
																		},
																		"nativeSrc": "1615:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1602:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1602:12:1"
																},
																"nativeSrc": "1602:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																}
															]
														},
														{
															"nativeSrc": "1643:17:1",
															"nodeType": "YulAssignment",
															"src": "1643:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "1653:7:1",
																"nodeType": "YulIdentifier",
																"src": "1653:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1643:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1320:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1365:9:1",
														"nodeType": "YulTypedName",
														"src": "1365:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1376:7:1",
														"nodeType": "YulTypedName",
														"src": "1376:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1388:6:1",
														"nodeType": "YulTypedName",
														"src": "1388:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1396:6:1",
														"nodeType": "YulTypedName",
														"src": "1396:6:1",
														"type": ""
													}
												],
												"src": "1320:346:1"
											},
											{
												"body": {
													"nativeSrc": "1772:76:1",
													"nodeType": "YulBlock",
													"src": "1772:76:1",
													"statements": [
														{
															"nativeSrc": "1782:26:1",
															"nodeType": "YulAssignment",
															"src": "1782:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1794:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1794:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1805:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1790:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:1"
																},
																"nativeSrc": "1790:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1790:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1782:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1782:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1824:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1835:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1817:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1817:6:1"
																},
																"nativeSrc": "1817:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1817:25:1"
															},
															"nativeSrc": "1817:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1817:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1671:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1741:9:1",
														"nodeType": "YulTypedName",
														"src": "1741:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1752:6:1",
														"nodeType": "YulTypedName",
														"src": "1752:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1763:4:1",
														"nodeType": "YulTypedName",
														"src": "1763:4:1",
														"type": ""
													}
												],
												"src": "1671:177:1"
											},
											{
												"body": {
													"nativeSrc": "1957:270:1",
													"nodeType": "YulBlock",
													"src": "1957:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2003:16:1",
																"nodeType": "YulBlock",
																"src": "2003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2012:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2005:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2005:6:1"
																			},
																			"nativeSrc": "2005:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2005:12:1"
																		},
																		"nativeSrc": "2005:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1978:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1978:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1987:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1987:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:1"
																		},
																		"nativeSrc": "1974:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1999:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1999:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1970:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:3:1"
																},
																"nativeSrc": "1970:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1970:32:1"
															},
															"nativeSrc": "1967:52:1",
															"nodeType": "YulIf",
															"src": "1967:52:1"
														},
														{
															"nativeSrc": "2028:39:1",
															"nodeType": "YulAssignment",
															"src": "2028:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2057:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2057:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2038:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2038:18:1"
																},
																"nativeSrc": "2038:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2038:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:1"
																}
															]
														},
														{
															"nativeSrc": "2076:48:1",
															"nodeType": "YulAssignment",
															"src": "2076:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2109:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2109:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2120:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2105:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:1"
																		},
																		"nativeSrc": "2105:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2105:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2086:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2086:18:1"
																},
																"nativeSrc": "2086:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2086:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2076:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:1"
																}
															]
														},
														{
															"nativeSrc": "2133:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2133:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2146:1:1",
																"nodeType": "YulLiteral",
																"src": "2146:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2137:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2137:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2156:41:1",
															"nodeType": "YulAssignment",
															"src": "2156:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2182:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2182:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2193:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2193:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:1"
																		},
																		"nativeSrc": "2178:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2178:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2165:12:1"
																},
																"nativeSrc": "2165:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2165:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2156:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2156:5:1"
																}
															]
														},
														{
															"nativeSrc": "2206:15:1",
															"nodeType": "YulAssignment",
															"src": "2206:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2216:5:1",
																"nodeType": "YulIdentifier",
																"src": "2216:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1853:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1907:9:1",
														"nodeType": "YulTypedName",
														"src": "1907:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1918:7:1",
														"nodeType": "YulTypedName",
														"src": "1918:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1930:6:1",
														"nodeType": "YulTypedName",
														"src": "1930:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1938:6:1",
														"nodeType": "YulTypedName",
														"src": "1938:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1946:6:1",
														"nodeType": "YulTypedName",
														"src": "1946:6:1",
														"type": ""
													}
												],
												"src": "1853:374:1"
											},
											{
												"body": {
													"nativeSrc": "2329:87:1",
													"nodeType": "YulBlock",
													"src": "2329:87:1",
													"statements": [
														{
															"nativeSrc": "2339:26:1",
															"nodeType": "YulAssignment",
															"src": "2339:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2351:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2351:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2347:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2347:3:1"
																},
																"nativeSrc": "2347:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2347:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2339:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2339:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2381:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2404:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2404:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2392:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:1"
																		},
																		"nativeSrc": "2392:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2374:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:1"
																},
																"nativeSrc": "2374:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2374:36:1"
															},
															"nativeSrc": "2374:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2374:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2232:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2298:9:1",
														"nodeType": "YulTypedName",
														"src": "2298:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2309:6:1",
														"nodeType": "YulTypedName",
														"src": "2309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2320:4:1",
														"nodeType": "YulTypedName",
														"src": "2320:4:1",
														"type": ""
													}
												],
												"src": "2232:184:1"
											},
											{
												"body": {
													"nativeSrc": "2491:116:1",
													"nodeType": "YulBlock",
													"src": "2491:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2537:16:1",
																"nodeType": "YulBlock",
																"src": "2537:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2546:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2546:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2549:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2539:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2539:6:1"
																			},
																			"nativeSrc": "2539:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2539:12:1"
																		},
																		"nativeSrc": "2539:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2539:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2512:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2521:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2508:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:1"
																		},
																		"nativeSrc": "2508:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2508:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2533:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2504:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:1"
																},
																"nativeSrc": "2504:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2504:32:1"
															},
															"nativeSrc": "2501:52:1",
															"nodeType": "YulIf",
															"src": "2501:52:1"
														},
														{
															"nativeSrc": "2562:39:1",
															"nodeType": "YulAssignment",
															"src": "2562:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2591:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2591:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2572:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2572:18:1"
																},
																"nativeSrc": "2572:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2572:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2562:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2421:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2457:9:1",
														"nodeType": "YulTypedName",
														"src": "2457:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2468:7:1",
														"nodeType": "YulTypedName",
														"src": "2468:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2480:6:1",
														"nodeType": "YulTypedName",
														"src": "2480:6:1",
														"type": ""
													}
												],
												"src": "2421:186:1"
											},
											{
												"body": {
													"nativeSrc": "2696:263:1",
													"nodeType": "YulBlock",
													"src": "2696:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2742:16:1",
																"nodeType": "YulBlock",
																"src": "2742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2751:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2754:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2744:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:1"
																			},
																			"nativeSrc": "2744:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:12:1"
																		},
																		"nativeSrc": "2744:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2717:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2717:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2726:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2726:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2713:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:1"
																		},
																		"nativeSrc": "2713:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2738:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2738:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2709:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:1"
																},
																"nativeSrc": "2709:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2709:32:1"
															},
															"nativeSrc": "2706:52:1",
															"nodeType": "YulIf",
															"src": "2706:52:1"
														},
														{
															"nativeSrc": "2767:39:1",
															"nodeType": "YulAssignment",
															"src": "2767:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2796:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2796:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2777:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2777:18:1"
																},
																"nativeSrc": "2777:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2777:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2767:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:1"
																}
															]
														},
														{
															"nativeSrc": "2815:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2815:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2845:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2856:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2856:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2841:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2841:3:1"
																		},
																		"nativeSrc": "2841:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2841:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2828:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2828:12:1"
																},
																"nativeSrc": "2828:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2828:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2819:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2819:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2913:16:1",
																"nodeType": "YulBlock",
																"src": "2913:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:1"
																			},
																			"nativeSrc": "2915:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:12:1"
																		},
																		"nativeSrc": "2915:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2882:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2882:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2903:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2903:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2896:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2896:6:1"
																						},
																						"nativeSrc": "2896:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2896:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2889:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2889:6:1"
																				},
																				"nativeSrc": "2889:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2889:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2879:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2879:2:1"
																		},
																		"nativeSrc": "2879:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																},
																"nativeSrc": "2872:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2872:40:1"
															},
															"nativeSrc": "2869:60:1",
															"nodeType": "YulIf",
															"src": "2869:60:1"
														},
														{
															"nativeSrc": "2938:15:1",
															"nodeType": "YulAssignment",
															"src": "2938:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2948:5:1",
																"nodeType": "YulIdentifier",
																"src": "2948:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2938:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2612:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2654:9:1",
														"nodeType": "YulTypedName",
														"src": "2654:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2665:7:1",
														"nodeType": "YulTypedName",
														"src": "2665:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2677:6:1",
														"nodeType": "YulTypedName",
														"src": "2677:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2685:6:1",
														"nodeType": "YulTypedName",
														"src": "2685:6:1",
														"type": ""
													}
												],
												"src": "2612:347:1"
											},
											{
												"body": {
													"nativeSrc": "3051:173:1",
													"nodeType": "YulBlock",
													"src": "3051:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3097:16:1",
																"nodeType": "YulBlock",
																"src": "3097:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3106:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3106:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3109:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3109:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3099:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:1"
																			},
																			"nativeSrc": "3099:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3099:12:1"
																		},
																		"nativeSrc": "3099:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3099:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3072:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3072:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3081:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3081:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3068:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:1"
																		},
																		"nativeSrc": "3068:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3093:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3093:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3064:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3064:3:1"
																},
																"nativeSrc": "3064:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3064:32:1"
															},
															"nativeSrc": "3061:52:1",
															"nodeType": "YulIf",
															"src": "3061:52:1"
														},
														{
															"nativeSrc": "3122:39:1",
															"nodeType": "YulAssignment",
															"src": "3122:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3151:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3132:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3132:18:1"
																},
																"nativeSrc": "3132:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3132:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:1"
																}
															]
														},
														{
															"nativeSrc": "3170:48:1",
															"nodeType": "YulAssignment",
															"src": "3170:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3203:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3214:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3214:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:1"
																		},
																		"nativeSrc": "3199:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3180:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3180:18:1"
																},
																"nativeSrc": "3180:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3180:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3170:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2964:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3009:9:1",
														"nodeType": "YulTypedName",
														"src": "3009:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3020:7:1",
														"nodeType": "YulTypedName",
														"src": "3020:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3032:6:1",
														"nodeType": "YulTypedName",
														"src": "3032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:1",
														"nodeType": "YulTypedName",
														"src": "3040:6:1",
														"type": ""
													}
												],
												"src": "2964:260:1"
											},
											{
												"body": {
													"nativeSrc": "3284:325:1",
													"nodeType": "YulBlock",
													"src": "3284:325:1",
													"statements": [
														{
															"nativeSrc": "3294:22:1",
															"nodeType": "YulAssignment",
															"src": "3294:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3308:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3308:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3311:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3311:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3304:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:1"
																},
																"nativeSrc": "3304:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3304:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3294:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:1"
																}
															]
														},
														{
															"nativeSrc": "3325:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3325:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3355:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3355:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3361:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3361:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3351:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:1"
																},
																"nativeSrc": "3351:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3351:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3329:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3329:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3402:31:1",
																"nodeType": "YulBlock",
																"src": "3402:31:1",
																"statements": [
																	{
																		"nativeSrc": "3404:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3404:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3418:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3418:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3426:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3426:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3414:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:1"
																			},
																			"nativeSrc": "3414:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3414:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3404:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3404:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3382:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3382:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3375:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:1"
																},
																"nativeSrc": "3375:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3375:26:1"
															},
															"nativeSrc": "3372:61:1",
															"nodeType": "YulIf",
															"src": "3372:61:1"
														},
														{
															"body": {
																"nativeSrc": "3492:111:1",
																"nodeType": "YulBlock",
																"src": "3492:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3513:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3520:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3520:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3525:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3525:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3516:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3516:3:1"
																					},
																					"nativeSrc": "3516:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3516:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3506:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3506:6:1"
																			},
																			"nativeSrc": "3506:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:31:1"
																		},
																		"nativeSrc": "3506:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3506:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3560:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3550:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:1"
																			},
																			"nativeSrc": "3550:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3550:15:1"
																		},
																		"nativeSrc": "3550:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3550:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3585:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3585:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3588:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3588:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3578:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3578:6:1"
																			},
																			"nativeSrc": "3578:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3578:15:1"
																		},
																		"nativeSrc": "3578:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3578:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3448:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3448:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3471:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3479:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3468:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3468:2:1"
																		},
																		"nativeSrc": "3468:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3445:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:1"
																},
																"nativeSrc": "3445:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3445:38:1"
															},
															"nativeSrc": "3442:161:1",
															"nodeType": "YulIf",
															"src": "3442:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3229:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3264:4:1",
														"nodeType": "YulTypedName",
														"src": "3264:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3273:6:1",
														"nodeType": "YulTypedName",
														"src": "3273:6:1",
														"type": ""
													}
												],
												"src": "3229:380:1"
											},
											{
												"body": {
													"nativeSrc": "3788:162:1",
													"nodeType": "YulBlock",
													"src": "3788:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3805:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3816:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:1"
																},
																"nativeSrc": "3798:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3798:21:1"
															},
															"nativeSrc": "3798:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3798:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:1"
																		},
																		"nativeSrc": "3835:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3855:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3828:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:1"
																},
																"nativeSrc": "3828:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3828:30:1"
															},
															"nativeSrc": "3828:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3828:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3878:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3889:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3889:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3874:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3874:3:1"
																		},
																		"nativeSrc": "3874:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:18:1"
																	},
																	{
																		"hexValue": "54617820746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "3894:14:1",
																		"nodeType": "YulLiteral",
																		"src": "3894:14:1",
																		"type": "",
																		"value": "Tax too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:1"
																},
																"nativeSrc": "3867:42:1",
																"nodeType": "YulFunctionCall",
																"src": "3867:42:1"
															},
															"nativeSrc": "3867:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "3867:42:1"
														},
														{
															"nativeSrc": "3918:26:1",
															"nodeType": "YulAssignment",
															"src": "3918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3930:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3930:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3941:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3941:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3926:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:1"
																},
																"nativeSrc": "3926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3926:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3614:336:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3765:9:1",
														"nodeType": "YulTypedName",
														"src": "3765:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3779:4:1",
														"nodeType": "YulTypedName",
														"src": "3779:4:1",
														"type": ""
													}
												],
												"src": "3614:336:1"
											},
											{
												"body": {
													"nativeSrc": "4084:119:1",
													"nodeType": "YulBlock",
													"src": "4084:119:1",
													"statements": [
														{
															"nativeSrc": "4094:26:1",
															"nodeType": "YulAssignment",
															"src": "4094:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4106:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4106:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4117:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4117:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4102:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4102:3:1"
																},
																"nativeSrc": "4102:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4102:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4094:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4094:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4136:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4136:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4147:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4147:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4129:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:1"
																},
																"nativeSrc": "4129:25:1",
																"nodeType": "YulFunctionCall",
																"src": "4129:25:1"
															},
															"nativeSrc": "4129:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "4129:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4174:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4174:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4185:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4185:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4170:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:1"
																		},
																		"nativeSrc": "4170:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4170:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4190:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4190:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4163:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4163:6:1"
																},
																"nativeSrc": "4163:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4163:34:1"
															},
															"nativeSrc": "4163:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4163:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3955:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4045:9:1",
														"nodeType": "YulTypedName",
														"src": "4045:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4056:6:1",
														"nodeType": "YulTypedName",
														"src": "4056:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4064:6:1",
														"nodeType": "YulTypedName",
														"src": "4064:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4075:4:1",
														"nodeType": "YulTypedName",
														"src": "4075:4:1",
														"type": ""
													}
												],
												"src": "3955:248:1"
											},
											{
												"body": {
													"nativeSrc": "4240:95:1",
													"nodeType": "YulBlock",
													"src": "4240:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4257:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4257:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4264:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4264:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4269:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4269:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:1"
																		},
																		"nativeSrc": "4260:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4260:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4250:6:1"
																},
																"nativeSrc": "4250:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4250:31:1"
															},
															"nativeSrc": "4250:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4250:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4297:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4297:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4300:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4300:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4290:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4290:6:1"
																},
																"nativeSrc": "4290:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4290:15:1"
															},
															"nativeSrc": "4290:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4290:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4321:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4324:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4324:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4314:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:1"
																},
																"nativeSrc": "4314:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4314:15:1"
															},
															"nativeSrc": "4314:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4314:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4208:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4208:127:1"
											},
											{
												"body": {
													"nativeSrc": "4389:79:1",
													"nodeType": "YulBlock",
													"src": "4389:79:1",
													"statements": [
														{
															"nativeSrc": "4399:17:1",
															"nodeType": "YulAssignment",
															"src": "4399:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4411:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4411:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4414:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4414:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4407:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:1"
																},
																"nativeSrc": "4407:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4407:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4399:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4440:22:1",
																"nodeType": "YulBlock",
																"src": "4440:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4442:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4442:16:1"
																			},
																			"nativeSrc": "4442:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4442:18:1"
																		},
																		"nativeSrc": "4442:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4442:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4431:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4431:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4437:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4437:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4428:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4428:2:1"
																},
																"nativeSrc": "4428:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4428:11:1"
															},
															"nativeSrc": "4425:37:1",
															"nodeType": "YulIf",
															"src": "4425:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4340:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4371:1:1",
														"nodeType": "YulTypedName",
														"src": "4371:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4374:1:1",
														"nodeType": "YulTypedName",
														"src": "4374:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4380:4:1",
														"nodeType": "YulTypedName",
														"src": "4380:4:1",
														"type": ""
													}
												],
												"src": "4340:128:1"
											},
											{
												"body": {
													"nativeSrc": "4647:171:1",
													"nodeType": "YulBlock",
													"src": "4647:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4664:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4664:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4675:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:1"
																},
																"nativeSrc": "4657:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4657:21:1"
															},
															"nativeSrc": "4657:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4657:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4698:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4709:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4709:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4694:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:1"
																		},
																		"nativeSrc": "4694:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4694:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4714:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4714:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4687:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:1"
																},
																"nativeSrc": "4687:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4687:30:1"
															},
															"nativeSrc": "4687:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4687:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4748:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:1"
																		},
																		"nativeSrc": "4733:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:18:1"
																	},
																	{
																		"hexValue": "4e6f204c502066756e647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "4753:23:1",
																		"nodeType": "YulLiteral",
																		"src": "4753:23:1",
																		"type": "",
																		"value": "No LP funds available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:1"
																},
																"nativeSrc": "4726:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4726:51:1"
															},
															"nativeSrc": "4726:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4726:51:1"
														},
														{
															"nativeSrc": "4786:26:1",
															"nodeType": "YulAssignment",
															"src": "4786:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4798:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4798:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4809:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4809:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4794:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:1"
																},
																"nativeSrc": "4794:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4794:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4786:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4786:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4473:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4624:9:1",
														"nodeType": "YulTypedName",
														"src": "4624:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4638:4:1",
														"nodeType": "YulTypedName",
														"src": "4638:4:1",
														"type": ""
													}
												],
												"src": "4473:345:1"
											},
											{
												"body": {
													"nativeSrc": "4997:181:1",
													"nodeType": "YulBlock",
													"src": "4997:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5014:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5014:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5025:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5025:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5007:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:1"
																},
																"nativeSrc": "5007:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5007:21:1"
															},
															"nativeSrc": "5007:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5007:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5048:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5059:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5059:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5044:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:1"
																		},
																		"nativeSrc": "5044:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5044:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5064:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5064:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:1"
																},
																"nativeSrc": "5037:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5037:30:1"
															},
															"nativeSrc": "5037:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5037:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5087:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5087:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5098:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5098:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5083:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:1"
																		},
																		"nativeSrc": "5083:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5083:18:1"
																	},
																	{
																		"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "5103:33:1",
																		"nodeType": "YulLiteral",
																		"src": "5103:33:1",
																		"type": "",
																		"value": "New pair address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5076:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:1"
																},
																"nativeSrc": "5076:61:1",
																"nodeType": "YulFunctionCall",
																"src": "5076:61:1"
															},
															"nativeSrc": "5076:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "5076:61:1"
														},
														{
															"nativeSrc": "5146:26:1",
															"nodeType": "YulAssignment",
															"src": "5146:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5158:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5154:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:1"
																},
																"nativeSrc": "5154:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5154:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5146:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5146:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4823:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4974:9:1",
														"nodeType": "YulTypedName",
														"src": "4974:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4988:4:1",
														"nodeType": "YulTypedName",
														"src": "4988:4:1",
														"type": ""
													}
												],
												"src": "4823:355:1"
											},
											{
												"body": {
													"nativeSrc": "5235:116:1",
													"nodeType": "YulBlock",
													"src": "5235:116:1",
													"statements": [
														{
															"nativeSrc": "5245:20:1",
															"nodeType": "YulAssignment",
															"src": "5245:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5260:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5260:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5263:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5263:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5256:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:1"
																},
																"nativeSrc": "5256:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5256:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5245:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5245:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5323:22:1",
																"nodeType": "YulBlock",
																"src": "5323:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5325:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5325:16:1"
																			},
																			"nativeSrc": "5325:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5325:18:1"
																		},
																		"nativeSrc": "5325:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5294:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5294:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5287:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5287:6:1"
																				},
																				"nativeSrc": "5287:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5287:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5301:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5301:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5308:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "5308:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5317:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "5317:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5304:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5304:3:1"
																						},
																						"nativeSrc": "5304:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5304:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5298:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5298:2:1"
																				},
																				"nativeSrc": "5298:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5298:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5284:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5284:2:1"
																		},
																		"nativeSrc": "5284:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5284:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5277:6:1"
																},
																"nativeSrc": "5277:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5277:45:1"
															},
															"nativeSrc": "5274:71:1",
															"nodeType": "YulIf",
															"src": "5274:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5183:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5214:1:1",
														"nodeType": "YulTypedName",
														"src": "5214:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5217:1:1",
														"nodeType": "YulTypedName",
														"src": "5217:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5223:7:1",
														"nodeType": "YulTypedName",
														"src": "5223:7:1",
														"type": ""
													}
												],
												"src": "5183:168:1"
											},
											{
												"body": {
													"nativeSrc": "5402:171:1",
													"nodeType": "YulBlock",
													"src": "5402:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5433:111:1",
																"nodeType": "YulBlock",
																"src": "5433:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5454:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5454:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5461:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5461:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5466:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5466:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5457:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5457:3:1"
																					},
																					"nativeSrc": "5457:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5457:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5447:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5447:6:1"
																			},
																			"nativeSrc": "5447:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5447:31:1"
																		},
																		"nativeSrc": "5447:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5447:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5498:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5501:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5501:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5491:6:1"
																			},
																			"nativeSrc": "5491:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5491:15:1"
																		},
																		"nativeSrc": "5491:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5491:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5529:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5529:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5519:6:1"
																			},
																			"nativeSrc": "5519:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5519:15:1"
																		},
																		"nativeSrc": "5519:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5422:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5422:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:1"
																},
																"nativeSrc": "5415:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5415:9:1"
															},
															"nativeSrc": "5412:132:1",
															"nodeType": "YulIf",
															"src": "5412:132:1"
														},
														{
															"nativeSrc": "5553:14:1",
															"nodeType": "YulAssignment",
															"src": "5553:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5562:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5562:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5565:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5558:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:1"
																},
																"nativeSrc": "5558:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5558:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5553:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5553:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5356:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5387:1:1",
														"nodeType": "YulTypedName",
														"src": "5387:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5390:1:1",
														"nodeType": "YulTypedName",
														"src": "5390:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5396:1:1",
														"nodeType": "YulTypedName",
														"src": "5396:1:1",
														"type": ""
													}
												],
												"src": "5356:217:1"
											},
											{
												"body": {
													"nativeSrc": "5752:166:1",
													"nodeType": "YulBlock",
													"src": "5752:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5769:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5780:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5762:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5762:6:1"
																},
																"nativeSrc": "5762:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5762:21:1"
															},
															"nativeSrc": "5762:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5762:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5803:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5814:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:1"
																		},
																		"nativeSrc": "5799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:1"
																},
																"nativeSrc": "5792:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5792:30:1"
															},
															"nativeSrc": "5792:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5792:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:1"
																		},
																		"nativeSrc": "5838:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5858:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5858:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:1"
																},
																"nativeSrc": "5831:46:1",
																"nodeType": "YulFunctionCall",
																"src": "5831:46:1"
															},
															"nativeSrc": "5831:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "5831:46:1"
														},
														{
															"nativeSrc": "5886:26:1",
															"nodeType": "YulAssignment",
															"src": "5886:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5898:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5898:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5909:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5894:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:1"
																},
																"nativeSrc": "5894:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5894:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5886:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5886:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5578:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5729:9:1",
														"nodeType": "YulTypedName",
														"src": "5729:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5743:4:1",
														"nodeType": "YulTypedName",
														"src": "5743:4:1",
														"type": ""
													}
												],
												"src": "5578:340:1"
											},
											{
												"body": {
													"nativeSrc": "5971:77:1",
													"nodeType": "YulBlock",
													"src": "5971:77:1",
													"statements": [
														{
															"nativeSrc": "5981:16:1",
															"nodeType": "YulAssignment",
															"src": "5981:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5992:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5992:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5995:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5995:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5988:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:1"
																},
																"nativeSrc": "5988:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5988:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5981:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6020:22:1",
																"nodeType": "YulBlock",
																"src": "6020:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6022:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6022:16:1"
																			},
																			"nativeSrc": "6022:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6022:18:1"
																		},
																		"nativeSrc": "6022:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6022:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6012:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6012:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6015:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6015:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6009:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6009:2:1"
																},
																"nativeSrc": "6009:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6009:10:1"
															},
															"nativeSrc": "6006:36:1",
															"nodeType": "YulIf",
															"src": "6006:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5923:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5954:1:1",
														"nodeType": "YulTypedName",
														"src": "5954:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5957:1:1",
														"nodeType": "YulTypedName",
														"src": "5957:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5963:3:1",
														"nodeType": "YulTypedName",
														"src": "5963:3:1",
														"type": ""
													}
												],
												"src": "5923:125:1"
											},
											{
												"body": {
													"nativeSrc": "6227:174:1",
													"nodeType": "YulBlock",
													"src": "6227:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6244:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6244:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6255:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:1"
																},
																"nativeSrc": "6237:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6237:21:1"
															},
															"nativeSrc": "6237:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6278:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6278:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6289:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6274:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6274:3:1"
																		},
																		"nativeSrc": "6274:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6274:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6294:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6294:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:1"
																},
																"nativeSrc": "6267:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6267:30:1"
															},
															"nativeSrc": "6267:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6317:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6317:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6328:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6313:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:1"
																		},
																		"nativeSrc": "6313:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6313:18:1"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"kind": "string",
																		"nativeSrc": "6333:26:1",
																		"nodeType": "YulLiteral",
																		"src": "6333:26:1",
																		"type": "",
																		"value": "Exceeds max wallet limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6306:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:1"
																},
																"nativeSrc": "6306:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6306:54:1"
															},
															"nativeSrc": "6306:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "6306:54:1"
														},
														{
															"nativeSrc": "6369:26:1",
															"nodeType": "YulAssignment",
															"src": "6369:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6392:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:1"
																},
																"nativeSrc": "6377:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6377:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6053:348:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6204:9:1",
														"nodeType": "YulTypedName",
														"src": "6204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6218:4:1",
														"nodeType": "YulTypedName",
														"src": "6218:4:1",
														"type": ""
													}
												],
												"src": "6053:348:1"
											},
											{
												"body": {
													"nativeSrc": "6580:179:1",
													"nodeType": "YulBlock",
													"src": "6580:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6597:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6597:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6608:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:1"
																},
																"nativeSrc": "6590:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6590:21:1"
															},
															"nativeSrc": "6590:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6590:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6631:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6631:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6642:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6642:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:1"
																		},
																		"nativeSrc": "6627:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6647:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6647:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:1"
																},
																"nativeSrc": "6620:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6620:30:1"
															},
															"nativeSrc": "6620:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6620:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6670:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6681:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6681:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6666:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6666:3:1"
																		},
																		"nativeSrc": "6666:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6666:18:1"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "6686:31:1",
																		"nodeType": "YulLiteral",
																		"src": "6686:31:1",
																		"type": "",
																		"value": "Exceeds max transaction limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6659:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:1"
																},
																"nativeSrc": "6659:59:1",
																"nodeType": "YulFunctionCall",
																"src": "6659:59:1"
															},
															"nativeSrc": "6659:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "6659:59:1"
														},
														{
															"nativeSrc": "6727:26:1",
															"nodeType": "YulAssignment",
															"src": "6727:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6739:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6735:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6735:3:1"
																},
																"nativeSrc": "6735:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6735:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6727:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6727:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6406:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6557:9:1",
														"nodeType": "YulTypedName",
														"src": "6557:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6571:4:1",
														"nodeType": "YulTypedName",
														"src": "6571:4:1",
														"type": ""
													}
												],
												"src": "6406:353:1"
											},
											{
												"body": {
													"nativeSrc": "6938:177:1",
													"nodeType": "YulBlock",
													"src": "6938:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6955:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6955:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:1"
																},
																"nativeSrc": "6948:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6948:21:1"
															},
															"nativeSrc": "6948:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6948:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6989:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7000:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7000:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:1"
																		},
																		"nativeSrc": "6985:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:1"
																},
																"nativeSrc": "6978:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6978:30:1"
															},
															"nativeSrc": "6978:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6978:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7028:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7039:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7039:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7024:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:1"
																		},
																		"nativeSrc": "7024:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:18:1"
																	},
																	{
																		"hexValue": "5461782065786365656473207472616e7366657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "7044:29:1",
																		"nodeType": "YulLiteral",
																		"src": "7044:29:1",
																		"type": "",
																		"value": "Tax exceeds transfer amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:1"
																},
																"nativeSrc": "7017:57:1",
																"nodeType": "YulFunctionCall",
																"src": "7017:57:1"
															},
															"nativeSrc": "7017:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "7017:57:1"
														},
														{
															"nativeSrc": "7083:26:1",
															"nodeType": "YulAssignment",
															"src": "7083:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7095:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7095:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7106:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7091:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7091:3:1"
																},
																"nativeSrc": "7091:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7091:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7083:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7083:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6764:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6915:9:1",
														"nodeType": "YulTypedName",
														"src": "6915:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6929:4:1",
														"nodeType": "YulTypedName",
														"src": "6929:4:1",
														"type": ""
													}
												],
												"src": "6764:351:1"
											},
											{
												"body": {
													"nativeSrc": "7322:212:1",
													"nodeType": "YulBlock",
													"src": "7322:212:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7339:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7339:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7350:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7350:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7332:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7332:6:1"
																},
																"nativeSrc": "7332:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7332:25:1"
															},
															"nativeSrc": "7332:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7332:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:1"
																		},
																		"nativeSrc": "7373:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7393:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7366:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:1"
																},
																"nativeSrc": "7366:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7366:30:1"
															},
															"nativeSrc": "7366:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7366:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7416:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7427:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7412:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:1"
																		},
																		"nativeSrc": "7412:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7432:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7405:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:1"
																},
																"nativeSrc": "7405:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7405:30:1"
															},
															"nativeSrc": "7405:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7405:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7455:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7466:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7451:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:1"
																		},
																		"nativeSrc": "7451:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:18:1"
																	},
																	{
																		"hexValue": "456e636f75726167656d656e742046756e64",
																		"kind": "string",
																		"nativeSrc": "7471:20:1",
																		"nodeType": "YulLiteral",
																		"src": "7471:20:1",
																		"type": "",
																		"value": "Encouragement Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7444:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:1"
																},
																"nativeSrc": "7444:48:1",
																"nodeType": "YulFunctionCall",
																"src": "7444:48:1"
															},
															"nativeSrc": "7444:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "7444:48:1"
														},
														{
															"nativeSrc": "7501:27:1",
															"nodeType": "YulAssignment",
															"src": "7501:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7513:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7513:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7524:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7509:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7509:3:1"
																},
																"nativeSrc": "7509:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7509:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7501:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7501:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7120:414:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7291:9:1",
														"nodeType": "YulTypedName",
														"src": "7291:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7302:6:1",
														"nodeType": "YulTypedName",
														"src": "7302:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7313:4:1",
														"nodeType": "YulTypedName",
														"src": "7313:4:1",
														"type": ""
													}
												],
												"src": "7120:414:1"
											},
											{
												"body": {
													"nativeSrc": "7741:208:1",
													"nodeType": "YulBlock",
													"src": "7741:208:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7758:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7758:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7769:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7751:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:1"
																},
																"nativeSrc": "7751:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7751:25:1"
															},
															"nativeSrc": "7751:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7751:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7796:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7807:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7792:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:1"
																		},
																		"nativeSrc": "7792:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7812:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7785:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:1"
																},
																"nativeSrc": "7785:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7785:30:1"
															},
															"nativeSrc": "7785:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7785:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7835:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7846:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7846:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7831:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7831:3:1"
																		},
																		"nativeSrc": "7831:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7831:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7851:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7824:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:1"
																},
																"nativeSrc": "7824:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:1"
															},
															"nativeSrc": "7824:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7824:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7874:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7874:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7885:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7885:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:1"
																		},
																		"nativeSrc": "7870:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:18:1"
																	},
																	{
																		"hexValue": "456d657267656e63792046756e64",
																		"kind": "string",
																		"nativeSrc": "7890:16:1",
																		"nodeType": "YulLiteral",
																		"src": "7890:16:1",
																		"type": "",
																		"value": "Emergency Fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7863:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:1"
																},
																"nativeSrc": "7863:44:1",
																"nodeType": "YulFunctionCall",
																"src": "7863:44:1"
															},
															"nativeSrc": "7863:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "7863:44:1"
														},
														{
															"nativeSrc": "7916:27:1",
															"nodeType": "YulAssignment",
															"src": "7916:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7928:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7928:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7939:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7924:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7924:3:1"
																},
																"nativeSrc": "7924:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7924:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7916:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7916:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7539:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7710:9:1",
														"nodeType": "YulTypedName",
														"src": "7710:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7721:6:1",
														"nodeType": "YulTypedName",
														"src": "7721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7732:4:1",
														"nodeType": "YulTypedName",
														"src": "7732:4:1",
														"type": ""
													}
												],
												"src": "7539:410:1"
											},
											{
												"body": {
													"nativeSrc": "8156:202:1",
													"nodeType": "YulBlock",
													"src": "8156:202:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8184:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8184:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:1"
																},
																"nativeSrc": "8166:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8166:25:1"
															},
															"nativeSrc": "8166:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8166:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8211:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8222:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8222:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8207:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:1"
																		},
																		"nativeSrc": "8207:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8227:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8227:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8200:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:1"
																},
																"nativeSrc": "8200:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8200:30:1"
															},
															"nativeSrc": "8200:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8200:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8250:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8250:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8261:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8261:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8246:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:1"
																		},
																		"nativeSrc": "8246:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8246:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8266:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:1"
																},
																"nativeSrc": "8239:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8239:29:1"
															},
															"nativeSrc": "8239:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "8239:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8288:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8288:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8299:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8299:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8284:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8284:3:1"
																		},
																		"nativeSrc": "8284:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8284:18:1"
																	},
																	{
																		"hexValue": "4d61726b6574696e67",
																		"kind": "string",
																		"nativeSrc": "8304:11:1",
																		"nodeType": "YulLiteral",
																		"src": "8304:11:1",
																		"type": "",
																		"value": "Marketing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8277:6:1"
																},
																"nativeSrc": "8277:39:1",
																"nodeType": "YulFunctionCall",
																"src": "8277:39:1"
															},
															"nativeSrc": "8277:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "8277:39:1"
														},
														{
															"nativeSrc": "8325:27:1",
															"nodeType": "YulAssignment",
															"src": "8325:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8337:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8337:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8348:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8348:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:1"
																},
																"nativeSrc": "8333:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8333:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8325:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8325:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7954:404:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8125:9:1",
														"nodeType": "YulTypedName",
														"src": "8125:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8136:6:1",
														"nodeType": "YulTypedName",
														"src": "8136:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8147:4:1",
														"nodeType": "YulTypedName",
														"src": "8147:4:1",
														"type": ""
													}
												],
												"src": "7954:404:1"
											},
											{
												"body": {
													"nativeSrc": "8565:200:1",
													"nodeType": "YulBlock",
													"src": "8565:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8582:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8593:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8593:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8575:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:1"
																},
																"nativeSrc": "8575:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8575:25:1"
															},
															"nativeSrc": "8575:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8575:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8620:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8620:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8631:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8631:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8616:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:1"
																		},
																		"nativeSrc": "8616:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8616:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8636:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8636:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8609:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8609:6:1"
																},
																"nativeSrc": "8609:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8609:30:1"
															},
															"nativeSrc": "8609:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8609:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8659:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8670:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8670:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:1"
																		},
																		"nativeSrc": "8655:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8675:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8675:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:1"
																},
																"nativeSrc": "8648:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8648:29:1"
															},
															"nativeSrc": "8648:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "8648:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8697:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8697:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8708:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8708:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8693:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8693:3:1"
																		},
																		"nativeSrc": "8693:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8693:18:1"
																	},
																	{
																		"hexValue": "5374616b696e67",
																		"kind": "string",
																		"nativeSrc": "8713:9:1",
																		"nodeType": "YulLiteral",
																		"src": "8713:9:1",
																		"type": "",
																		"value": "Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:1"
																},
																"nativeSrc": "8686:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8686:37:1"
															},
															"nativeSrc": "8686:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8686:37:1"
														},
														{
															"nativeSrc": "8732:27:1",
															"nodeType": "YulAssignment",
															"src": "8732:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8744:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8744:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8755:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8740:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8740:3:1"
																},
																"nativeSrc": "8740:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8740:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8732:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8732:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8363:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8534:9:1",
														"nodeType": "YulTypedName",
														"src": "8534:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8545:6:1",
														"nodeType": "YulTypedName",
														"src": "8545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8556:4:1",
														"nodeType": "YulTypedName",
														"src": "8556:4:1",
														"type": ""
													}
												],
												"src": "8363:402:1"
											},
											{
												"body": {
													"nativeSrc": "8972:208:1",
													"nodeType": "YulBlock",
													"src": "8972:208:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8989:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8989:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9000:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9000:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8982:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8982:6:1"
																},
																"nativeSrc": "8982:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8982:25:1"
															},
															"nativeSrc": "8982:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8982:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9027:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9038:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:1"
																		},
																		"nativeSrc": "9023:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9043:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9016:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:1"
																},
																"nativeSrc": "9016:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9016:30:1"
															},
															"nativeSrc": "9016:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9016:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9066:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9066:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9077:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9077:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9062:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:1"
																		},
																		"nativeSrc": "9062:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9062:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9082:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9082:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:1"
																},
																"nativeSrc": "9055:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9055:30:1"
															},
															"nativeSrc": "9055:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9105:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9105:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9116:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9116:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9101:3:1"
																		},
																		"nativeSrc": "9101:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9101:18:1"
																	},
																	{
																		"hexValue": "4c697175696469747920506f6f6c",
																		"kind": "string",
																		"nativeSrc": "9121:16:1",
																		"nodeType": "YulLiteral",
																		"src": "9121:16:1",
																		"type": "",
																		"value": "Liquidity Pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9094:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9094:6:1"
																},
																"nativeSrc": "9094:44:1",
																"nodeType": "YulFunctionCall",
																"src": "9094:44:1"
															},
															"nativeSrc": "9094:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "9094:44:1"
														},
														{
															"nativeSrc": "9147:27:1",
															"nodeType": "YulAssignment",
															"src": "9147:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9159:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9159:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9170:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9170:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9155:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9155:3:1"
																},
																"nativeSrc": "9155:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9155:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9147:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9147:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8770:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8941:9:1",
														"nodeType": "YulTypedName",
														"src": "8941:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8952:6:1",
														"nodeType": "YulTypedName",
														"src": "8952:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8963:4:1",
														"nodeType": "YulTypedName",
														"src": "8963:4:1",
														"type": ""
													}
												],
												"src": "8770:410:1"
											},
											{
												"body": {
													"nativeSrc": "9359:170:1",
													"nodeType": "YulBlock",
													"src": "9359:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9376:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9376:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9387:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9387:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:1"
																},
																"nativeSrc": "9369:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9369:21:1"
															},
															"nativeSrc": "9369:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9369:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9410:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9410:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9421:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9421:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9406:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9406:3:1"
																		},
																		"nativeSrc": "9406:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9406:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9426:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9399:6:1"
																},
																"nativeSrc": "9399:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9399:30:1"
															},
															"nativeSrc": "9399:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9399:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9449:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9449:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9460:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9460:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9445:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9445:3:1"
																		},
																		"nativeSrc": "9445:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9445:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9465:22:1",
																		"nodeType": "YulLiteral",
																		"src": "9465:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9438:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9438:6:1"
																},
																"nativeSrc": "9438:50:1",
																"nodeType": "YulFunctionCall",
																"src": "9438:50:1"
															},
															"nativeSrc": "9438:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "9438:50:1"
														},
														{
															"nativeSrc": "9497:26:1",
															"nodeType": "YulAssignment",
															"src": "9497:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9509:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9509:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9520:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:1"
																},
																"nativeSrc": "9505:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9505:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9497:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9185:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9336:9:1",
														"nodeType": "YulTypedName",
														"src": "9336:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9350:4:1",
														"nodeType": "YulTypedName",
														"src": "9350:4:1",
														"type": ""
													}
												],
												"src": "9185:344:1"
											},
											{
												"body": {
													"nativeSrc": "9691:188:1",
													"nodeType": "YulBlock",
													"src": "9691:188:1",
													"statements": [
														{
															"nativeSrc": "9701:26:1",
															"nodeType": "YulAssignment",
															"src": "9701:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9713:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9713:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9724:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9709:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:1"
																},
																"nativeSrc": "9709:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9709:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9701:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9743:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9758:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9774:3:1",
																								"nodeType": "YulLiteral",
																								"src": "9774:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9779:1:1",
																								"nodeType": "YulLiteral",
																								"src": "9779:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9770:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9770:3:1"
																						},
																						"nativeSrc": "9770:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9770:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9783:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9783:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9766:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:1"
																				},
																				"nativeSrc": "9766:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9766:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9754:3:1"
																		},
																		"nativeSrc": "9754:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9754:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9736:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9736:6:1"
																},
																"nativeSrc": "9736:51:1",
																"nodeType": "YulFunctionCall",
																"src": "9736:51:1"
															},
															"nativeSrc": "9736:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "9736:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9807:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9803:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:1"
																		},
																		"nativeSrc": "9803:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9823:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9823:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9796:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:1"
																},
																"nativeSrc": "9796:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9796:34:1"
															},
															"nativeSrc": "9796:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9796:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9850:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9850:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9861:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9861:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9846:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9846:3:1"
																		},
																		"nativeSrc": "9846:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9846:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9866:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9839:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9839:6:1"
																},
																"nativeSrc": "9839:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9839:34:1"
															},
															"nativeSrc": "9839:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9839:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9534:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9644:9:1",
														"nodeType": "YulTypedName",
														"src": "9644:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9655:6:1",
														"nodeType": "YulTypedName",
														"src": "9655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9663:6:1",
														"nodeType": "YulTypedName",
														"src": "9663:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9671:6:1",
														"nodeType": "YulTypedName",
														"src": "9671:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9682:4:1",
														"nodeType": "YulTypedName",
														"src": "9682:4:1",
														"type": ""
													}
												],
												"src": "9534:345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Tax too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No LP funds available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"New pair address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds max wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Exceeds max transaction limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Tax exceeds transfer amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 18)\n        mstore(add(headStart, 96), \"Encouragement Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Emergency Fund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 9)\n        mstore(add(headStart, 96), \"Marketing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 7)\n        mstore(add(headStart, 96), \"Staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Liquidity Pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x753CAFC3 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC12B7C4E GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDF7787A4 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xF3B2DB3F EQ PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC12B7C4E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC859378 EQ PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xBEA9EA62 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x753CAFC3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x52A6A9EC GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x52A6A9EC EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1006EE0C GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1006EE0C EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x256 PUSH11 0x1A784379D99DB42000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x256 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x22D JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x250 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x62F JUMP JUMPDEST PUSH2 0x22D PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4BA DUP2 DUP6 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x84E JUMP JUMPDEST PUSH1 0xF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x14 DUP2 GT ISZERO JUMPDEST PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x57B DUP5 DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x586 DUP5 DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x5C0 SWAP2 DUP7 SWAP2 PUSH2 0x5BB SWAP1 DUP7 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xD1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH0 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x627 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DA PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH0 PUSH2 0x647 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x652 CALLER DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0x84E JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F204C502066756E647320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x6DE ADDRESS PUSH2 0x6D8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xBBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x71D PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577207061697220616464726573732063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344 SWAP1 PUSH1 0x20 ADD PUSH2 0x70A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D9 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x849 JUMPI PUSH1 0x64 PUSH2 0x8F8 PUSH11 0x1A784379D99DB42000000 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 PUSH2 0x921 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x992 PUSH11 0x1A784379D99DB42000000 PUSH1 0x5 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xA21 JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0xD SLOAD DUP4 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461782065786365656473207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP3 DUP5 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAA8 DUP5 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAC2 DUP6 PUSH1 0x4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xADC DUP7 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xAF6 DUP8 PUSH1 0x2 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC PUSH2 0xB10 DUP9 PUSH1 0x1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP11 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x115B98DBDD5C9859D95B595B9D08119D5B99 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SLOAD PUSH2 0xBA4 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x115B595C99D95B98DE48119D5B99 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0xC08 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x4D61726B6574696E67 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xA SLOAD PUSH2 0xC67 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x5374616B696E67 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xCB7 DUP11 ADDRESS DUP8 PUSH2 0xDFA JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x129E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0xCFB SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x131A5C5D5A591A5D1E48141BDBDB PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD0E DUP11 DUP11 DUP9 PUSH2 0xDFA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD22 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD4F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x100D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1029 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x114C DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP PUSH2 0x115A PUSH1 0x20 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1184 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11DE DUP4 PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC PUSH1 0x20 DUP5 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1209 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1285 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x122D JUMP INVALID PUSH15 0x232B0ACF46272DACF889AF67675747 PUSH22 0xA324B133D42B3B8CFFA9CD13159984A2646970667358 0x22 SLT KECCAK256 TSTORE PUSH32 0x440AAFE1BA8988FE8525874D7A3E000E88547DA5F40029DDC05E024349CB6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "30617:4535:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31012:28;;;;;-1:-1:-1;;;;;31012:28:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;31012:28:0;;;;;;;;12648:89;;;:::i;:::-;;;;;;;:::i;14867:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:1;;1286:22;1268:41;;1256:2;1241:18;14867:186:0;1128:187:1;34764:248:0;;;;;;:::i;:::-;;:::i;:::-;;13718:97;13796:12;;13718:97;;;1817:25:1;;;1805:2;1790:18;13718:97:0;1671:177:1;32224:336:0;;;;;;:::i;:::-;;:::i;30687:59::-;;30728:18;30687:59;;13576:82;;;13649:2;2374:36:1;;2362:2;2347:18;13576:82:0;2232:184:1;35085:65:0;;;:::i;31079:26::-;;;;;;31145:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;30904:32;;;;;;;;-1:-1:-1;;;;;30904:32:0;;;29612:84;29682:7;;;;29612:84;;13873:116;;;;;;:::i;:::-;-1:-1:-1;;;;;13964:18:0;13938:7;13964:18;;;;;;;;;;;;13873:116;24033:101;;;:::i;34391:143::-;;;;;;:::i;:::-;;:::i;30976:30::-;;;;;-1:-1:-1;;;;;30976:30:0;;;35018:61;;;:::i;23378:85::-;23450:6;;-1:-1:-1;;;;;23450:6:0;23378:85;;12850:93;;;:::i;31972:246::-;;;;;;:::i;:::-;;:::i;34127:258::-;;;:::i;34540:218::-;;;;;;:::i;:::-;;:::i;31046:26::-;;;;;-1:-1:-1;;;;;31046:26:0;;;31111:27;;;;;;30942:28;;;;;-1:-1:-1;;;;;30942:28:0;;;14420:140;;;;;;:::i;:::-;-1:-1:-1;;;;;14526:18:0;;;14500:7;14526:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14420:140;30752:63;;;:::i;24283:215::-;;;;;;:::i;:::-;;:::i;30827:61::-;;;:::i;12648:89::-;12693:13;12725:5;12718:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12648:89;:::o;14867:186::-;14940:4;4256:10;14994:31;4256:10;15010:7;15019:5;14994:8;:31::i;:::-;15042:4;15035:11;;;14867:186;;;;;:::o;34764:248::-;23271:13;:11;:13::i;:::-;34868:2:::1;34857:7;:13;;:31;;;;;34886:2;34874:8;:14;;34857:31;34849:56;;;::::0;-1:-1:-1;;;34849:56:0;;3816:2:1;34849:56:0::1;::::0;::::1;3798:21:1::0;3855:2;3835:18;;;3828:30;-1:-1:-1;;;3874:18:1;;;3867:42;3926:18;;34849:56:0::1;;;;;;;;;34915:6;:16:::0;;;34941:7:::1;:18:::0;;;34974:31:::1;::::0;;4129:25:1;;;4185:2;4170:18;;4163:34;;;34974:31:0::1;::::0;4102:18:1;34974:31:0::1;;;;;;;34764:248:::0;;:::o;32224:336::-;32336:4;29236:19;:17;:19::i;:::-;32352:47:::1;32373:6;32381:9;32392:6;32352:20;:47::i;:::-;32409:45;32428:6;32436:9;32447:6;32409:18;:45::i;:::-;-1:-1:-1::0;;;;;14526:18:0;;14500:7;14526:18;;;:11;:18;;;;;;;;32481:10:::1;14526:27:::0;;;;;;;;;32464:68:::1;::::0;14526:18;;32493:38:::1;::::0;32525:6;;32493:38:::1;:::i;:::-;32464:8;:68::i;:::-;-1:-1:-1::0;32549:4:0::1;32224:336:::0;;;;;:::o;35085:65::-;23271:13;:11;:13::i;:::-;35133:10:::1;:8;:10::i;:::-;35085:65::o:0;24033:101::-;23271:13;:11;:13::i;:::-;24097:30:::1;24124:1;24097:18;:30::i;34391:143::-:0;23271:13;:11;:13::i;:::-;-1:-1:-1;;;;;34489:27:0;;;::::1;;::::0;;;:18:::1;:27;::::0;;;;:38;;-1:-1:-1;;34489:38:0::1;::::0;::::1;;::::0;;;::::1;::::0;;34391:143::o;35018:61::-;23271:13;:11;:13::i;:::-;35064:8:::1;:6;:8::i;12850:93::-:0;12897:13;12929:7;12922:14;;;;;:::i;31972:246::-;32064:4;29236:19;:17;:19::i;:::-;32080:51:::1;32101:10;32113:9;32124:6;32080:20;:51::i;:::-;32141:49;32160:10;32172:9;32183:6;32141:18;:49::i;:::-;-1:-1:-1::0;32207:4:0::1;31972:246:::0;;;;:::o;34127:258::-;23271:13;:11;:13::i;:::-;34219:4:::1;34183:15;13964:18:::0;;;;;;;;;;;34243:11;34235:45:::1;;;::::0;-1:-1:-1;;;34235:45:0;;4675:2:1;34235:45:0::1;::::0;::::1;4657:21:1::0;4714:2;4694:18;;;4687:30;-1:-1:-1;;;4733:18:1;;;4726:51;4794:18;;34235:45:0::1;4473:345:1::0;34235:45:0::1;34290:48;34314:4;34321:7;23450:6:::0;;-1:-1:-1;;;;;23450:6:0;;23378:85;34321:7:::1;34330;34290:15;:48::i;:::-;34353:25;::::0;1817::1;;;34353::0::1;::::0;1805:2:1;1790:18;34353:25:0::1;;;;;;;;34173:212;34127:258::o:0;34540:218::-;23271:13;:11;:13::i;:::-;-1:-1:-1;;;;;34621:21:0;::::1;34613:65;;;::::0;-1:-1:-1;;;34613:65:0;;5025:2:1;34613:65:0::1;::::0;::::1;5007:21:1::0;5064:2;5044:18;;;5037:30;5103:33;5083:18;;;5076:61;5154:18;;34613:65:0::1;4823:355:1::0;34613:65:0::1;34688:11;:21:::0;;-1:-1:-1;;;;;;34688:21:0::1;-1:-1:-1::0;;;;;34688:21:0;::::1;::::0;;::::1;::::0;;;34724:27:::1;::::0;160:51:1;;;34724:27:0::1;::::0;148:2:1;133:18;34724:27:0::1;14:203:1::0;30752:63:0;30812:3;30790:18;30728;30807:1;30790:18;:::i;:::-;30789:26;;;;:::i;:::-;30752:63;:::o;24283:215::-;23271:13;:11;:13::i;:::-;-1:-1:-1;;;;;24367:22:0;::::1;24363:91;;24412:31;::::0;-1:-1:-1;;;24412:31:0;;24440:1:::1;24412:31;::::0;::::1;160:51:1::0;133:18;;24412:31:0::1;14:203:1::0;24363:91:0::1;24463:28;24482:8;24463:18;:28::i;:::-;24283:215:::0;:::o;30827:61::-;30883:5;30861:18;30728;30878:1;30861:18;:::i;19595:128::-;19679:37;19688:5;19695:7;19704:5;19711:4;19679:8;:37::i;:::-;19595:128;;;:::o;23536:162::-;23450:6;;-1:-1:-1;;;;;23450:6:0;4256:10;23595:23;23591:101;;23641:40;;-1:-1:-1;;;23641:40:0;;4256:10;23641:40;;;160:51:1;133:18;;23641:40:0;14:203:1;29764:106:0;29682:7;;;;29833:9;29825:38;;;;-1:-1:-1;;;29825:38:0;;5780:2:1;29825:38:0;;;5762:21:1;5819:2;5799:18;;;5792:30;-1:-1:-1;;;5838:18:1;;;5831:46;5894:18;;29825:38:0;5578:340:1;32566:321:0;-1:-1:-1;;;;;32676:26:0;;;;;;:18;:26;;;;;;;;32671:210;;30812:3;30790:18;30728;30807:1;30790:18;:::i;:::-;30789:26;;;;:::i;:::-;32749:6;32726:20;32736:9;-1:-1:-1;;;;;13964:18:0;13938:7;13964:18;;;;;;;;;;;;13873:116;32726:20;:29;;;;:::i;:::-;:43;;32718:80;;;;-1:-1:-1;;;32718:80:0;;6255:2:1;32718:80:0;;;6237:21:1;6294:2;6274:18;;;6267:30;6333:26;6313:18;;;6306:54;6377:18;;32718:80:0;6053:348:1;32718:80:0;30883:5;30861:18;30728;30878:1;30861:18;:::i;:::-;30860:28;;;;:::i;:::-;32820:6;:16;;32812:58;;;;-1:-1:-1;;;32812:58:0;;6608:2:1;32812:58:0;;;6590:21:1;6647:2;6627:18;;;6620:30;6686:31;6666:18;;;6659:59;6735:18;;32812:58:0;6406:353:1;32893:1228:0;33019:11;;32991;;-1:-1:-1;;;;;33006:24:0;;;33019:11;;33006:24;33005:79;;33081:3;33071:6;;33062;:15;;;;:::i;:::-;33061:23;;;;:::i;:::-;33005:79;;;33055:3;33044:7;;33035:6;:16;;;;:::i;:::-;33034:24;;;;:::i;:::-;32991:93;;33112:3;33102:6;:13;;33094:53;;;;-1:-1:-1;;;33094:53:0;;6966:2:1;33094:53:0;;;6948:21:1;7005:2;6985:18;;;6978:30;7044:29;7024:18;;;7017:57;7091:18;;33094:53:0;6764:351:1;33094:53:0;33158:17;33178:12;33187:3;33178:6;:12;:::i;:::-;33158:32;-1:-1:-1;33200:15:0;33230:2;33219:7;:3;33225:1;33219:7;:::i;:::-;33218:14;;;;:::i;:::-;33200:32;-1:-1:-1;33242:26:0;33283:2;33272:7;:3;33278:1;33272:7;:::i;:::-;33271:14;;;;:::i;:::-;33242:43;-1:-1:-1;33295:22:0;33332:2;33321:7;:3;33327:1;33321:7;:::i;:::-;33320:14;;;;:::i;:::-;33295:39;-1:-1:-1;33344:22:0;33381:2;33370:7;:3;33376:1;33370:7;:::i;:::-;33369:14;;;;:::i;:::-;33344:39;-1:-1:-1;33393:20:0;33428:2;33417:7;:3;33423:1;33417:7;:::i;:::-;33416:14;;;;:::i;:::-;33393:37;;33441:62;33457:6;33465:17;;;;;;;;;-1:-1:-1;;;;;33465:17:0;33484:18;33441:15;:62::i;:::-;-1:-1:-1;;;;;;;;;;;33533:18:0;33518:56;;;;7332:25:1;;7393:2;7388;7373:18;;7366:30;;;7432:2;7412:18;;;7405:30;-1:-1:-1;;;7466:2:1;7451:18;;7444:48;7524:3;7509:19;;7120:414;33518:56:0;;;;;;;;33609:13;;33585:54;;33601:6;;-1:-1:-1;;;;;33609:13:0;33624:14;33585:15;:54::i;:::-;-1:-1:-1;;;;;;;;;;;33669:14:0;33654:48;;;;7751:25:1;;7812:2;7807;7792:18;;7785:30;;;7851:2;7831:18;;;7824:30;-1:-1:-1;;;7885:2:1;7870:18;;7863:44;7939:3;7924:19;;7539:410;33654:48:0;;;;;;;;33737:15;;33713:56;;33729:6;;-1:-1:-1;;;;;33737:15:0;33754:14;33713:15;:56::i;:::-;-1:-1:-1;;;;;;;;;;;33799:14:0;33784:43;;;;8166:25:1;;8227:2;8222;8207:18;;8200:30;;;8266:1;8246:18;;;8239:29;-1:-1:-1;;;8299:2:1;8284:18;;8277:39;8348:3;8333:19;;7954:404;33784:43:0;;;;;;;;33862:13;;33838:52;;33854:6;;-1:-1:-1;;;;;33862:13:0;33877:12;33838:15;:52::i;:::-;-1:-1:-1;;;;;;;;;;;33920:12:0;33905:39;;;;8575:25:1;;8636:2;8631;8616:18;;8609:30;;;8675:1;8655:18;;;8648:29;-1:-1:-1;;;8708:2:1;8693:18;;8686:37;8755:3;8740:19;;8363:402;33905:39:0;;;;;;;;33955:47;33971:6;33987:4;33994:7;33955:15;:47::i;:::-;-1:-1:-1;;;;;;;;;;;34032:7:0;34017:41;;;;8982:25:1;;9043:2;9038;9023:18;;9016:30;;;9082:2;9062:18;;;9055:30;-1:-1:-1;;;9116:2:1;9101:18;;9094:44;9170:3;9155:19;;8770:410;34017:41:0;;;;;;;;34069:45;34085:6;34093:9;34104;34069:15;:45::i;:::-;32981:1140;;;;;;;32893:1228;;;:::o;30430:117::-;29483:16;:14;:16::i;:::-;30488:7:::1;:15:::0;;-1:-1:-1;;30488:15:0::1;::::0;;30518:22:::1;4256:10:::0;30527:12:::1;30518:22;::::0;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;30518:22:0::1;;;;;;;30430:117::o:0;24652:187::-;24744:6;;;-1:-1:-1;;;;;24760:17:0;;;-1:-1:-1;;;;;;24760:17:0;;;;;;;24792:40;;24744:6;;;24760:17;24744:6;;24792:40;;24725:16;;24792:40;24715:124;24652:187;:::o;30183:115::-;29236:19;:17;:19::i;:::-;30242:7:::1;:14:::0;;-1:-1:-1;;30242:14:0::1;30252:4;30242:14;::::0;;30271:20:::1;30278:12;4256:10:::0;;4177:96;16262:300;-1:-1:-1;;;;;16345:18:0;;16341:86;;16386:30;;-1:-1:-1;;;16386:30:0;;16413:1;16386:30;;;160:51:1;133:18;;16386:30:0;14:203:1;16341:86:0;-1:-1:-1;;;;;16440:16:0;;16436:86;;16479:32;;-1:-1:-1;;;16479:32:0;;16508:1;16479:32;;;160:51:1;133:18;;16479:32:0;14:203:1;16436:86:0;16531:24;16539:4;16545:2;16549:5;16531:7;:24::i;20570:432::-;-1:-1:-1;;;;;20682:19:0;;20678:89;;20724:32;;-1:-1:-1;;;20724:32:0;;20753:1;20724:32;;;160:51:1;133:18;;20724:32:0;14:203:1;20678:89:0;-1:-1:-1;;;;;20780:21:0;;20776:90;;20824:31;;-1:-1:-1;;;20824:31:0;;20852:1;20824:31;;;160:51:1;133:18;;20824:31:0;14:203:1;20776:90:0;-1:-1:-1;;;;;20875:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20920:76;;;;20970:7;-1:-1:-1;;;;;20954:31:0;20963:5;-1:-1:-1;;;;;20954:31:0;;20979:5;20954:31;;;;1817:25:1;;1805:2;1790:18;;1671:177;20954:31:0;;;;;;;;20920:76;20570:432;;;;:::o;29942:106::-;29682:7;;;;30000:41;;;;-1:-1:-1;;;30000:41:0;;9387:2:1;30000:41:0;;;9369:21:1;9426:2;9406:18;;;9399:30;-1:-1:-1;;;9445:18:1;;;9438:50;9505:18;;30000:41:0;9185:344:1;16877:1107:0;-1:-1:-1;;;;;16966:18:0;;16962:540;;17118:5;17102:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16962:540:0;;-1:-1:-1;16962:540:0;;-1:-1:-1;;;;;17176:15:0;;17154:19;17176:15;;;;;;;;;;;17209:19;;;17205:115;;;17255:50;;-1:-1:-1;;;17255:50:0;;-1:-1:-1;;;;;9754:32:1;;17255:50:0;;;9736:51:1;9803:18;;;9796:34;;;9846:18;;;9839:34;;;9709:18;;17255:50:0;9534:345:1;17205:115:0;-1:-1:-1;;;;;17440:15:0;;:9;:15;;;;;;;;;;17458:19;;;;17440:37;;16962:540;-1:-1:-1;;;;;17516:16:0;;17512:425;;17679:12;:21;;;;;;;17512:425;;;-1:-1:-1;;;;;17890:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17512:425;17967:2;-1:-1:-1;;;;;17952:25:0;17961:4;-1:-1:-1;;;;;17952:25:0;;17971:5;17952:25;;;;1817::1;;1805:2;1790:18;;1671:177;17952:25:0;;;;;;;;16877:1107;;;:::o;222:418:1:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:1;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:1:o;1320:346::-;1388:6;1396;1449:2;1437:9;1428:7;1424:23;1420:32;1417:52;;;1465:1;1462;1455:12;1417:52;-1:-1:-1;;1510:23:1;;;1630:2;1615:18;;;1602:32;;-1:-1:-1;1320:346:1:o;1853:374::-;1930:6;1938;1946;1999:2;1987:9;1978:7;1974:23;1970:32;1967:52;;;2015:1;2012;2005:12;1967:52;2038:29;2057:9;2038:29;:::i;:::-;2028:39;;2086:38;2120:2;2109:9;2105:18;2086:38;:::i;:::-;1853:374;;2076:48;;-1:-1:-1;;;2193:2:1;2178:18;;;;2165:32;;1853:374::o;2421:186::-;2480:6;2533:2;2521:9;2512:7;2508:23;2504:32;2501:52;;;2549:1;2546;2539:12;2501:52;2572:29;2591:9;2572:29;:::i;:::-;2562:39;2421:186;-1:-1:-1;;;2421:186:1:o;2612:347::-;2677:6;2685;2738:2;2726:9;2717:7;2713:23;2709:32;2706:52;;;2754:1;2751;2744:12;2706:52;2777:29;2796:9;2777:29;:::i;:::-;2767:39;;2856:2;2845:9;2841:18;2828:32;2903:5;2896:13;2889:21;2882:5;2879:32;2869:60;;2925:1;2922;2915:12;2869:60;2948:5;2938:15;;;2612:347;;;;;:::o;2964:260::-;3032:6;3040;3093:2;3081:9;3072:7;3068:23;3064:32;3061:52;;;3109:1;3106;3099:12;3061:52;3132:29;3151:9;3132:29;:::i;:::-;3122:39;;3180:38;3214:2;3203:9;3199:18;3180:38;:::i;:::-;3170:48;;2964:260;;;;;:::o;3229:380::-;3308:1;3304:12;;;;3351;;;3372:61;;3426:4;3418:6;3414:17;3404:27;;3372:61;3479:2;3471:6;3468:14;3448:18;3445:38;3442:161;;3525:10;3520:3;3516:20;3513:1;3506:31;3560:4;3557:1;3550:15;3588:4;3585:1;3578:15;3442:161;;3229:380;;;:::o;4208:127::-;4269:10;4264:3;4260:20;4257:1;4250:31;4300:4;4297:1;4290:15;4324:4;4321:1;4314:15;4340:128;4407:9;;;4428:11;;;4425:37;;;4442:18;;:::i;5183:168::-;5256:9;;;5287;;5304:15;;;5298:22;;5284:37;5274:71;;5325:18;;:::i;5356:217::-;5396:1;5422;5412:132;;5466:10;5461:3;5457:20;5454:1;5447:31;5501:4;5498:1;5491:15;5529:4;5526:1;5519:15;5412:132;-1:-1:-1;5558:9:1;;5356:217::o;5923:125::-;5988:9;;;6009:10;;;6006:36;;;6022:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "970200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "306",
								"MAX_TX()": "466",
								"MAX_WALLET()": "422",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24804",
								"balanceOf(address)": "2626",
								"buyTax()": "2384",
								"decimals()": "222",
								"emergencyFund()": "2436",
								"encouragementFund()": "2381",
								"isExcludedFromFees(address)": "2640",
								"marketingWallet()": "2393",
								"name()": "infinite",
								"owner()": "2364",
								"pause()": "infinite",
								"paused()": "2370",
								"renounceOwnership()": "infinite",
								"sellTax()": "2383",
								"stakingWallet()": "2372",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"uniswapPair()": "2392",
								"unpause()": "infinite",
								"updateExcludedAccountStatus(address,bool)": "26901",
								"updateTaxes(uint256,uint256)": "48068",
								"updateUniswapPair(address)": "27878",
								"withdrawLPFunds()": "58494"
							},
							"internal": {
								"_applyTransferLimits(address,address,uint256)": "infinite",
								"_transferWithTaxes(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31105,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 31079,
									"end": 31105,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 31079,
									"end": 31105,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31136,
									"end": 31138,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 31111,
									"end": 31138,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 31111,
									"end": 31138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31416,
									"end": 31966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31416,
									"end": 31966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31641,
									"end": 31651,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2C22A0A6902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5845414D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12470,
									"end": 12583,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12544,
									"end": 12549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12541,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12536,
									"end": 12549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12536,
									"end": 12549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12559,
									"end": 12566,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12559,
									"end": 12576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12569,
									"end": 12576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12559,
									"end": 12566,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12559,
									"end": 12576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12559,
									"end": 12576,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12559,
									"end": 12576,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12559,
									"end": 12576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23013,
									"end": 23039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23013,
									"end": 23039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23009,
									"end": 23104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23009,
									"end": 23104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23090,
									"end": 23091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23062,
									"end": 23093,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23009,
									"end": 23104,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23009,
									"end": 23104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23113,
									"end": 23145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23132,
									"end": 23144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23113,
									"end": 23131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23113,
									"end": 23145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23113,
									"end": 23145,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23113,
									"end": 23145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26591,
									"end": 26592,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26696,
									"end": 26703,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26696,
									"end": 26718,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28993,
									"end": 29000,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 28993,
									"end": 29008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28993,
									"end": 29008,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28993,
									"end": 29008,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31663,
									"end": 31701,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31724,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31711,
									"end": 31741,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31766,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31751,
									"end": 31785,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31808,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31795,
									"end": 31825,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31846,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31835,
									"end": 31868,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31879,
									"end": 31912,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 31885,
									"end": 31895,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 30728,
									"end": 30746,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1A784379D99DB42000000"
								},
								{
									"begin": 31879,
									"end": 31884,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 31879,
									"end": 31912,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31879,
									"end": 31912,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 31879,
									"end": 31912,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31941,
									"end": 31951,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 31922,
									"end": 31952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31952,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31922,
									"end": 31959,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31955,
									"end": 31959,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31922,
									"end": 31959,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31922,
									"end": 31959,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24652,
									"end": 24839,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 24652,
									"end": 24839,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24832,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24792,
									"end": 24832,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24760,
									"end": 24777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24744,
									"end": 24750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24832,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24792,
									"end": 24832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24741,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24725,
									"end": 24741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24792,
									"end": 24832,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24715,
									"end": 24839,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24652,
									"end": 24839,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24652,
									"end": 24839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18327,
									"end": 18535,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18327,
									"end": 18535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18397,
									"end": 18418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18397,
									"end": 18418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18393,
									"end": 18484,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18393,
									"end": 18484,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18470,
									"end": 18471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3589,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3511,
									"end": 3529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18441,
									"end": 18473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3392,
									"end": 3595,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18393,
									"end": 18484,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18393,
									"end": 18484,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18493,
									"end": 18528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18509,
									"end": 18510,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18513,
									"end": 18520,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18522,
									"end": 18527,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18493,
									"end": 18500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18493,
									"end": 18528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18493,
									"end": 18528,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18493,
									"end": 18528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18327,
									"end": 18535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18327,
									"end": 18535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18327,
									"end": 18535,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16877,
									"end": 17984,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16877,
									"end": 17984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16966,
									"end": 16984,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16966,
									"end": 16984,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17118,
									"end": 17123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17114,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17102,
									"end": 17114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17102,
									"end": 17123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17102,
									"end": 17123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17154,
									"end": 17173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17176,
									"end": 17191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17209,
									"end": 17228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17209,
									"end": 17228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17209,
									"end": 17228,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17205,
									"end": 17320,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17205,
									"end": 17320,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17205,
									"end": 17320,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4047,
									"end": 4079,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4029,
									"end": 4080,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4096,
									"end": 4114,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4123,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4139,
									"end": 4157,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4166,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4002,
									"end": 4020,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17255,
									"end": 17305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3827,
									"end": 4172,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17205,
									"end": 17320,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17205,
									"end": 17320,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17455,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17458,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17458,
									"end": 17477,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17458,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17458,
									"end": 17477,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16962,
									"end": 17502,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17516,
									"end": 17532,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17516,
									"end": 17532,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17691,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17679,
									"end": 17700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17903,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17890,
									"end": 17912,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17512,
									"end": 17937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17967,
									"end": 17969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17961,
									"end": 17965,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17971,
									"end": 17976,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4311,
									"end": 4313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4296,
									"end": 4314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 17977,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16877,
									"end": 17984,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16877,
									"end": 17984,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16877,
									"end": 17984,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16877,
									"end": 17984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 878,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 751,
									"end": 878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 812,
									"end": 822,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 810,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 824,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 962,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1084,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1068,
									"end": 1085,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1026,
									"end": 1087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1131,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1136,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1137,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1189,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1174,
									"end": 1177,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1170,
									"end": 1190,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1191,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1218,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1211,
									"end": 1212,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1204,
									"end": 1219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1247,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1257,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1498,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1499,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1537,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1522,
									"end": 1538,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1580,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1648,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1623,
									"end": 1650,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1670,
									"end": 1680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1687,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1709,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1664,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1755,
									"end": 1758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1751,
									"end": 1763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1748,
									"end": 1749,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1744,
									"end": 1764,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1765,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1765,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1833,
									"end": 1835,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1826,
									"end": 1831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1836,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1878,
									"end": 1894,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1860,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1815,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1485,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2088,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2218,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2230,
									"end": 2260,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2227,
									"end": 2283,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2263,
									"end": 2281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2382,
									"end": 2388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2374,
									"end": 2378,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2379,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2342,
									"end": 2380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2342,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2292,
									"end": 2389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2292,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2469,
									"end": 2471,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2458,
									"end": 2472,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2486,
									"end": 2487,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3191,
									"end": 3197,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3243,
									"end": 3262,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3237,
									"end": 3263,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3188,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2061,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2062,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2023,
									"end": 2063,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2076,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2077,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3371,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2451,
									"end": 3381,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2481,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2537,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2649,
									"end": 2656,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2647,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2657,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2751,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2710,
									"end": 2752,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2838,
									"end": 2842,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2843,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2791,
									"end": 2792,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2793,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2665,
									"end": 2677,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2635,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 2642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2885,
									"end": 2891,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2876,
									"end": 2883,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2873,
									"end": 2892,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2946,
									"end": 2965,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2940,
									"end": 2966,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3029,
									"end": 3030,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3039,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3021,
									"end": 3045,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3054,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3055,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2998,
									"end": 3056,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3057,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2870,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3101,
									"end": 3115,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3097,
									"end": 3119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3084,
									"end": 3120,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2088,
									"end": 3387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3696,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3733,
									"end": 3736,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3729,
									"end": 3749,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3719,
									"end": 3750,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3773,
									"end": 3777,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3763,
									"end": 3778,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3805,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3798,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3806,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3683,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3600,
									"end": 3822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 4177,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 35152,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d7f440aafe1ba8988fe8525874d7a3e000e88547da5f40029ddc05e024349cb64736f6c634300081a0033",
									".code": [
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "753CAFC3"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "C12B7C4E"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "DF7787A4"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "F3B2DB3F"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "C12B7C4E"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "C816841B"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "CC1776D3"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "CC859378"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "BEA9EA62"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "753CAFC3"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "75F0A874"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "52A6A9EC"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "52A6A9EC"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "4F7041A5"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "4FBEE193"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "1006EE0C"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "1006EE0C"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "6EE6AD8"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30617,
											"end": 35152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31012,
											"end": 31040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12648,
											"end": 12737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12648,
											"end": 12737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14867,
											"end": 15053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14867,
											"end": 15053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34764,
											"end": 35012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34764,
											"end": 35012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13796,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13796,
											"end": 13808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32224,
											"end": 32560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 32224,
											"end": 32560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30687,
											"end": 30746,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30687,
											"end": 30746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30687,
											"end": 30746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30728,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 30687,
											"end": 30746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30687,
											"end": 30746,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13576,
											"end": 13658,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13576,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13576,
											"end": 13658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13576,
											"end": 13658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13651,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2374,
											"end": 2410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13576,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2232,
											"end": 2416,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35085,
											"end": 35150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31079,
											"end": 31105,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31145,
											"end": 31195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31195,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30904,
											"end": 30936,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29696,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29612,
											"end": 29696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29612,
											"end": 29696,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13873,
											"end": 13989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 13945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 24033,
											"end": 24134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 34391,
											"end": 34534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 34391,
											"end": 34534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30976,
											"end": 31006,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 35018,
											"end": 35079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23378,
											"end": 23463,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23378,
											"end": 23463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23378,
											"end": 23463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23378,
											"end": 23463,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12850,
											"end": 12943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31972,
											"end": 32218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31972,
											"end": 32218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 34127,
											"end": 34385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 34540,
											"end": 34758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 34540,
											"end": 34758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31046,
											"end": 31072,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30942,
											"end": 30970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14420,
											"end": 14560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14560,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30752,
											"end": 30815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24283,
											"end": 24498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24283,
											"end": 24498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30827,
											"end": 30888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12693,
											"end": 12706,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12725,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12718,
											"end": 12730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12718,
											"end": 12730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15010,
											"end": 15017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14994,
											"end": 15025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15025,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 14994,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 15053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34868,
											"end": 34870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 34857,
											"end": 34864,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34870,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34874,
											"end": 34882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34874,
											"end": 34888,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34874,
											"end": 34888,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34857,
											"end": 34888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34849,
											"end": 34905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34849,
											"end": 34905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34849,
											"end": 34905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8C2F040E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34849,
											"end": 34905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34915,
											"end": 34931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34915,
											"end": 34931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34941,
											"end": 34948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 34941,
											"end": 34959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34941,
											"end": 34959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34941,
											"end": 34959,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34974,
											"end": 35005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "35D461DF023E70886AD5E68610133ECB7D637C2263453F6EA50DAF699CB31ED4"
										},
										{
											"begin": 34974,
											"end": 35005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35005,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 35012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32336,
											"end": 32340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29236,
											"end": 29255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32352,
											"end": 32399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32373,
											"end": 32379,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32390,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32392,
											"end": 32398,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32352,
											"end": 32372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32352,
											"end": 32399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32352,
											"end": 32399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32352,
											"end": 32399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32428,
											"end": 32434,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32436,
											"end": 32445,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32447,
											"end": 32453,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32409,
											"end": 32454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32409,
											"end": 32454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32481,
											"end": 32491,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 32464,
											"end": 32532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 32493,
											"end": 32531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32525,
											"end": 32531,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32525,
											"end": 32531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 32493,
											"end": 32531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 32493,
											"end": 32531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32464,
											"end": 32532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 32464,
											"end": 32532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32549,
											"end": 32553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32224,
											"end": 32560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35085,
											"end": 35150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35133,
											"end": 35143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35133,
											"end": 35141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35133,
											"end": 35143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35133,
											"end": 35143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35133,
											"end": 35143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35085,
											"end": 35150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 24033,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24097,
											"end": 24127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24124,
											"end": 24125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24097,
											"end": 24115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24097,
											"end": 24127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 34391,
											"end": 34534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 34489,
											"end": 34516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34489,
											"end": 34527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 35018,
											"end": 35079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35064,
											"end": 35072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35064,
											"end": 35070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35064,
											"end": 35072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12850,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12897,
											"end": 12910,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12929,
											"end": 12936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12922,
											"end": 12936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12922,
											"end": 12936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12922,
											"end": 12936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32064,
											"end": 32068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29236,
											"end": 29255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32080,
											"end": 32131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 32101,
											"end": 32111,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32113,
											"end": 32122,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32124,
											"end": 32130,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32080,
											"end": 32100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32080,
											"end": 32131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32080,
											"end": 32131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 32080,
											"end": 32131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32141,
											"end": 32190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32160,
											"end": 32170,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32172,
											"end": 32181,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32183,
											"end": 32189,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32141,
											"end": 32159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32141,
											"end": 32190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32141,
											"end": 32190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32141,
											"end": 32190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32207,
											"end": 32211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 32218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 34127,
											"end": 34385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34223,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34235,
											"end": 34280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34235,
											"end": 34280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34235,
											"end": 34280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34235,
											"end": 34280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F204C502066756E647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4473,
											"end": 4818,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34235,
											"end": 34280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34314,
											"end": 34318,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23378,
											"end": 23463,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 34321,
											"end": 34328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34330,
											"end": 34337,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 34290,
											"end": 34338,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34290,
											"end": 34338,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34290,
											"end": 34338,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34353,
											"end": 34378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "BBA45FF8BCB537FDEDCE576E22FC876A23312F65B5166C004136ECE621F3EA93"
										},
										{
											"begin": 34353,
											"end": 34378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34378,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 34173,
											"end": 34385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34127,
											"end": 34385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 34540,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34621,
											"end": 34642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34613,
											"end": 34678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34613,
											"end": 34678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34613,
											"end": 34678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "4E6577207061697220616464726573732063616E6E6F74206265207A65726F00"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4823,
											"end": 5178,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 34613,
											"end": 34678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34688,
											"end": 34709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34688,
											"end": 34709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34724,
											"end": 34751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34724,
											"end": 34751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD2689CB5E1CA91BAB290E22ADA24C52705073CF17BACB82133714FA84271344"
										},
										{
											"begin": 34724,
											"end": 34751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34724,
											"end": 34751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30812,
											"end": 30815,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30728,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 30807,
											"end": 30808,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30790,
											"end": 30808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30789,
											"end": 30815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30752,
											"end": 30815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30752,
											"end": 30815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 23271,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23271,
											"end": 23284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 23271,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24367,
											"end": 24389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24367,
											"end": 24389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 24454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24363,
											"end": 24454,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24412,
											"end": 24443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24412,
											"end": 24443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24412,
											"end": 24443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24412,
											"end": 24443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24440,
											"end": 24441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24412,
											"end": 24443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24412,
											"end": 24443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24412,
											"end": 24443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24363,
											"end": 24454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24363,
											"end": 24454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 24482,
											"end": 24490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24463,
											"end": 24491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24463,
											"end": 24491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 24463,
											"end": 24491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24283,
											"end": 24498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30827,
											"end": 30888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30883,
											"end": 30888,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30728,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 30878,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30861,
											"end": 30879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19595,
											"end": 19723,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19595,
											"end": 19723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19688,
											"end": 19693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19695,
											"end": 19702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19704,
											"end": 19709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19679,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19679,
											"end": 19716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19716,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19679,
											"end": 19716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19595,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19595,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19595,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19595,
											"end": 19723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23698,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23536,
											"end": 23698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23450,
											"end": 23456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23595,
											"end": 23618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23591,
											"end": 23692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 23591,
											"end": 23692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23641,
											"end": 23681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29764,
											"end": 29870,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29764,
											"end": 29870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5578,
											"end": 5918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32566,
											"end": 32887,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32566,
											"end": 32887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32694,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32676,
											"end": 32702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32671,
											"end": 32881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 32671,
											"end": 32881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30812,
											"end": 30815,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30728,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 30807,
											"end": 30808,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30790,
											"end": 30808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30790,
											"end": 30808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30789,
											"end": 30815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 30789,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32749,
											"end": 32755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 32736,
											"end": 32745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 13945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 32726,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 32726,
											"end": 32755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 32726,
											"end": 32755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32769,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6359,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D61782077616C6C6574206C696D69740000000000000000"
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6053,
											"end": 6401,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 32718,
											"end": 32798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30883,
											"end": 30888,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 30728,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 30878,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30861,
											"end": 30879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30860,
											"end": 30888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 30860,
											"end": 30888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32820,
											"end": 32826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32820,
											"end": 32836,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32820,
											"end": 32836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6608,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6717,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D6178207472616E73616374696F6E206C696D6974000000"
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32812,
											"end": 32870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6406,
											"end": 6759,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32893,
											"end": 34121,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32893,
											"end": 34121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33030,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33019,
											"end": 33030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32991,
											"end": 33002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32991,
											"end": 33002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33006,
											"end": 33030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33006,
											"end": 33030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33006,
											"end": 33030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33006,
											"end": 33030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33081,
											"end": 33084,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33071,
											"end": 33077,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33071,
											"end": 33077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33062,
											"end": 33077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33062,
											"end": 33077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33061,
											"end": 33084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33061,
											"end": 33084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33005,
											"end": 33084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33058,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33044,
											"end": 33051,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 33044,
											"end": 33051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33035,
											"end": 33051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33035,
											"end": 33051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33034,
											"end": 33058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33034,
											"end": 33058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32991,
											"end": 33084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32991,
											"end": 33084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33112,
											"end": 33115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 7008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7073,
											"name": "PUSH",
											"source": 1,
											"value": "5461782065786365656473207472616E7366657220616D6F756E740000000000"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6764,
											"end": 7115,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33094,
											"end": 33147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33158,
											"end": 33175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33178,
											"end": 33190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33187,
											"end": 33190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33178,
											"end": 33184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33178,
											"end": 33190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33178,
											"end": 33190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33178,
											"end": 33190,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33178,
											"end": 33190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33158,
											"end": 33190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33200,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33230,
											"end": 33232,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33219,
											"end": 33226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33219,
											"end": 33222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33225,
											"end": 33226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33219,
											"end": 33226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33219,
											"end": 33226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33226,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33219,
											"end": 33226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33218,
											"end": 33232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33218,
											"end": 33232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33200,
											"end": 33232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33242,
											"end": 33268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33283,
											"end": 33285,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33272,
											"end": 33279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33272,
											"end": 33275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33278,
											"end": 33279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33272,
											"end": 33279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33272,
											"end": 33279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33279,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33272,
											"end": 33279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33271,
											"end": 33285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33271,
											"end": 33285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33242,
											"end": 33285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33295,
											"end": 33317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33332,
											"end": 33334,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33321,
											"end": 33328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33321,
											"end": 33324,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33321,
											"end": 33328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33321,
											"end": 33328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33321,
											"end": 33328,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33321,
											"end": 33328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33320,
											"end": 33334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33320,
											"end": 33334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33295,
											"end": 33334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33344,
											"end": 33366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33381,
											"end": 33383,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33370,
											"end": 33377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33370,
											"end": 33373,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33376,
											"end": 33377,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33370,
											"end": 33377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33370,
											"end": 33377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33370,
											"end": 33377,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33370,
											"end": 33377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33369,
											"end": 33383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33369,
											"end": 33383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33344,
											"end": 33383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33393,
											"end": 33413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33428,
											"end": 33430,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33417,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33417,
											"end": 33420,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33423,
											"end": 33424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33417,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33417,
											"end": 33424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33417,
											"end": 33424,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33417,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 33416,
											"end": 33430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33416,
											"end": 33430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33393,
											"end": 33430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33393,
											"end": 33430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33457,
											"end": 33463,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33465,
											"end": 33482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33484,
											"end": 33502,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33441,
											"end": 33503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33503,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33441,
											"end": 33503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33533,
											"end": 33551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B98DBDD5C9859D95B595B9D08119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7527,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7534,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33518,
											"end": 33574,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33609,
											"end": 33622,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33609,
											"end": 33622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33585,
											"end": 33639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33601,
											"end": 33607,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33601,
											"end": 33607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33609,
											"end": 33622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33624,
											"end": 33638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33585,
											"end": 33639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33639,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 33585,
											"end": 33639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33669,
											"end": 33683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7853,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115B595C99D95B98DE48119D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33702,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33737,
											"end": 33752,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33737,
											"end": 33752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 33713,
											"end": 33769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33729,
											"end": 33735,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33729,
											"end": 33735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33737,
											"end": 33752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33713,
											"end": 33769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33769,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 33713,
											"end": 33769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33799,
											"end": 33813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8227,
											"end": 8229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D61726B6574696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8351,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8358,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33827,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33862,
											"end": 33875,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33862,
											"end": 33875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33838,
											"end": 33890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33854,
											"end": 33860,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33854,
											"end": 33860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33862,
											"end": 33875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33877,
											"end": 33889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33838,
											"end": 33890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33890,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33838,
											"end": 33890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 33920,
											"end": 33932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8575,
											"end": 8600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8631,
											"end": 8633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8708,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8363,
											"end": 8765,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33905,
											"end": 33944,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33955,
											"end": 34002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33987,
											"end": 33991,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34001,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33955,
											"end": 33970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33955,
											"end": 34002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33955,
											"end": 34002,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 33955,
											"end": 34002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34032,
											"end": 34039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9084,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131A5C5D5A591A5D1E48141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9116,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9173,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8770,
											"end": 9180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34017,
											"end": 34058,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34085,
											"end": 34091,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 34093,
											"end": 34102,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34113,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 34069,
											"end": 34114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34114,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34069,
											"end": 34114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 34121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30547,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 30430,
											"end": 30547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29483,
											"end": 29499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 29483,
											"end": 29497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 29483,
											"end": 29499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29483,
											"end": 29499,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 29483,
											"end": 29499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30488,
											"end": 30503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30488,
											"end": 30503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30503,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30527,
											"end": 30539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 30527,
											"end": 30539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30518,
											"end": 30540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30540,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 30430,
											"end": 30547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24839,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24652,
											"end": 24839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24832,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24792,
											"end": 24832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24792,
											"end": 24832,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24715,
											"end": 24839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30298,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 30183,
											"end": 30298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29236,
											"end": 29255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 29236,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30242,
											"end": 30249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30242,
											"end": 30256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30242,
											"end": 30256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30242,
											"end": 30256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30242,
											"end": 30256,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30242,
											"end": 30256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30242,
											"end": 30256,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30271,
											"end": 30291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 30278,
											"end": 30290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4273,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16562,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16262,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16341,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 16341,
											"end": 16427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16427,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 16341,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16440,
											"end": 16456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16436,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 16436,
											"end": 16522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16508,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16522,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 16436,
											"end": 16522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 16539,
											"end": 16543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 16531,
											"end": 16555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20682,
											"end": 20701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 20767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20678,
											"end": 20767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20753,
											"end": 20754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20724,
											"end": 20756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20767,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20678,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20776,
											"end": 20866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20776,
											"end": 20866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20852,
											"end": 20853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20824,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20776,
											"end": 20866,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20776,
											"end": 20866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20902,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 20910,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 20977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20963,
											"end": 20968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20979,
											"end": 20984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20985,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20920,
											"end": 20996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 21002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 30048,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 29942,
											"end": 30048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29682,
											"end": 29689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 9389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9426,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30000,
											"end": 30041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9185,
											"end": 9529,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16877,
											"end": 17984,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 16877,
											"end": 17984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16966,
											"end": 16984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16966,
											"end": 16984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17118,
											"end": 17123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17114,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17102,
											"end": 17114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17102,
											"end": 17123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17228,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17205,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17205,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17205,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9754,
											"end": 9786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9754,
											"end": 9786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17255,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9534,
											"end": 9879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17205,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 16962,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17516,
											"end": 17532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17679,
											"end": 17700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 17512,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17967,
											"end": 17969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17961,
											"end": 17965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17971,
											"end": 17976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 17977,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16877,
											"end": 17984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16877,
											"end": 17984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16877,
											"end": 17984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16877,
											"end": 17984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1666,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1320,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1452,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1417,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1320,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2002,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1967,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2038,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2118,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2086,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2086,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2227,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2124,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2536,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2501,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2572,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2421,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2741,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2706,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2777,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 2777,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2860,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 2869,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3132,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3180,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3180,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3372,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3535,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3516,
											"end": 3536,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3592,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3442,
											"end": 3603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4335,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4208,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4260,
											"end": 4280,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4290,
											"end": 4305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4340,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4442,
											"end": 4460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5351,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5183,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5321,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 5325,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5356,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5461,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5457,
											"end": 5477,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5491,
											"end": 5506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5412,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6048,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5923,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6006,
											"end": 6042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6022,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6022,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"859952F8AD95BF3B9D6EC6D5182F93B209CBB9A33D14BAC6F48292B740D5A146": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984"
									}
								}
							},
							"sourceList": [
								"xeam_test_contract_1_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_TX()": "f3b2db3f",
							"MAX_WALLET()": "df7787a4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"emergencyFund()": "cc859378",
							"encouragementFund()": "52a6a9ec",
							"isExcludedFromFees(address)": "4fbee193",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sellTax()": "cc1776d3",
							"stakingWallet()": "06ee6ad8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"unpause()": "3f4ba83a",
							"updateExcludedAccountStatus(address,bool)": "753cafc3",
							"updateTaxes(uint256,uint256)": "1006ee0c",
							"updateUniswapPair(address)": "c12b7c4e",
							"withdrawLPFunds()": "bea9ea62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_encouragementFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_emergencyFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialUniswapPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LPFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"TaxDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"TaxesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"UniswapPairUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encouragementFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"updateExcludedAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"name\":\"updateTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"updateUniswapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLPFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xeam_test_contract_1_flattened.sol\":\"XEAMToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xeam_test_contract_1_flattened.sol\":{\"keccak256\":\"0x8c54bcb391f1b52cf15adfe0dbb5c11d3a83b6c0c85881c0e98b1c9a63de9ec3\",\"urls\":[\"bzz-raw://de43a86120baf2465c60dda1765713b65f29e6992c76f706fcfbf0fbc10c1a34\",\"dweb:/ipfs/QmeuVaRe8kA4VCzm1uoUa2TEekt86DkPfrUVa4aSJDc2pD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 926,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1120,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "encouragementFund",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1122,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "emergencyFund",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1124,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1126,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1128,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1131,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "buyTax",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1134,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "sellTax",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1138,
								"contract": "xeam_test_contract_1_flattened.sol:XEAMToken",
								"label": "isExcludedFromFees",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> xeam_test_contract_1_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "xeam_test_contract_1_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"xeam_test_contract_1_flattened.sol": {
				"ast": {
					"absolutePath": "xeam_test_contract_1_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						],
						"Pausable": [
							1086
						],
						"ReentrancyGuard": [
							980
						],
						"XEAMToken": [
							1615
						]
					},
					"id": 1616,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "159:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "241:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "423:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "432:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "470:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "454:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:57:0"
									},
									"src": "417:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "495:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "654:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "719:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "711:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:63:0"
									},
									"src": "648:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "732:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "811:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:0"
									},
									"scope": 77,
									"src": "802:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:9:0"
									},
									"scope": 77,
									"src": "939:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1013:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1240:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:6:0"
									},
									"scope": 77,
									"src": "1231:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1306:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1584:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:9:0"
									},
									"scope": 77,
									"src": "1575:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1664:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2345:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2403:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:6:0"
									},
									"scope": 77,
									"src": "2336:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2415:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2726:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2753:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:6:0"
									},
									"scope": 77,
									"src": "2717:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1616,
							"src": "231:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2978:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3121:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3121:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3121:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3005:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3103:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3134:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3202:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3232:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:15:0"
									},
									"scope": 100,
									"src": "3193:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3253:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3323:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3355:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:15:0"
									},
									"scope": 100,
									"src": "3314:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3376:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3463:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3489:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:7:0"
									},
									"scope": 100,
									"src": "3446:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1616,
							"src": "3093:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3622:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3648:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4163:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4239:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4256:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4260:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4256:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4249:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4186:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:9:0"
									},
									"scope": 129,
									"src": "4177:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4346:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4363:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4367:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4363:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4356:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4288:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4330:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4329:16:0"
									},
									"scope": 129,
									"src": "4279:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4456:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4473:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4466:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4393:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:9:0"
									},
									"scope": 129,
									"src": "4384:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "4145:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4630:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4656:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4808:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4827:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5147:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5196:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:49:0"
									},
									"src": "5141:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5227:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5390:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:16:0"
									},
									"src": "5384:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5431:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5601:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5630:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5622:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:18:0"
									},
									"src": "5595:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5646:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6002:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6054:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6046:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:52:0"
									},
									"src": "5996:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6087:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6272:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:18:0"
									},
									"src": "6266:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6317:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6523:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6542:17:0"
									},
									"src": "6517:43:0"
								}
							],
							"scope": 1616,
							"src": "4798:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6564:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6718:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6738:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6968:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6986:15:0"
									},
									"src": "6962:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7008:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7151:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7182:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7173:17:0"
									},
									"src": "7145:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7197:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7497:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7559:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7551:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:48:0"
									},
									"src": "7491:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7572:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7735:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:16:0"
									},
									"src": "7729:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7777:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7947:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7977:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7969:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7968:18:0"
									},
									"src": "7941:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7993:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8251:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8286:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8278:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8277:35:0"
									},
									"src": "8245:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8319:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8504:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8526:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:18:0"
									},
									"src": "8498:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8550:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8758:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8788:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8780:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8779:18:0"
									},
									"src": "8752:46:0"
								}
							],
							"scope": 1616,
							"src": "6708:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8802:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8958:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8979:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9351:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9386:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9377:66:0"
									},
									"src": "9345:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9450:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9613:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9642:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9633:16:0"
									},
									"src": "9607:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9656:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9826:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9848:18:0"
									},
									"src": "9820:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9873:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10140:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10177:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10169:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10195:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:33:0"
									},
									"src": "10134:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10208:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10393:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10424:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10416:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10415:18:0"
									},
									"src": "10387:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10440:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10648:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10671:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:18:0"
									},
									"src": "10642:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10695:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10986:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11020:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11012:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11039:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11031:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11011:41:0"
									},
									"src": "10980:73:0"
								}
							],
							"scope": 1616,
							"src": "8948:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11187:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12002:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12002:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12002:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12011:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12011:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12011:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12019:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12019:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12019:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12035:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12035:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12035:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11217:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "11993:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12098:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12054:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12070:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12054:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12081:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12186:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12114:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12130:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12114:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12157:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12149:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12141:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12220:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12204:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12254:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12239:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12239:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12280:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12265:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12526:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12536:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12544:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12536:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12536:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12559:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12559:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12294:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12496:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12482:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12503:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12503:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12481:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12526:0:0"
									},
									"scope": 771,
									"src": "12470:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12708:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12718:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12589:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12657:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12661:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12692:15:0"
									},
									"scope": 771,
									"src": "12648:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12912:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12922:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12743:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12859:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12865:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12897:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12896:15:0"
									},
									"scope": 771,
									"src": "12850:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13632:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13649:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13642:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12949:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13585:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13593:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13625:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13624:7:0"
									},
									"scope": 771,
									"src": "13576:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13779:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13796:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13789:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13664:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13727:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13738:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13770:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13769:9:0"
									},
									"scope": 771,
									"src": "13718:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13947:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13964:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13964:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13957:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13821:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13882:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13900:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13891:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:9:0"
									},
									"scope": 771,
									"src": "13873:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14259:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14277:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14269:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14269:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14285:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14285:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14269:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14317:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14324:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14307:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14344:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "13995:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14193:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14210:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14202:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14201:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14253:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14253:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14252:6:0"
									},
									"scope": 771,
									"src": "14184:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14509:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14526:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14538:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14526:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14526:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14519:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14368:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14429:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14439:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14438:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14499:9:0"
									},
									"scope": 771,
									"src": "14420:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14946:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14964:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14956:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14956:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14972:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14972:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14956:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "14994:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14994:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14994:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15035:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14566:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14876:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14892:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14909:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14901:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14883:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14940:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14939:6:0"
									},
									"scope": 771,
									"src": "14867:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15738:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15756:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15748:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15748:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15766:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15766:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15748:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15804:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15819:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15788:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15788:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15788:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15851:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15835:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15835:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15835:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15871:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15059:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15654:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15675:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15667:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15689:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15681:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15701:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15666:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15732:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15731:6:0"
									},
									"scope": 771,
									"src": "15645:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16331:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16345:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16361:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16353:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16353:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16345:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16341:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16365:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16413:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16405:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16405:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16405:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16386:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16386:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16379:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16440:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16454:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16446:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16446:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16440:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16436:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16458:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16508:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16500:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16500:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16500:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16479:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16479:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16472:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16539:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16545:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16531:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16531:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15895:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16271:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16289:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16281:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16303:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16295:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16315:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16307:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16280:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16331:0:0"
									},
									"scope": 771,
									"src": "16262:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16952:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16966:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16982:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16974:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16974:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16966:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17140:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17162:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17154:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17176:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17186:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17176:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17154:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17209:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17209:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17205:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17230:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17280:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17286:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17299:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17255:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17255:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17248:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17333:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17440:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17450:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17440:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17458:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17472:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17458:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17440:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17440:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16962:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16986:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17102:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17102:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17102:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17516:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17522:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17522:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17516:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17731:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17745:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17890:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17900:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17890:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17907:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17890:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17890:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17512:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17534:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17548:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17679:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17695:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17679:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17679:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17967:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17952:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17947:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16568:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16886:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16916:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16893:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16952:0:0"
									},
									"scope": 771,
									"src": "16877:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18383:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18416:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18408:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18408:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18397:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18393:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18420:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18462:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18462:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18462:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18441:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18441:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18434:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18509:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18501:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18501:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18493:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18493:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "17990:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18336:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18350:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18342:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18359:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18341:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18383:0:0"
									},
									"scope": 771,
									"src": "18327:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18909:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18934:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18934:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18923:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18919:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18946:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18994:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18986:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18986:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18986:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18967:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18967:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18960:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19034:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19046:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19017:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19017:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18541:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18862:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18893:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18885:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18867:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18909:0:0"
									},
									"scope": 771,
									"src": "18853:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19669:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19704:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19711:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19679:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19679:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19679:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19065:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19604:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19621:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19612:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19669:0:0"
									},
									"scope": 771,
									"src": "19595:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20668:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20682:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20699:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20691:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20691:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20682:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20678:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20703:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20753:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20745:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20745:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20745:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20724:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20724:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20717:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20799:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20791:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20791:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20780:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20776:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20803:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20852:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20844:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20844:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20844:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20824:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20824:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20817:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20875:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20875:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20875:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20905:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20875:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20875:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20924:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20920:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20935:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20963:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20970:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20979:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20954:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20954:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20949:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19729:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20579:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20588:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20611:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20603:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20640:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20587:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20668:0:0"
									},
									"scope": 771,
									"src": "20570:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21373:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21391:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21383:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21420:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21410:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21410:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21383:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21449:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21473:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21468:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21468:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21482:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21468:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21449:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21445:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21487:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21505:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21505:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21501:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21531:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21583:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21592:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21610:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21556:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21556:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21549:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21644:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21681:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21688:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21697:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21716:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21697:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21723:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21672:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21672:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21672:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21008:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21293:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21317:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21309:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21308:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21373:0:0"
									},
									"scope": 771,
									"src": "21284:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "11975:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21888:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22432:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22432:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22432:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21915:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22421:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22462:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22446:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22446:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22475:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22571:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22606:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22598:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22597:17:0"
									},
									"src": "22565:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22621:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22714:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22742:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22734:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22733:15:0"
									},
									"src": "22708:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22761:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22798:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22782:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22829:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22813:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22781:57:0"
									},
									"src": "22755:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "22999:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23013:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23037:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23029:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23029:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23013:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23009:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23041:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23090:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23082:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23082:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23082:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23062:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23062:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23055:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23132:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23113:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23113:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23113:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22845:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "22985:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "22977:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22976:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22999:0:0"
									},
									"scope": 916,
									"src": "22965:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23261:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23271:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23271:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23271:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23294:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23158:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23249:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23258:2:0"
									},
									"src": "23240:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23433:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23443:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23308:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23387:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23392:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23424:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23423:9:0"
									},
									"scope": 916,
									"src": "23378:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23581:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23595:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23595:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23606:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23606:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23595:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23591:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23620:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23668:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23668:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23641:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23641:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23634:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23469:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23545:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23556:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23581:0:0"
									},
									"scope": 916,
									"src": "23536:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24087:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24116:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24116:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24097:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24097:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24097:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23704:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24077:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24077:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24077:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24042:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24059:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24087:0:0"
									},
									"scope": 916,
									"src": "24033:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24353:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24379:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24379:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24367:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24363:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24391:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24440:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24432:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24432:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24432:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24412:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24412:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24405:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24482:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24463:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24463:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24463:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24140:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24343:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24343:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24343:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24292:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24309:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24353:0:0"
									},
									"scope": 916,
									"src": "24283:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24715:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24733:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24725:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24725:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24725:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24760:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24769:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24760:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24760:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24813:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24792:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24792:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24787:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24504:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24661:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24688:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24680:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24679:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24715:0:0"
									},
									"scope": 916,
									"src": "24652:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "22403:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24987:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "25012:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 980,
							"linearizedBaseContracts": [
								980
							],
							"name": "ReentrancyGuard",
							"nameLocation": "25781:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 921,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "26576:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26551:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26551:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 920,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26591:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 924,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "26623:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26598:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26598:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 923,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26634:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 926,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "26658:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "26642:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 925,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26642:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "26686:39:0",
										"statements": [
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 929,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "26696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 930,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "26706:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26696:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "26696:22:0"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26683:2:0"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26686:0:0"
									},
									"scope": 980,
									"src": "26672:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "27126:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 937,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "27136:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27136:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "27136:21:0"
											},
											{
												"id": 940,
												"nodeType": "PlaceholderStatement",
												"src": "27167:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 941,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "27178:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27178:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "27178:20:0"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "26731:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 945,
									"name": "nonReentrant",
									"nameLocation": "27111:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27123:2:0"
									},
									"src": "27102:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "27250:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "27343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 950,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "27354:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27343:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27364:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27335:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "27335:63:0"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "27483:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27473:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "27473:18:0"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "27220:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27239:2:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27250:0:0"
									},
									"scope": 980,
									"src": "27211:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "27542:171:0",
										"statements": [
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 964,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "27694:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27684:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "27684:22:0"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "27513:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27531:2:0"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27542:0:0"
									},
									"scope": 980,
									"src": "27504:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "27956:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 975,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "27984:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27973:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 973,
												"id": 977,
												"nodeType": "Return",
												"src": "27966:26:0"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "27719:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "27901:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27924:2:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "27950:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27949:6:0"
									},
									"scope": 980,
									"src": "27892:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "25763:2238:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28133:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "Context",
										"nameLocations": [
											"28629:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "28629:7:0"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "28629:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "28159:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								129
							],
							"name": "Pausable",
							"nameLocation": "28617:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "28643:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 989,
									"name": "Paused",
									"nameLocation": "28727:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28742:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "28734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28733:17:0"
									},
									"src": "28721:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "28757:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 994,
									"name": "Unpaused",
									"nameLocation": "28838:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "28847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28846:17:0"
									},
									"src": "28832:32:0"
								},
								{
									"constant": false,
									"id": 996,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "28883:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "28870:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 995,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "28870:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "28983:32:0",
										"statements": [
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1000,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "28993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "28993:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "28993:15:0"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "28897:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1005,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28980:2:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28983:0:0"
									},
									"scope": 1086,
									"src": "28969:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "29226:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "29236:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29236:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "29236:19:0"
											},
											{
												"id": 1011,
												"nodeType": "PlaceholderStatement",
												"src": "29265:1:0"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "29021:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1013,
									"name": "whenNotPaused",
									"nameLocation": "29210:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29223:2:0"
									},
									"src": "29201:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "29473:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1016,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "29483:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29483:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "29483:16:0"
											},
											{
												"id": 1019,
												"nodeType": "PlaceholderStatement",
												"src": "29509:1:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "29279:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1021,
									"name": "whenPaused",
									"nameLocation": "29460:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29470:2:0"
									},
									"src": "29451:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "29665:31:0",
										"statements": [
											{
												"expression": {
													"id": 1027,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 996,
													"src": "29682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1028,
												"nodeType": "Return",
												"src": "29675:14:0"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "29523:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "29621:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29627:2:0"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "29659:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29658:6:0"
									},
									"scope": 1086,
									"src": "29612:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "29815:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "29833:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1035,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "29834:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29834:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29844:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29825:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "29825:38:0"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "29702:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "29773:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29790:2:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29815:0:0"
									},
									"scope": 1086,
									"src": "29764:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "29990:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1047,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "30008:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30008:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30018:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30000:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "30000:41:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "29876:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "29951:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29965:2:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29990:0:0"
									},
									"scope": 1086,
									"src": "29942:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "30232:66:0",
										"statements": [
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "30242:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30252:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "30242:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "30242:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1064,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "30278:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30278:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1063,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "30271:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30271:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "EmitStatement",
												"src": "30266:25:0"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "30054:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "whenNotPaused",
												"nameLocations": [
													"30218:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1013,
												"src": "30218:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30218:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "30192:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30198:2:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30232:0:0"
									},
									"scope": 1086,
									"src": "30183:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "30478:69:0",
										"statements": [
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "30488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30498:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "30488:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "30488:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1080,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "30527:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30527:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1079,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "30518:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30518:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "EmitStatement",
												"src": "30513:27:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "30304:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "whenPaused",
												"nameLocations": [
													"30467:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1021,
												"src": "30467:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30467:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "30439:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30447:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30478:0:0"
									},
									"scope": 1086,
									"src": "30430:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "28599:1950:0",
							"usedErrors": [],
							"usedEvents": [
								989,
								994
							]
						},
						{
							"id": 1087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "30587:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1088,
										"name": "ERC20",
										"nameLocations": [
											"30639:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "30639:5:0"
									},
									"id": 1089,
									"nodeType": "InheritanceSpecifier",
									"src": "30639:5:0"
								},
								{
									"baseName": {
										"id": 1090,
										"name": "Ownable",
										"nameLocations": [
											"30646:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "30646:7:0"
									},
									"id": 1091,
									"nodeType": "InheritanceSpecifier",
									"src": "30646:7:0"
								},
								{
									"baseName": {
										"id": 1092,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"30655:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 980,
										"src": "30655:15:0"
									},
									"id": 1093,
									"nodeType": "InheritanceSpecifier",
									"src": "30655:15:0"
								},
								{
									"baseName": {
										"id": 1094,
										"name": "Pausable",
										"nameLocations": [
											"30672:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "30672:8:0"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "30672:8:0"
								}
							],
							"canonicalName": "XEAMToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1615,
							"linearizedBaseContracts": [
								1615,
								1086,
								980,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "XEAMToken",
							"nameLocation": "30626:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1102,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "30711:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30687:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1096,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30687:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										},
										"id": 1101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "325f3030305f303030",
											"id": 1097,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "30728:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000000_by_1",
												"typeString": "int_const 2000000"
											},
											"value": "2_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1100,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1098,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "30740:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1099,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "30744:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "30740:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "30728:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "df7787a4",
									"id": 1110,
									"mutability": "constant",
									"name": "MAX_WALLET",
									"nameLocation": "30776:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30752:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "30790:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30807:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "30790:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1107,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "30789:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1108,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "30812:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "30789:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3b2db3f",
									"id": 1118,
									"mutability": "constant",
									"name": "MAX_TX",
									"nameLocation": "30851:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30827:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30827:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "30861:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30878:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "30861:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1115,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "30860:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130303030",
											"id": 1116,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "30883:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"src": "30860:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52a6a9ec",
									"id": 1120,
									"mutability": "mutable",
									"name": "encouragementFund",
									"nameLocation": "30919:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30904:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1119,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30904:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc859378",
									"id": 1122,
									"mutability": "mutable",
									"name": "emergencyFund",
									"nameLocation": "30957:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30942:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30942:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1124,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "30991:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "30976:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1123,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30976:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06ee6ad8",
									"id": 1126,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "31027:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "31012:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1125,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "31012:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1128,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "31061:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "31046:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1127,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "31046:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1131,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "31094:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "31079:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "31079:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1130,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "31103:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1134,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "31126:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "31111:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "31111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 1133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "31136:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fbee193",
									"id": 1138,
									"mutability": "mutable",
									"name": "isExcludedFromFees",
									"nameLocation": "31177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "31145:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1137,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1135,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31145:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1136,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "31164:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6e232b0acf46272dacf889af6767574775a324b133d42b3b8cffa9cd13159984",
									"id": 1144,
									"name": "TaxDistributed",
									"nameLocation": "31208:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "31223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "31246:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "31239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31239:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31222:33:0"
									},
									"src": "31202:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2689cb5e1ca91bab290e22ada24c52705073cf17bacb82133714fa84271344",
									"id": 1148,
									"name": "UniswapPairUpdated",
									"nameLocation": "31267:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "31294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "31286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31285:17:0"
									},
									"src": "31261:42:0"
								},
								{
									"anonymous": false,
									"eventSelector": "35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4",
									"id": 1154,
									"name": "TaxesUpdated",
									"nameLocation": "31314:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyTax",
												"nameLocation": "31335:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "31327:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellTax",
												"nameLocation": "31354:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "31346:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31326:39:0"
									},
									"src": "31308:58:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bba45ff8bcb537fdedce576e22fc876a23312f65b5166c004136ece621f3ea93",
									"id": 1158,
									"name": "LPFundsWithdrawn",
									"nameLocation": "31377:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31402:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "31394:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31393:16:0"
									},
									"src": "31371:39:0"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "31653:313:0",
										"statements": [
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31663:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1180,
														"name": "_encouragementFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "31683:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31663:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "31663:38:0"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "31711:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_emergencyFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "31727:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31711:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "31711:30:0"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "31751:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "31769:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31751:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "31751:34:0"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "31795:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "31811:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31795:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "31795:30:0"
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1195,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "31835:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "_initialUniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "31849:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31835:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "31835:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1200,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31885:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31889:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31885:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "31897:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1199,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "31879:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31879:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "31879:33:0"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1205,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "31922:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1208,
														"indexExpression": {
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31941:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31945:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31941:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31922:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31955:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "31922:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "31922:37:0"
											}
										]
									},
									"id": 1213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5845414d20546f6b656e",
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31611:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98e1b9db00eaaf366b935ad530b190d9773aad50d000749d85e219b8a5ba6845",
														"typeString": "literal_string \"XEAM Token\""
													},
													"value": "XEAM Token"
												},
												{
													"hexValue": "5845414d",
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_86097711d31c646e79eccbaca29da45b57f182582f3ece5f934788d25ae5c98b",
														"typeString": "literal_string \"XEAM\""
													},
													"value": "XEAM"
												}
											],
											"id": 1173,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1170,
												"name": "ERC20",
												"nameLocations": [
													"31605:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "31605:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31605:27:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1175,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "31641:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "31645:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "31641:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1177,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1174,
												"name": "Ownable",
												"nameLocations": [
													"31633:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "31633:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31633:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "_encouragementFund",
												"nameLocation": "31445:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31437:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_emergencyFund",
												"nameLocation": "31481:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31473:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "31513:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31505:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_stakingWallet",
												"nameLocation": "31547:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31539:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_initialUniswapPair",
												"nameLocation": "31579:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31571:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31427:177:0"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31653:0:0"
									},
									"scope": 1615,
									"src": "31416:550:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "32070:148:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32101:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32105:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1228,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "32113:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "32124:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "_applyTransferLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "32080:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) view"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32080:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "32080:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32160:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32164:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32160:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "32172:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "32183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "32141:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32141:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "32141:49:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1224,
												"id": 1240,
												"nodeType": "Return",
												"src": "32200:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "whenNotPaused",
												"nameLocations": [
													"32041:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1013,
												"src": "32041:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32041:13:0"
										}
									],
									"name": "transfer",
									"nameLocation": "31981:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1219,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32032:8:0"
									},
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "31998:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "31990:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32017:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "32009:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31989:35:0"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "32064:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32064:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32063:6:0"
									},
									"scope": 1615,
									"src": "31972:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										454
									],
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "32342:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1257,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "32373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "32381:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "32392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "_applyTransferLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "32352:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) view"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32352:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "32352:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "32428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "32436:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "32447:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "_transferWithTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "32409:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32409:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "32409:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1269,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "32473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1270,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32481:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32485:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32481:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1273,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "32503:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1274,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32511:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32515:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32511:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1272,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "32493:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32493:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1277,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "32525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32493:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "32464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32464:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "32464:68:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1255,
												"id": 1282,
												"nodeType": "Return",
												"src": "32542:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "whenNotPaused",
												"nameLocations": [
													"32313:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1013,
												"src": "32313:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32313:13:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "32233:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32304:8:0"
									},
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32254:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "32246:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "32270:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "32262:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "32281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32245:51:0"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "32336:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32336:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32335:6:0"
									},
									"scope": 1615,
									"src": "32224:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "32661:226:0",
										"statements": [
											{
												"condition": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "32675:27:0",
													"subExpression": {
														"baseExpression": {
															"id": 1293,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "32676:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1295,
														"indexExpression": {
															"id": 1294,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "32695:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32676:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "32671:210:0",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "32704:177:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1299,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "32736:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1298,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 357,
																					"src": "32726:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32726:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1301,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "32749:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32726:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1303,
																			"name": "MAX_WALLET",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "32759:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32726:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c6574206c696d6974",
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32771:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		},
																		"value": "Exceeds max wallet limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be",
																			"typeString": "literal_string \"Exceeds max wallet limit\""
																		}
																	],
																	"id": 1297,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "32718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32718:80:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1307,
															"nodeType": "ExpressionStatement",
															"src": "32718:80:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1309,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "32820:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1310,
																			"name": "MAX_TX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "32830:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32820:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e206c696d6974",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32838:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		},
																		"value": "Exceeds max transaction limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d641221517d84b6fd9017ac7cb6728dc0c3e46577c7c7622aebb36327ed5f4da",
																			"typeString": "literal_string \"Exceeds max transaction limit\""
																		}
																	],
																	"id": 1308,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "32812:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32812:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "32812:58:0"
														}
													]
												}
											}
										]
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_applyTransferLimits",
									"nameLocation": "32575:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32604:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "32596:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "32620:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "32612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "32631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32595:51:0"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32661:0:0"
									},
									"scope": 1615,
									"src": "32566:321:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "32981:1140:0",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "32999:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "32991:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1329,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "33006:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1330,
																	"name": "uniswapPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "33019:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "33006:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1332,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33005:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1339,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "33062:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1340,
																		"name": "buyTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "33071:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33062:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1342,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33061:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33081:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "33061:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "33005:79:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1333,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "33035:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1334,
																		"name": "sellTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "33044:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33035:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33034:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33055:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "33034:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32991:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1348,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "33102:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1349,
																"name": "tax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "33112:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461782065786365656473207472616e7366657220616d6f756e74",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33117:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6",
																"typeString": "literal_string \"Tax exceeds transfer amount\""
															},
															"value": "Tax exceeds transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_716b64b90bc836ab08c730fa7e39c6a494035376fd441ae0488f7d74faa04ff6",
																"typeString": "literal_string \"Tax exceeds transfer amount\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33094:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "33094:53:0"
											},
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "33166:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33158:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1359,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1356,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "33178:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1357,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "33187:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33178:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33158:32:0"
											},
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "lpShare",
														"nameLocation": "33208:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33200:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1362,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33219:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "33219:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1365,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33218:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33230:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "33218:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33200:32:0"
											},
											{
												"assignments": [
													1370
												],
												"declarations": [
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "encouragementShare",
														"nameLocation": "33250:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33242:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1371,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33272:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "33272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1374,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33271:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33283:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "33271:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33242:43:0"
											},
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "emergencyShare",
														"nameLocation": "33303:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33295:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33321:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "33321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1383,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33320:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33332:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "33320:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33295:39:0"
											},
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "marketingShare",
														"nameLocation": "33352:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33344:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1389,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "33370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1392,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33369:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33381:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "33369:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33344:39:0"
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "stakingShare",
														"nameLocation": "33401:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "33393:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1398,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "33417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33423:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "33417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1401,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33428:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "33416:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33393:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "33457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "encouragementFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "33465:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "33484:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1405,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33447:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "33441:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33441:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "33441:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1414,
															"name": "encouragementShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "33533:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456e636f75726167656d656e742046756e64",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33553:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															},
															"value": "Encouragement Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_3fb60d22fadefeaba96bc27f0a4add72343153addf15fcb886951bdbad768771",
																"typeString": "literal_string \"Encouragement Fund\""
															}
														],
														"id": 1413,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "33518:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33518:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "EmitStatement",
												"src": "33513:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "33601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "emergencyFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "33609:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "33624:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1418,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33585:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33591:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "33585:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33585:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "33585:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1427,
															"name": "emergencyShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "33669:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "456d657267656e63792046756e64",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33685:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															},
															"value": "Emergency Fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf58c75e6cd79b7a593b307d0ec4bbb30dff54ac61f3c9d3faf9f646cfb006c",
																"typeString": "literal_string \"Emergency Fund\""
															}
														],
														"id": 1426,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "33654:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33654:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "EmitStatement",
												"src": "33649:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "33729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "33737:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1436,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "33754:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1431,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33719:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "33713:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33713:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "33713:56:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1440,
															"name": "marketingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "33799:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4d61726b6574696e67",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33815:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															},
															"value": "Marketing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_0af8a758e2e143977c734d5e012b22d6550bc58df51be42389db46d9fcb2e2e0",
																"typeString": "literal_string \"Marketing\""
															}
														],
														"id": 1439,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "33784:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33784:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "EmitStatement",
												"src": "33779:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "33854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1448,
															"name": "stakingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "33862:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "33877:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1444,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33844:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "33838:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33838:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "33838:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1453,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "33920:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5374616b696e67",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33934:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															},
															"value": "Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															}
														],
														"id": 1452,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "33905:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33905:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "EmitStatement",
												"src": "33900:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "33971:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1463,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33987:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33979:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33979:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33979:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1465,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "33994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1457,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33961:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "33955:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33955:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "33955:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1469,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "34032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "4c697175696469747920506f6f6c",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34041:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															},
															"value": "Liquidity Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_69b99769d1130e2a04cace4ef780206e512cc65035d5086b3800ae2645e255bd",
																"typeString": "literal_string \"Liquidity Pool\""
															}
														],
														"id": 1468,
														"name": "TaxDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "34017:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34017:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "EmitStatement",
												"src": "34012:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1476,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "34085:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1477,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "34093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "34104:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1473,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "34069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34075:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "34069:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34069:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "34069:45:0"
											}
										]
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWithTaxes",
									"nameLocation": "32902:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "32921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "32945:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "32937:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32964:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "32956:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32920:51:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32981:0:0"
									},
									"scope": 1615,
									"src": "32893:1228:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "34173:212:0",
										"statements": [
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "34191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1519,
														"src": "34183:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1492,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34219:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34211:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34211:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1489,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "34201:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34201:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34183:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1497,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "34243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34253:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34243:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204c502066756e647320617661696c61626c65",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34256:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8",
																"typeString": "literal_string \"No LP funds available\""
															},
															"value": "No LP funds available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e124d1f5bb323864faed203289b948942043c2156d581db91a8c9186c28d9dc8",
																"typeString": "literal_string \"No LP funds available\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34235:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "34235:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34314:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XEAMToken_$1615",
																		"typeString": "contract XEAMToken"
																	}
																],
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34306:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34306:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1510,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "34321:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34321:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "34330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1503,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "34290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XEAMToken_$1615_$",
																"typeString": "type(contract super XEAMToken)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34296:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "34290:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34290:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "34290:48:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1516,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "34370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1515,
														"name": "LPFundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "34353:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34353:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "EmitStatement",
												"src": "34348:30:0"
											}
										]
									},
									"functionSelector": "bea9ea62",
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1485,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1484,
												"name": "onlyOwner",
												"nameLocations": [
													"34163:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "34163:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34163:9:0"
										}
									],
									"name": "withdrawLPFunds",
									"nameLocation": "34136:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34151:2:0"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34173:0:0"
									},
									"scope": 1615,
									"src": "34127:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "34479:55:0",
										"statements": [
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1529,
															"name": "isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "34489:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1531,
														"indexExpression": {
															"id": 1530,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "34508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34489:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1532,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "34519:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34489:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "34489:38:0"
											}
										]
									},
									"functionSelector": "753cafc3",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1526,
												"name": "onlyOwner",
												"nameLocations": [
													"34469:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "34469:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34469:9:0"
										}
									],
									"name": "updateExcludedAccountStatus",
									"nameLocation": "34400:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34436:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "34428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "34450:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "34445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34427:32:0"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34479:0:0"
									},
									"scope": 1615,
									"src": "34391:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "34603:155:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1544,
																"name": "newPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "34621:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34640:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34632:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34632:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34632:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34621:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577207061697220616464726573732063616e6e6f74206265207a65726f",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34644:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															},
															"value": "New pair address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c758c1734a5d91c52391a26dfe840e885780fd69c05d950bc50c6d5060490a3",
																"typeString": "literal_string \"New pair address cannot be zero\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34613:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "34613:65:0"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1553,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "34688:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1554,
														"name": "newPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "34702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34688:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "34688:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1558,
															"name": "newPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "34743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1557,
														"name": "UniswapPairUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "34724:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34724:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1560,
												"nodeType": "EmitStatement",
												"src": "34719:32:0"
											}
										]
									},
									"functionSelector": "c12b7c4e",
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1540,
												"name": "onlyOwner",
												"nameLocations": [
													"34593:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "34593:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34593:9:0"
										}
									],
									"name": "updateUniswapPair",
									"nameLocation": "34549:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "34575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "34567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34566:17:0"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34603:0:0"
									},
									"scope": 1615,
									"src": "34540:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "34839:173:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1572,
																	"name": "_buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "34857:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3135",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34868:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"src": "34857:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "_sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "34874:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34886:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "34874:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "34857:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617820746f6f2068696768",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34890:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															},
															"value": "Tax too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34849:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "34849:56:0"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "34915:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "_buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "34924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34915:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "34915:16:0"
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1586,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "34941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1587,
														"name": "_sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "34951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34941:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "34941:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1591,
															"name": "_buyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "34987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1592,
															"name": "_sellTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "34996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1590,
														"name": "TaxesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "34974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34974:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "EmitStatement",
												"src": "34969:36:0"
											}
										]
									},
									"functionSelector": "1006ee0c",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1568,
												"name": "onlyOwner",
												"nameLocations": [
													"34829:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "34829:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34829:9:0"
										}
									],
									"name": "updateTaxes",
									"nameLocation": "34773:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "_buyTax",
												"nameLocation": "34793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "34785:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_sellTax",
												"nameLocation": "34810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "34802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34784:35:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34839:0:0"
									},
									"scope": 1615,
									"src": "34764:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "35054:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1601,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "35064:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35064:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "35064:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1598,
												"name": "onlyOwner",
												"nameLocations": [
													"35044:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "35044:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35044:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "35027:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35032:2:0"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35054:0:0"
									},
									"scope": 1615,
									"src": "35018:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "35123:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1610,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "35133:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35133:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "35133:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1607,
												"name": "onlyOwner",
												"nameLocations": [
													"35113:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "35113:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35113:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "35094:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35101:2:0"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35123:0:0"
									},
									"scope": 1615,
									"src": "35085:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1616,
							"src": "30617:4535:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793,
								989,
								994,
								1144,
								1148,
								1154,
								1158
							]
						}
					],
					"src": "133:35020:0"
				},
				"id": 0
			}
		}
	}
}