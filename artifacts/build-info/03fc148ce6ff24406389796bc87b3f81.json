{
	"id": "03fc148ce6ff24406389796bc87b3f81",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"identity_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: identity.sol\n\n\npragma solidity ^0.8.20;\n\n\n\ncontract AddressClaim is Ownable, Pausable {\n    mapping(address => bool) private _claimedAddresses;\n\n    event AddressClaimedEvent(address indexed claimant);\n\n    constructor() Ownable(msg.sender) {}\n\n    /// @dev Allows an address to claim itself.\n    function claimAddress() public whenNotPaused {\n        require(!_claimedAddresses[msg.sender], \"Address already claimed\");\n        _claimedAddresses[msg.sender] = true;\n        emit AddressClaimedEvent(msg.sender);\n    }\n\n    /// @dev Checks if an address has been claimed.\n    function isAddressClaimed(address claimant) public view returns (bool) {\n        return _claimedAddresses[claimant];\n    }\n\n    /// @dev Allows an address to unclaim itself.\n    function unclaimAddress() public whenNotPaused {\n        require(_claimedAddresses[msg.sender], \"Address not claimed\");\n        _claimedAddresses[msg.sender] = false;\n    }\n\n    /// @dev Pauses the contract. Only the owner can call this function.\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /// @dev Unpauses the contract. Only the owner can call this function.\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"identity_flattened.sol": {
				"AddressClaim": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								}
							],
							"name": "AddressClaimedEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								}
							],
							"name": "isAddressClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unclaimAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"claimAddress()": {
								"details": "Allows an address to claim itself."
							},
							"isAddressClaimed(address)": {
								"details": "Checks if an address has been claimed."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Pauses the contract. Only the owner can call this function."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unclaimAddress()": {
								"details": "Allows an address to unclaim itself."
							},
							"unpause()": {
								"details": "Unpauses the contract. Only the owner can call this function."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"identity_flattened.sol\":6665:7831  contract AddressClaim is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"identity_flattened.sol\":6829:6865  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"identity_flattened.sol\":6851:6861  msg.sender */\n  caller\n    /* \"identity_flattened.sol\":2259:2260  0 */\n  0x00\n    /* \"identity_flattened.sol\":2235:2261  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"identity_flattened.sol\":2235:2247  initialOwner */\n  dup2\n    /* \"identity_flattened.sol\":2235:2261  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"identity_flattened.sol\":2231:2326  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"identity_flattened.sol\":2312:2313  0 */\n  0x00\n    /* \"identity_flattened.sol\":2284:2315  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"identity_flattened.sol\":2231:2326  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"identity_flattened.sol\":2335:2367  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"identity_flattened.sol\":2354:2366  initialOwner */\n  dup2\n    /* \"identity_flattened.sol\":2335:2353  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"identity_flattened.sol\":2335:2367  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"identity_flattened.sol\":2187:2374  constructor(address initialOwner) {... */\n  pop\n    /* \"identity_flattened.sol\":5065:5070  false */\n  0x00\n    /* \"identity_flattened.sol\":5055:5062  _paused */\n  dup1\n  0x14\n    /* \"identity_flattened.sol\":5055:5070  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"identity_flattened.sol\":6665:7831  contract AddressClaim is Ownable, Pausable {... */\n  jump(tag_13)\n    /* \"identity_flattened.sol\":3874:4061  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"identity_flattened.sol\":3947:3963  address oldOwner */\n  0x00\n    /* \"identity_flattened.sol\":3966:3972  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"identity_flattened.sol\":3947:3972  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"identity_flattened.sol\":3991:3999  newOwner */\n  dup2\n    /* \"identity_flattened.sol\":3982:3988  _owner */\n  0x00\n  dup1\n    /* \"identity_flattened.sol\":3982:3999  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"identity_flattened.sol\":4045:4053  newOwner */\n  dup2\n    /* \"identity_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"identity_flattened.sol\":4035:4043  oldOwner */\n  dup2\n    /* \"identity_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"identity_flattened.sol\":3937:4061  {... */\n  pop\n    /* \"identity_flattened.sol\":3874:4061  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"identity_flattened.sol\":6665:7831  contract AddressClaim is Ownable, Pausable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"identity_flattened.sol\":6665:7831  contract AddressClaim is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc92dbf85\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x05691ec8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b76364e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"identity_flattened.sol\":6919:7139  function claimAddress() public whenNotPaused {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"identity_flattened.sol\":7197:7319  function isAddressClaimed(address claimant) public view returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"identity_flattened.sol\":7766:7829  function unpause() public onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"identity_flattened.sol\":5674:5758  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"identity_flattened.sol\":3255:3356  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"identity_flattened.sol\":7626:7685  function pause() public onlyOwner {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"identity_flattened.sol\":2600:2685  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"identity_flattened.sol\":7375:7547  function unclaimAddress() public whenNotPaused {... */\n    tag_10:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"identity_flattened.sol\":3505:3720  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"identity_flattened.sol\":6919:7139  function claimAddress() public whenNotPaused {... */\n    tag_14:\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      tag_40\n        /* \"identity_flattened.sol\":5298:5315  _requireNotPaused */\n      tag_41\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      jump\t// in\n    tag_40:\n        /* \"identity_flattened.sol\":6983:7000  _claimedAddresses */\n      0x01\n        /* \"identity_flattened.sol\":6983:7012  _claimedAddresses[msg.sender] */\n      0x00\n        /* \"identity_flattened.sol\":7001:7011  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":6983:7012  _claimedAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"identity_flattened.sol\":6982:7012  !_claimedAddresses[msg.sender] */\n      iszero\n        /* \"identity_flattened.sol\":6974:7040  require(!_claimedAddresses[msg.sender], \"Address already claimed\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"identity_flattened.sol\":7082:7086  true */\n      0x01\n        /* \"identity_flattened.sol\":7050:7067  _claimedAddresses */\n      dup1\n        /* \"identity_flattened.sol\":7050:7079  _claimedAddresses[msg.sender] */\n      0x00\n        /* \"identity_flattened.sol\":7068:7078  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":7050:7079  _claimedAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"identity_flattened.sol\":7050:7086  _claimedAddresses[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"identity_flattened.sol\":7121:7131  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":7101:7132  AddressClaimedEvent(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x724e7ff186adc07f81795071386876998e66855c287fc3a53b5dec08e7b6bbd9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"identity_flattened.sol\":6919:7139  function claimAddress() public whenNotPaused {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":7197:7319  function isAddressClaimed(address claimant) public view returns (bool) {... */\n    tag_18:\n        /* \"identity_flattened.sol\":7262:7266  bool */\n      0x00\n        /* \"identity_flattened.sol\":7285:7302  _claimedAddresses */\n      0x01\n        /* \"identity_flattened.sol\":7285:7312  _claimedAddresses[claimant] */\n      0x00\n        /* \"identity_flattened.sol\":7303:7311  claimant */\n      dup4\n        /* \"identity_flattened.sol\":7285:7312  _claimedAddresses[claimant] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"identity_flattened.sol\":7278:7312  return _claimedAddresses[claimant] */\n      swap1\n      pop\n        /* \"identity_flattened.sol\":7197:7319  function isAddressClaimed(address claimant) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"identity_flattened.sol\":7766:7829  function unpause() public onlyOwner {... */\n    tag_22:\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      tag_48\n        /* \"identity_flattened.sol\":2493:2504  _checkOwner */\n      tag_49\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"identity_flattened.sol\":7812:7822  _unpause() */\n      tag_51\n        /* \"identity_flattened.sol\":7812:7820  _unpause */\n      tag_52\n        /* \"identity_flattened.sol\":7812:7822  _unpause() */\n      jump\t// in\n    tag_51:\n        /* \"identity_flattened.sol\":7766:7829  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":5674:5758  function paused() public view virtual returns (bool) {... */\n    tag_24:\n        /* \"identity_flattened.sol\":5721:5725  bool */\n      0x00\n        /* \"identity_flattened.sol\":5744:5751  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"identity_flattened.sol\":5737:5751  return _paused */\n      swap1\n      pop\n        /* \"identity_flattened.sol\":5674:5758  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"identity_flattened.sol\":3255:3356  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      tag_55\n        /* \"identity_flattened.sol\":2493:2504  _checkOwner */\n      tag_49\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"identity_flattened.sol\":3319:3349  _transferOwnership(address(0)) */\n      tag_57\n        /* \"identity_flattened.sol\":3346:3347  0 */\n      0x00\n        /* \"identity_flattened.sol\":3319:3337  _transferOwnership */\n      tag_58\n        /* \"identity_flattened.sol\":3319:3349  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_57:\n        /* \"identity_flattened.sol\":3255:3356  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":7626:7685  function pause() public onlyOwner {... */\n    tag_29:\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      tag_60\n        /* \"identity_flattened.sol\":2493:2504  _checkOwner */\n      tag_49\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"identity_flattened.sol\":7670:7678  _pause() */\n      tag_62\n        /* \"identity_flattened.sol\":7670:7676  _pause */\n      tag_63\n        /* \"identity_flattened.sol\":7670:7678  _pause() */\n      jump\t// in\n    tag_62:\n        /* \"identity_flattened.sol\":7626:7685  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":2600:2685  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"identity_flattened.sol\":2646:2653  address */\n      0x00\n        /* \"identity_flattened.sol\":2672:2678  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"identity_flattened.sol\":2665:2678  return _owner */\n      swap1\n      pop\n        /* \"identity_flattened.sol\":2600:2685  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"identity_flattened.sol\":7375:7547  function unclaimAddress() public whenNotPaused {... */\n    tag_35:\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      tag_66\n        /* \"identity_flattened.sol\":5298:5315  _requireNotPaused */\n      tag_41\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      jump\t// in\n    tag_66:\n        /* \"identity_flattened.sol\":7440:7457  _claimedAddresses */\n      0x01\n        /* \"identity_flattened.sol\":7440:7469  _claimedAddresses[msg.sender] */\n      0x00\n        /* \"identity_flattened.sol\":7458:7468  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":7440:7469  _claimedAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"identity_flattened.sol\":7432:7493  require(_claimedAddresses[msg.sender], \"Address not claimed\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"identity_flattened.sol\":7535:7540  false */\n      0x00\n        /* \"identity_flattened.sol\":7503:7520  _claimedAddresses */\n      0x01\n        /* \"identity_flattened.sol\":7503:7532  _claimedAddresses[msg.sender] */\n      0x00\n        /* \"identity_flattened.sol\":7521:7531  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":7503:7532  _claimedAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"identity_flattened.sol\":7503:7540  _claimedAddresses[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"identity_flattened.sol\":7375:7547  function unclaimAddress() public whenNotPaused {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":3505:3720  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      tag_72\n        /* \"identity_flattened.sol\":2493:2504  _checkOwner */\n      tag_49\n        /* \"identity_flattened.sol\":2493:2506  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"identity_flattened.sol\":3609:3610  0 */\n      0x00\n        /* \"identity_flattened.sol\":3589:3611  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"identity_flattened.sol\":3589:3597  newOwner */\n      dup2\n        /* \"identity_flattened.sol\":3589:3611  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"identity_flattened.sol\":3585:3676  if (newOwner == address(0)) {... */\n      tag_74\n      jumpi\n        /* \"identity_flattened.sol\":3662:3663  0 */\n      0x00\n        /* \"identity_flattened.sol\":3634:3665  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"identity_flattened.sol\":3585:3676  if (newOwner == address(0)) {... */\n    tag_74:\n        /* \"identity_flattened.sol\":3685:3713  _transferOwnership(newOwner) */\n      tag_76\n        /* \"identity_flattened.sol\":3704:3712  newOwner */\n      dup2\n        /* \"identity_flattened.sol\":3685:3703  _transferOwnership */\n      tag_58\n        /* \"identity_flattened.sol\":3685:3713  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_76:\n        /* \"identity_flattened.sol\":3505:3720  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"identity_flattened.sol\":5826:5932  function _requireNotPaused() internal view virtual {... */\n    tag_41:\n        /* \"identity_flattened.sol\":5896:5904  paused() */\n      tag_78\n        /* \"identity_flattened.sol\":5896:5902  paused */\n      tag_24\n        /* \"identity_flattened.sol\":5896:5904  paused() */\n      jump\t// in\n    tag_78:\n        /* \"identity_flattened.sol\":5895:5904  !paused() */\n      iszero\n        /* \"identity_flattened.sol\":5887:5925  require(!paused(), \"Pausable: paused\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"identity_flattened.sol\":5826:5932  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":2758:2920  function _checkOwner() internal view virtual {... */\n    tag_49:\n        /* \"identity_flattened.sol\":2828:2840  _msgSender() */\n      tag_83\n        /* \"identity_flattened.sol\":2828:2838  _msgSender */\n      tag_84\n        /* \"identity_flattened.sol\":2828:2840  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"identity_flattened.sol\":2817:2840  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"identity_flattened.sol\":2817:2824  owner() */\n      tag_85\n        /* \"identity_flattened.sol\":2817:2822  owner */\n      tag_31\n        /* \"identity_flattened.sol\":2817:2824  owner() */\n      jump\t// in\n    tag_85:\n        /* \"identity_flattened.sol\":2817:2840  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"identity_flattened.sol\":2813:2914  if (owner() != _msgSender()) {... */\n      tag_86\n      jumpi\n        /* \"identity_flattened.sol\":2890:2902  _msgSender() */\n      tag_87\n        /* \"identity_flattened.sol\":2890:2900  _msgSender */\n      tag_84\n        /* \"identity_flattened.sol\":2890:2902  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"identity_flattened.sol\":2863:2903  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"identity_flattened.sol\":2813:2914  if (owner() != _msgSender()) {... */\n    tag_86:\n        /* \"identity_flattened.sol\":2758:2920  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":6492:6609  function _unpause() internal virtual whenPaused {... */\n    tag_52:\n        /* \"identity_flattened.sol\":5545:5561  _requirePaused() */\n      tag_90\n        /* \"identity_flattened.sol\":5545:5559  _requirePaused */\n      tag_91\n        /* \"identity_flattened.sol\":5545:5561  _requirePaused() */\n      jump\t// in\n    tag_90:\n        /* \"identity_flattened.sol\":6560:6565  false */\n      0x00\n        /* \"identity_flattened.sol\":6550:6557  _paused */\n      dup1\n      0x14\n        /* \"identity_flattened.sol\":6550:6565  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"identity_flattened.sol\":6580:6602  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"identity_flattened.sol\":6589:6601  _msgSender() */\n      tag_93\n        /* \"identity_flattened.sol\":6589:6599  _msgSender */\n      tag_84\n        /* \"identity_flattened.sol\":6589:6601  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"identity_flattened.sol\":6580:6602  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"identity_flattened.sol\":6492:6609  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":3874:4061  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_58:\n        /* \"identity_flattened.sol\":3947:3963  address oldOwner */\n      0x00\n        /* \"identity_flattened.sol\":3966:3972  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"identity_flattened.sol\":3947:3972  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"identity_flattened.sol\":3991:3999  newOwner */\n      dup2\n        /* \"identity_flattened.sol\":3982:3988  _owner */\n      0x00\n      dup1\n        /* \"identity_flattened.sol\":3982:3999  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"identity_flattened.sol\":4045:4053  newOwner */\n      dup2\n        /* \"identity_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"identity_flattened.sol\":4035:4043  oldOwner */\n      dup2\n        /* \"identity_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"identity_flattened.sol\":3937:4061  {... */\n      pop\n        /* \"identity_flattened.sol\":3874:4061  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"identity_flattened.sol\":6245:6360  function _pause() internal virtual whenNotPaused {... */\n    tag_63:\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      tag_97\n        /* \"identity_flattened.sol\":5298:5315  _requireNotPaused */\n      tag_41\n        /* \"identity_flattened.sol\":5298:5317  _requireNotPaused() */\n      jump\t// in\n    tag_97:\n        /* \"identity_flattened.sol\":6314:6318  true */\n      0x01\n        /* \"identity_flattened.sol\":6304:6311  _paused */\n      0x00\n      0x14\n        /* \"identity_flattened.sol\":6304:6318  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"identity_flattened.sol\":6333:6353  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"identity_flattened.sol\":6340:6352  _msgSender() */\n      tag_99\n        /* \"identity_flattened.sol\":6340:6350  _msgSender */\n      tag_84\n        /* \"identity_flattened.sol\":6340:6352  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"identity_flattened.sol\":6333:6353  Paused(_msgSender()) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"identity_flattened.sol\":6245:6360  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"identity_flattened.sol\":678:774  function _msgSender() internal view virtual returns (address) {... */\n    tag_84:\n        /* \"identity_flattened.sol\":731:738  address */\n      0x00\n        /* \"identity_flattened.sol\":757:767  msg.sender */\n      caller\n        /* \"identity_flattened.sol\":750:767  return msg.sender */\n      swap1\n      pop\n        /* \"identity_flattened.sol\":678:774  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"identity_flattened.sol\":6004:6110  function _requirePaused() internal view virtual {... */\n    tag_91:\n        /* \"identity_flattened.sol\":6070:6078  paused() */\n      tag_103\n        /* \"identity_flattened.sol\":6070:6076  paused */\n      tag_24\n        /* \"identity_flattened.sol\":6070:6078  paused() */\n      jump\t// in\n    tag_103:\n        /* \"identity_flattened.sol\":6062:6103  require(paused(), \"Pausable: not paused\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"identity_flattened.sol\":6004:6110  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_108:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_110:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_111:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_132\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_110\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_112:\n        /* \"#utility.yul\":641:665   */\n      tag_134\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_111\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_135:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_113:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_137\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_112\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_140\n      tag_108\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":917:1036   */\n    tag_139:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_141\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_113\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_114:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_115:\n        /* \"#utility.yul\":1353:1374   */\n      tag_144\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_114\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_20:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_146\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_115\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_116:\n        /* \"#utility.yul\":1690:1714   */\n      tag_148\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_111\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_33:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_150\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_116\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_117:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2303   */\n    tag_118:\n        /* \"#utility.yul\":2270:2295   */\n      0x4164647265737320616c726561647920636c61696d6564000000000000000000\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2296   */\n      mstore\n        /* \"#utility.yul\":2130:2303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2675   */\n    tag_119:\n        /* \"#utility.yul\":2451:2454   */\n      0x00\n        /* \"#utility.yul\":2472:2539   */\n      tag_154\n        /* \"#utility.yul\":2536:2538   */\n      0x17\n        /* \"#utility.yul\":2531:2534   */\n      dup4\n        /* \"#utility.yul\":2472:2539   */\n      tag_117\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2465:2539   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2641   */\n      tag_155\n        /* \"#utility.yul\":2637:2640   */\n      dup3\n        /* \"#utility.yul\":2548:2641   */\n      tag_118\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2666:2668   */\n      0x20\n        /* \"#utility.yul\":2661:2664   */\n      dup3\n        /* \"#utility.yul\":2657:2669   */\n      add\n        /* \"#utility.yul\":2650:2669   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:3100   */\n    tag_45:\n        /* \"#utility.yul\":2847:2851   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x20\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2862:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:2943   */\n      dup2\n        /* \"#utility.yul\":2928:2932   */\n      dup2\n        /* \"#utility.yul\":2924:2944   */\n      sub\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2909:2918   */\n      dup4\n        /* \"#utility.yul\":2905:2922   */\n      add\n        /* \"#utility.yul\":2898:2945   */\n      mstore\n        /* \"#utility.yul\":2962:3093   */\n      tag_157\n        /* \"#utility.yul\":3088:3092   */\n      dup2\n        /* \"#utility.yul\":2962:3093   */\n      tag_119\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2954:3093   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:3100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3275   */\n    tag_120:\n        /* \"#utility.yul\":3246:3267   */\n      0x41646472657373206e6f7420636c61696d656400000000000000000000000000\n        /* \"#utility.yul\":3242:3243   */\n      0x00\n        /* \"#utility.yul\":3234:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3244   */\n      add\n        /* \"#utility.yul\":3223:3268   */\n      mstore\n        /* \"#utility.yul\":3106:3275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3281:3647   */\n    tag_121:\n        /* \"#utility.yul\":3423:3426   */\n      0x00\n        /* \"#utility.yul\":3444:3511   */\n      tag_160\n        /* \"#utility.yul\":3508:3510   */\n      0x13\n        /* \"#utility.yul\":3503:3506   */\n      dup4\n        /* \"#utility.yul\":3444:3511   */\n      tag_117\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3437:3511   */\n      swap2\n      pop\n        /* \"#utility.yul\":3520:3613   */\n      tag_161\n        /* \"#utility.yul\":3609:3612   */\n      dup3\n        /* \"#utility.yul\":3520:3613   */\n      tag_120\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3638:3640   */\n      0x20\n        /* \"#utility.yul\":3633:3636   */\n      dup3\n        /* \"#utility.yul\":3629:3641   */\n      add\n        /* \"#utility.yul\":3622:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3281:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:4072   */\n    tag_70:\n        /* \"#utility.yul\":3819:3823   */\n      0x00\n        /* \"#utility.yul\":3857:3859   */\n      0x20\n        /* \"#utility.yul\":3846:3855   */\n      dup3\n        /* \"#utility.yul\":3842:3860   */\n      add\n        /* \"#utility.yul\":3834:3860   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:3915   */\n      dup2\n        /* \"#utility.yul\":3900:3904   */\n      dup2\n        /* \"#utility.yul\":3896:3916   */\n      sub\n        /* \"#utility.yul\":3892:3893   */\n      0x00\n        /* \"#utility.yul\":3881:3890   */\n      dup4\n        /* \"#utility.yul\":3877:3894   */\n      add\n        /* \"#utility.yul\":3870:3917   */\n      mstore\n        /* \"#utility.yul\":3934:4065   */\n      tag_163\n        /* \"#utility.yul\":4060:4064   */\n      dup2\n        /* \"#utility.yul\":3934:4065   */\n      tag_121\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3926:4065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:4072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4078:4244   */\n    tag_122:\n        /* \"#utility.yul\":4218:4236   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":4214:4215   */\n      0x00\n        /* \"#utility.yul\":4206:4212   */\n      dup3\n        /* \"#utility.yul\":4202:4216   */\n      add\n        /* \"#utility.yul\":4195:4237   */\n      mstore\n        /* \"#utility.yul\":4078:4244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4616   */\n    tag_123:\n        /* \"#utility.yul\":4392:4395   */\n      0x00\n        /* \"#utility.yul\":4413:4480   */\n      tag_166\n        /* \"#utility.yul\":4477:4479   */\n      0x10\n        /* \"#utility.yul\":4472:4475   */\n      dup4\n        /* \"#utility.yul\":4413:4480   */\n      tag_117\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4406:4480   */\n      swap2\n      pop\n        /* \"#utility.yul\":4489:4582   */\n      tag_167\n        /* \"#utility.yul\":4578:4581   */\n      dup3\n        /* \"#utility.yul\":4489:4582   */\n      tag_122\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4607:4609   */\n      0x20\n        /* \"#utility.yul\":4602:4605   */\n      dup3\n        /* \"#utility.yul\":4598:4610   */\n      add\n        /* \"#utility.yul\":4591:4610   */\n      swap1\n      pop\n        /* \"#utility.yul\":4250:4616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:5041   */\n    tag_81:\n        /* \"#utility.yul\":4788:4792   */\n      0x00\n        /* \"#utility.yul\":4826:4828   */\n      0x20\n        /* \"#utility.yul\":4815:4824   */\n      dup3\n        /* \"#utility.yul\":4811:4829   */\n      add\n        /* \"#utility.yul\":4803:4829   */\n      swap1\n      pop\n        /* \"#utility.yul\":4875:4884   */\n      dup2\n        /* \"#utility.yul\":4869:4873   */\n      dup2\n        /* \"#utility.yul\":4865:4885   */\n      sub\n        /* \"#utility.yul\":4861:4862   */\n      0x00\n        /* \"#utility.yul\":4850:4859   */\n      dup4\n        /* \"#utility.yul\":4846:4863   */\n      add\n        /* \"#utility.yul\":4839:4886   */\n      mstore\n        /* \"#utility.yul\":4903:5034   */\n      tag_169\n        /* \"#utility.yul\":5029:5033   */\n      dup2\n        /* \"#utility.yul\":4903:5034   */\n      tag_123\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4895:5034   */\n      swap1\n      pop\n        /* \"#utility.yul\":4622:5041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5047:5217   */\n    tag_124:\n        /* \"#utility.yul\":5187:5209   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":5183:5184   */\n      0x00\n        /* \"#utility.yul\":5175:5181   */\n      dup3\n        /* \"#utility.yul\":5171:5185   */\n      add\n        /* \"#utility.yul\":5164:5210   */\n      mstore\n        /* \"#utility.yul\":5047:5217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5223:5589   */\n    tag_125:\n        /* \"#utility.yul\":5365:5368   */\n      0x00\n        /* \"#utility.yul\":5386:5453   */\n      tag_172\n        /* \"#utility.yul\":5450:5452   */\n      0x14\n        /* \"#utility.yul\":5445:5448   */\n      dup4\n        /* \"#utility.yul\":5386:5453   */\n      tag_117\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5379:5453   */\n      swap2\n      pop\n        /* \"#utility.yul\":5462:5555   */\n      tag_173\n        /* \"#utility.yul\":5551:5554   */\n      dup3\n        /* \"#utility.yul\":5462:5555   */\n      tag_124\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5580:5582   */\n      0x20\n        /* \"#utility.yul\":5575:5578   */\n      dup3\n        /* \"#utility.yul\":5571:5583   */\n      add\n        /* \"#utility.yul\":5564:5583   */\n      swap1\n      pop\n        /* \"#utility.yul\":5223:5589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5595:6014   */\n    tag_106:\n        /* \"#utility.yul\":5761:5765   */\n      0x00\n        /* \"#utility.yul\":5799:5801   */\n      0x20\n        /* \"#utility.yul\":5788:5797   */\n      dup3\n        /* \"#utility.yul\":5784:5802   */\n      add\n        /* \"#utility.yul\":5776:5802   */\n      swap1\n      pop\n        /* \"#utility.yul\":5848:5857   */\n      dup2\n        /* \"#utility.yul\":5842:5846   */\n      dup2\n        /* \"#utility.yul\":5838:5858   */\n      sub\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5823:5832   */\n      dup4\n        /* \"#utility.yul\":5819:5836   */\n      add\n        /* \"#utility.yul\":5812:5859   */\n      mstore\n        /* \"#utility.yul\":5876:6007   */\n      tag_175\n        /* \"#utility.yul\":6002:6006   */\n      dup2\n        /* \"#utility.yul\":5876:6007   */\n      tag_125\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5868:6007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5595:6014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a3c2987e87e4f9f53194952a63673e7eeb6eec240e9ac6196f02a7da690af37664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 175,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:1",
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101af565b60405180910390fd5b610090816100af60201b60201c565b505f8060146101000a81548160ff0219169083151502179055506101c8565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019982610170565b9050919050565b6101a98161018f565b82525050565b5f6020820190506101c25f8301846101a0565b92915050565b610a19806101d55f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146100f75780638456cb59146101015780638da5cb5b1461010b578063c92dbf8514610129578063f2fde38b1461013357610091565b806305691ec8146100955780632b76364e1461009f5780633f4ba83a146100cf5780635c975abb146100d9575b5f80fd5b61009d61014f565b005b6100b960048036038101906100b491906107ad565b61027a565b6040516100c691906107f2565b60405180910390f35b6100d76102cc565b005b6100e16102de565b6040516100ee91906107f2565b60405180910390f35b6100ff6102f3565b005b610109610306565b005b610113610318565b604051610120919061081a565b60405180910390f35b61013161033f565b005b61014d600480360381019061014891906107ad565b610426565b005b6101576104aa565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d89061088d565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f724e7ff186adc07f81795071386876998e66855c287fc3a53b5dec08e7b6bbd960405160405180910390a2565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6102d46104f4565b6102dc61057b565b565b5f8060149054906101000a900460ff16905090565b6102fb6104f4565b6103045f6105dc565b565b61030e6104f4565b61031661069d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103476104aa565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906108f5565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b61042e6104f4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361049e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610495919061081a565b60405180910390fd5b6104a7816105dc565b50565b6104b26102de565b156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e99061095d565b60405180910390fd5b565b6104fc6106ff565b73ffffffffffffffffffffffffffffffffffffffff1661051a610318565b73ffffffffffffffffffffffffffffffffffffffff16146105795761053d6106ff565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610570919061081a565b60405180910390fd5b565b610583610706565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6105c56106ff565b6040516105d2919061081a565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106a56104aa565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106e86106ff565b6040516106f5919061081a565b60405180910390a1565b5f33905090565b61070e6102de565b61074d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610744906109c5565b60405180910390fd5b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61077c82610753565b9050919050565b61078c81610772565b8114610796575f80fd5b50565b5f813590506107a781610783565b92915050565b5f602082840312156107c2576107c161074f565b5b5f6107cf84828501610799565b91505092915050565b5f8115159050919050565b6107ec816107d8565b82525050565b5f6020820190506108055f8301846107e3565b92915050565b61081481610772565b82525050565b5f60208201905061082d5f83018461080b565b92915050565b5f82825260208201905092915050565b7f4164647265737320616c726561647920636c61696d65640000000000000000005f82015250565b5f610877601783610833565b915061088282610843565b602082019050919050565b5f6020820190508181035f8301526108a48161086b565b9050919050565b7f41646472657373206e6f7420636c61696d6564000000000000000000000000005f82015250565b5f6108df601383610833565b91506108ea826108ab565b602082019050919050565b5f6020820190508181035f83015261090c816108d3565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f610947601083610833565b915061095282610913565b602082019050919050565b5f6020820190508181035f8301526109748161093b565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6109af601483610833565b91506109ba8261097b565b602082019050919050565b5f6020820190508181035f8301526109dc816109a3565b905091905056fea2646970667358221220a3c2987e87e4f9f53194952a63673e7eeb6eec240e9ac6196f02a7da690af37664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x199 DUP3 PUSH2 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9 DUP2 PUSH2 0x18F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA19 DUP1 PUSH2 0x1D5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xC92DBF85 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x133 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x5691EC8 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2B76364E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x724E7FF186ADC07F81795071386876998E66855C287FC3A53B5DEC08E7B6BBD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x304 PUSH0 PUSH2 0x5DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30E PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x69D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C7 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x42E PUSH2 0x4F4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP2 PUSH2 0x5DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x2DE JUMP JUMPDEST ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x51A PUSH2 0x318 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x579 JUMPI PUSH2 0x53D PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x583 PUSH2 0x706 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x5C5 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6E8 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x744 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x77C DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x772 JUMP JUMPDEST DUP2 EQ PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A7 DUP2 PUSH2 0x783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x74F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CF DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x805 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x814 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82D PUSH0 DUP4 ADD DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x877 PUSH1 0x17 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x882 DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A4 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420636C61696D656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8DF PUSH1 0x13 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EA DUP3 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x90C DUP2 PUSH2 0x8D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x947 PUSH1 0x10 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x952 DUP3 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x974 DUP2 PUSH2 0x93B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9AF PUSH1 0x14 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BA DUP3 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9DC DUP2 PUSH2 0x9A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xC2 SWAP9 PUSH31 0x87E4F9F53194952A63673E7EEB6EEC240E9AC6196F02A7DA690AF37664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "6665:1166:0:-:0;;;6829:36;;;;;;;;;;6851:10;2259:1;2235:26;;:12;:26;;;2231:95;;2312:1;2284:31;;;;;;;;;;;:::i;:::-;;;;;;;;2231:95;2335:32;2354:12;2335:18;;;:32;;:::i;:::-;2187:187;5065:5;5055:7;;:15;;;;;;;;;;;;;;;;;;6665:1166;;3874:187;3947:16;3966:6;;;;;;;;;;;3947:25;;3991:8;3982:6;;:17;;;;;;;;;;;;;;;;;;4045:8;4014:40;;4035:8;4014:40;;;;;;;;;;;;3937:124;3874:187;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;6665:1166:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_111": {
									"entryPoint": 1268,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1791,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_263": {
									"entryPoint": 1693,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_236": {
									"entryPoint": 1194,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_247": {
									"entryPoint": 1798,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 1500,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_279": {
									"entryPoint": 1403,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimAddress_329": {
									"entryPoint": 335,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAddressClaimed_342": {
									"entryPoint": 634,
									"id": 342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_94": {
									"entryPoint": 792,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_374": {
									"entryPoint": 774,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_224": {
									"entryPoint": 734,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_125": {
									"entryPoint": 755,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_153": {
									"entryPoint": 1062,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unclaimAddress_364": {
									"entryPoint": 831,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_384": {
									"entryPoint": 716,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6017:1",
										"nodeType": "YulBlock",
										"src": "0:6017:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											},
											{
												"body": {
													"nativeSrc": "1668:53:1",
													"nodeType": "YulBlock",
													"src": "1668:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:1"
																		},
																		"nativeSrc": "1690:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nativeSrc": "1678:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:1"
															},
															"nativeSrc": "1678:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:1",
														"nodeType": "YulTypedName",
														"src": "1656:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:1",
														"nodeType": "YulTypedName",
														"src": "1663:3:1",
														"type": ""
													}
												],
												"src": "1603:118:1"
											},
											{
												"body": {
													"nativeSrc": "1825:124:1",
													"nodeType": "YulBlock",
													"src": "1825:124:1",
													"statements": [
														{
															"nativeSrc": "1835:26:1",
															"nodeType": "YulAssignment",
															"src": "1835:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:1"
																},
																"nativeSrc": "1843:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:1"
																		},
																		"nativeSrc": "1924:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:1"
																},
																"nativeSrc": "1871:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:1"
															},
															"nativeSrc": "1871:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:1",
														"nodeType": "YulTypedName",
														"src": "1797:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:1",
														"nodeType": "YulTypedName",
														"src": "1809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:1",
														"nodeType": "YulTypedName",
														"src": "1820:4:1",
														"type": ""
													}
												],
												"src": "1727:222:1"
											},
											{
												"body": {
													"nativeSrc": "2051:73:1",
													"nodeType": "YulBlock",
													"src": "2051:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2073:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:1"
																},
																"nativeSrc": "2061:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2061:19:1"
															},
															"nativeSrc": "2061:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:1"
														},
														{
															"nativeSrc": "2089:29:1",
															"nodeType": "YulAssignment",
															"src": "2089:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2108:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2104:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:1"
																},
																"nativeSrc": "2104:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2089:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1955:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2023:3:1",
														"nodeType": "YulTypedName",
														"src": "2023:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2028:6:1",
														"nodeType": "YulTypedName",
														"src": "2028:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2039:11:1",
														"nodeType": "YulTypedName",
														"src": "2039:11:1",
														"type": ""
													}
												],
												"src": "1955:169:1"
											},
											{
												"body": {
													"nativeSrc": "2236:67:1",
													"nodeType": "YulBlock",
													"src": "2236:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2258:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2266:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2254:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:1"
																		},
																		"nativeSrc": "2254:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:1"
																	},
																	{
																		"hexValue": "4164647265737320616c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "2270:25:1",
																		"nodeType": "YulLiteral",
																		"src": "2270:25:1",
																		"type": "",
																		"value": "Address already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:1"
																},
																"nativeSrc": "2247:49:1",
																"nodeType": "YulFunctionCall",
																"src": "2247:49:1"
															},
															"nativeSrc": "2247:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "2247:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
												"nativeSrc": "2130:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2228:6:1",
														"nodeType": "YulTypedName",
														"src": "2228:6:1",
														"type": ""
													}
												],
												"src": "2130:173:1"
											},
											{
												"body": {
													"nativeSrc": "2455:220:1",
													"nodeType": "YulBlock",
													"src": "2455:220:1",
													"statements": [
														{
															"nativeSrc": "2465:74:1",
															"nodeType": "YulAssignment",
															"src": "2465:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2472:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2472:58:1"
																},
																"nativeSrc": "2472:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2472:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2637:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2637:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
																	"nativeSrc": "2548:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2548:88:1"
																},
																"nativeSrc": "2548:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2548:93:1"
															},
															"nativeSrc": "2548:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2548:93:1"
														},
														{
															"nativeSrc": "2650:19:1",
															"nodeType": "YulAssignment",
															"src": "2650:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2661:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2657:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2657:3:1"
																},
																"nativeSrc": "2657:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2657:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2650:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2309:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2443:3:1",
														"nodeType": "YulTypedName",
														"src": "2443:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2451:3:1",
														"nodeType": "YulTypedName",
														"src": "2451:3:1",
														"type": ""
													}
												],
												"src": "2309:366:1"
											},
											{
												"body": {
													"nativeSrc": "2852:248:1",
													"nodeType": "YulBlock",
													"src": "2852:248:1",
													"statements": [
														{
															"nativeSrc": "2862:26:1",
															"nodeType": "YulAssignment",
															"src": "2862:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2874:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2874:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2870:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:1"
																},
																"nativeSrc": "2870:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2909:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2909:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2920:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2905:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:1"
																		},
																		"nativeSrc": "2905:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2928:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2928:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:1"
																		},
																		"nativeSrc": "2924:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2898:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:1"
																},
																"nativeSrc": "2898:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2898:47:1"
															},
															"nativeSrc": "2898:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2898:47:1"
														},
														{
															"nativeSrc": "2954:139:1",
															"nodeType": "YulAssignment",
															"src": "2954:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3088:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3088:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2962:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2962:124:1"
																},
																"nativeSrc": "2962:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2962:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2954:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2954:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2681:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2832:9:1",
														"nodeType": "YulTypedName",
														"src": "2832:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:1",
														"nodeType": "YulTypedName",
														"src": "2847:4:1",
														"type": ""
													}
												],
												"src": "2681:419:1"
											},
											{
												"body": {
													"nativeSrc": "3212:63:1",
													"nodeType": "YulBlock",
													"src": "3212:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3234:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3234:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3242:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3242:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3230:3:1"
																		},
																		"nativeSrc": "3230:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:14:1"
																	},
																	{
																		"hexValue": "41646472657373206e6f7420636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "3246:21:1",
																		"nodeType": "YulLiteral",
																		"src": "3246:21:1",
																		"type": "",
																		"value": "Address not claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:1"
																},
																"nativeSrc": "3223:45:1",
																"nodeType": "YulFunctionCall",
																"src": "3223:45:1"
															},
															"nativeSrc": "3223:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "3223:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd",
												"nativeSrc": "3106:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3204:6:1",
														"nodeType": "YulTypedName",
														"src": "3204:6:1",
														"type": ""
													}
												],
												"src": "3106:169:1"
											},
											{
												"body": {
													"nativeSrc": "3427:220:1",
													"nodeType": "YulBlock",
													"src": "3427:220:1",
													"statements": [
														{
															"nativeSrc": "3437:74:1",
															"nodeType": "YulAssignment",
															"src": "3437:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3503:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3503:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3508:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3444:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "3444:58:1"
																},
																"nativeSrc": "3444:67:1",
																"nodeType": "YulFunctionCall",
																"src": "3444:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3437:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3437:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3609:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3609:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd",
																	"nativeSrc": "3520:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "3520:88:1"
																},
																"nativeSrc": "3520:93:1",
																"nodeType": "YulFunctionCall",
																"src": "3520:93:1"
															},
															"nativeSrc": "3520:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "3520:93:1"
														},
														{
															"nativeSrc": "3622:19:1",
															"nodeType": "YulAssignment",
															"src": "3622:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3633:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3633:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3638:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3638:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3629:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:1"
																},
																"nativeSrc": "3629:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3629:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3622:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3281:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3415:3:1",
														"nodeType": "YulTypedName",
														"src": "3415:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3423:3:1",
														"nodeType": "YulTypedName",
														"src": "3423:3:1",
														"type": ""
													}
												],
												"src": "3281:366:1"
											},
											{
												"body": {
													"nativeSrc": "3824:248:1",
													"nodeType": "YulBlock",
													"src": "3824:248:1",
													"statements": [
														{
															"nativeSrc": "3834:26:1",
															"nodeType": "YulAssignment",
															"src": "3834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3846:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3846:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3857:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3842:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:1"
																},
																"nativeSrc": "3842:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3834:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3834:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3881:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3881:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3892:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3892:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3877:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3877:3:1"
																		},
																		"nativeSrc": "3877:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3877:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3900:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3900:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3906:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3906:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3896:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:1"
																		},
																		"nativeSrc": "3896:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3870:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:1"
																},
																"nativeSrc": "3870:47:1",
																"nodeType": "YulFunctionCall",
																"src": "3870:47:1"
															},
															"nativeSrc": "3870:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "3870:47:1"
														},
														{
															"nativeSrc": "3926:139:1",
															"nodeType": "YulAssignment",
															"src": "3926:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4060:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4060:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3934:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "3934:124:1"
																},
																"nativeSrc": "3934:131:1",
																"nodeType": "YulFunctionCall",
																"src": "3934:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3926:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3653:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:1",
														"nodeType": "YulTypedName",
														"src": "3804:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3819:4:1",
														"nodeType": "YulTypedName",
														"src": "3819:4:1",
														"type": ""
													}
												],
												"src": "3653:419:1"
											},
											{
												"body": {
													"nativeSrc": "4184:60:1",
													"nodeType": "YulBlock",
													"src": "4184:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4206:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4206:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4214:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4214:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4202:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:1"
																		},
																		"nativeSrc": "4202:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "4218:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4218:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:1"
																},
																"nativeSrc": "4195:42:1",
																"nodeType": "YulFunctionCall",
																"src": "4195:42:1"
															},
															"nativeSrc": "4195:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "4195:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "4078:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4176:6:1",
														"nodeType": "YulTypedName",
														"src": "4176:6:1",
														"type": ""
													}
												],
												"src": "4078:166:1"
											},
											{
												"body": {
													"nativeSrc": "4396:220:1",
													"nodeType": "YulBlock",
													"src": "4396:220:1",
													"statements": [
														{
															"nativeSrc": "4406:74:1",
															"nodeType": "YulAssignment",
															"src": "4406:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4472:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4472:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4477:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4413:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4413:58:1"
																},
																"nativeSrc": "4413:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4413:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4406:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4578:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "4489:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4489:88:1"
																},
																"nativeSrc": "4489:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4489:93:1"
															},
															"nativeSrc": "4489:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4489:93:1"
														},
														{
															"nativeSrc": "4591:19:1",
															"nodeType": "YulAssignment",
															"src": "4591:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4602:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4602:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4607:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:1"
																},
																"nativeSrc": "4598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4598:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4250:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4384:3:1",
														"nodeType": "YulTypedName",
														"src": "4384:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4392:3:1",
														"nodeType": "YulTypedName",
														"src": "4392:3:1",
														"type": ""
													}
												],
												"src": "4250:366:1"
											},
											{
												"body": {
													"nativeSrc": "4793:248:1",
													"nodeType": "YulBlock",
													"src": "4793:248:1",
													"statements": [
														{
															"nativeSrc": "4803:26:1",
															"nodeType": "YulAssignment",
															"src": "4803:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4815:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4815:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4826:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4811:3:1"
																},
																"nativeSrc": "4811:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4811:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4803:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4803:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4850:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4850:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4861:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4861:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4846:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:1"
																		},
																		"nativeSrc": "4846:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4846:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4869:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4869:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4865:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4865:3:1"
																		},
																		"nativeSrc": "4865:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4865:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4839:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:1"
																},
																"nativeSrc": "4839:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4839:47:1"
															},
															"nativeSrc": "4839:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4839:47:1"
														},
														{
															"nativeSrc": "4895:139:1",
															"nodeType": "YulAssignment",
															"src": "4895:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5029:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5029:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4903:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4903:124:1"
																},
																"nativeSrc": "4903:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4903:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4895:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4895:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4622:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4773:9:1",
														"nodeType": "YulTypedName",
														"src": "4773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4788:4:1",
														"nodeType": "YulTypedName",
														"src": "4788:4:1",
														"type": ""
													}
												],
												"src": "4622:419:1"
											},
											{
												"body": {
													"nativeSrc": "5153:64:1",
													"nodeType": "YulBlock",
													"src": "5153:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5175:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5175:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5183:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:1"
																		},
																		"nativeSrc": "5171:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "5187:22:1",
																		"nodeType": "YulLiteral",
																		"src": "5187:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:1"
																},
																"nativeSrc": "5164:46:1",
																"nodeType": "YulFunctionCall",
																"src": "5164:46:1"
															},
															"nativeSrc": "5164:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "5164:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "5047:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5145:6:1",
														"nodeType": "YulTypedName",
														"src": "5145:6:1",
														"type": ""
													}
												],
												"src": "5047:170:1"
											},
											{
												"body": {
													"nativeSrc": "5369:220:1",
													"nodeType": "YulBlock",
													"src": "5369:220:1",
													"statements": [
														{
															"nativeSrc": "5379:74:1",
															"nodeType": "YulAssignment",
															"src": "5379:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5445:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5445:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5450:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5386:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5386:58:1"
																},
																"nativeSrc": "5386:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5386:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5379:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5379:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5551:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5551:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "5462:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "5462:88:1"
																},
																"nativeSrc": "5462:93:1",
																"nodeType": "YulFunctionCall",
																"src": "5462:93:1"
															},
															"nativeSrc": "5462:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "5462:93:1"
														},
														{
															"nativeSrc": "5564:19:1",
															"nodeType": "YulAssignment",
															"src": "5564:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5575:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5580:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5580:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5571:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:1"
																},
																"nativeSrc": "5571:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5571:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5564:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5223:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5357:3:1",
														"nodeType": "YulTypedName",
														"src": "5357:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5365:3:1",
														"nodeType": "YulTypedName",
														"src": "5365:3:1",
														"type": ""
													}
												],
												"src": "5223:366:1"
											},
											{
												"body": {
													"nativeSrc": "5766:248:1",
													"nodeType": "YulBlock",
													"src": "5766:248:1",
													"statements": [
														{
															"nativeSrc": "5776:26:1",
															"nodeType": "YulAssignment",
															"src": "5776:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5788:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5799:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:1"
																},
																"nativeSrc": "5784:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5784:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5776:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5776:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5823:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5823:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5834:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5834:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5819:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5819:3:1"
																		},
																		"nativeSrc": "5819:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5819:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5842:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5842:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:1"
																		},
																		"nativeSrc": "5838:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5812:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:1"
																},
																"nativeSrc": "5812:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5812:47:1"
															},
															"nativeSrc": "5812:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5812:47:1"
														},
														{
															"nativeSrc": "5868:139:1",
															"nodeType": "YulAssignment",
															"src": "5868:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6002:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6002:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5876:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "5876:124:1"
																},
																"nativeSrc": "5876:131:1",
																"nodeType": "YulFunctionCall",
																"src": "5876:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5868:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5868:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5595:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5746:9:1",
														"nodeType": "YulTypedName",
														"src": "5746:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5761:4:1",
														"nodeType": "YulTypedName",
														"src": "5761:4:1",
														"type": ""
													}
												],
												"src": "5595:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address not claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146100f75780638456cb59146101015780638da5cb5b1461010b578063c92dbf8514610129578063f2fde38b1461013357610091565b806305691ec8146100955780632b76364e1461009f5780633f4ba83a146100cf5780635c975abb146100d9575b5f80fd5b61009d61014f565b005b6100b960048036038101906100b491906107ad565b61027a565b6040516100c691906107f2565b60405180910390f35b6100d76102cc565b005b6100e16102de565b6040516100ee91906107f2565b60405180910390f35b6100ff6102f3565b005b610109610306565b005b610113610318565b604051610120919061081a565b60405180910390f35b61013161033f565b005b61014d600480360381019061014891906107ad565b610426565b005b6101576104aa565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d89061088d565b60405180910390fd5b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f724e7ff186adc07f81795071386876998e66855c287fc3a53b5dec08e7b6bbd960405160405180910390a2565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6102d46104f4565b6102dc61057b565b565b5f8060149054906101000a900460ff16905090565b6102fb6104f4565b6103045f6105dc565b565b61030e6104f4565b61031661069d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103476104aa565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906108f5565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b61042e6104f4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361049e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610495919061081a565b60405180910390fd5b6104a7816105dc565b50565b6104b26102de565b156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e99061095d565b60405180910390fd5b565b6104fc6106ff565b73ffffffffffffffffffffffffffffffffffffffff1661051a610318565b73ffffffffffffffffffffffffffffffffffffffff16146105795761053d6106ff565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610570919061081a565b60405180910390fd5b565b610583610706565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6105c56106ff565b6040516105d2919061081a565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106a56104aa565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106e86106ff565b6040516106f5919061081a565b60405180910390a1565b5f33905090565b61070e6102de565b61074d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610744906109c5565b60405180910390fd5b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61077c82610753565b9050919050565b61078c81610772565b8114610796575f80fd5b50565b5f813590506107a781610783565b92915050565b5f602082840312156107c2576107c161074f565b5b5f6107cf84828501610799565b91505092915050565b5f8115159050919050565b6107ec816107d8565b82525050565b5f6020820190506108055f8301846107e3565b92915050565b61081481610772565b82525050565b5f60208201905061082d5f83018461080b565b92915050565b5f82825260208201905092915050565b7f4164647265737320616c726561647920636c61696d65640000000000000000005f82015250565b5f610877601783610833565b915061088282610843565b602082019050919050565b5f6020820190508181035f8301526108a48161086b565b9050919050565b7f41646472657373206e6f7420636c61696d6564000000000000000000000000005f82015250565b5f6108df601383610833565b91506108ea826108ab565b602082019050919050565b5f6020820190508181035f83015261090c816108d3565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f610947601083610833565b915061095282610913565b602082019050919050565b5f6020820190508181035f8301526109748161093b565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6109af601483610833565b91506109ba8261097b565b602082019050919050565b5f6020820190508181035f8301526109dc816109a3565b905091905056fea2646970667358221220a3c2987e87e4f9f53194952a63673e7eeb6eec240e9ac6196f02a7da690af37664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xC92DBF85 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x133 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x5691EC8 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2B76364E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x724E7FF186ADC07F81795071386876998E66855C287FC3A53B5DEC08E7B6BBD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x304 PUSH0 PUSH2 0x5DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30E PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x69D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C7 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x42E PUSH2 0x4F4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP2 PUSH2 0x5DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x2DE JUMP JUMPDEST ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x6FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x51A PUSH2 0x318 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x579 JUMPI PUSH2 0x53D PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x583 PUSH2 0x706 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x5C5 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6E8 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x744 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x77C DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x772 JUMP JUMPDEST DUP2 EQ PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A7 DUP2 PUSH2 0x783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x74F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7CF DUP5 DUP3 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x805 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x814 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82D PUSH0 DUP4 ADD DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320616C726561647920636C61696D6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x877 PUSH1 0x17 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x882 DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A4 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420636C61696D656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8DF PUSH1 0x13 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EA DUP3 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x90C DUP2 PUSH2 0x8D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x947 PUSH1 0x10 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x952 DUP3 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x974 DUP2 PUSH2 0x93B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9AF PUSH1 0x14 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BA DUP3 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9DC DUP2 PUSH2 0x9A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xC2 SWAP9 PUSH31 0x87E4F9F53194952A63673E7EEB6EEC240E9AC6196F02A7DA690AF37664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "6665:1166:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6919:220;;;:::i;:::-;;7197:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7766:63;;;:::i;:::-;;5674:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:101;;;:::i;:::-;;7626:59;;;:::i;:::-;;2600:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7375:172;;;:::i;:::-;;3505:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6919:220;5298:19;:17;:19::i;:::-;6983:17:::1;:29;7001:10;6983:29;;;;;;;;;;;;;;;;;;;;;;;;;6982:30;6974:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7082:4;7050:17:::0;:29:::1;7068:10;7050:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7121:10;7101:31;;;;;;;;;;;;6919:220::o:0;7197:122::-;7262:4;7285:17;:27;7303:8;7285:27;;;;;;;;;;;;;;;;;;;;;;;;;7278:34;;7197:122;;;:::o;7766:63::-;2493:13;:11;:13::i;:::-;7812:10:::1;:8;:10::i;:::-;7766:63::o:0;5674:84::-;5721:4;5744:7;;;;;;;;;;;5737:14;;5674:84;:::o;3255:101::-;2493:13;:11;:13::i;:::-;3319:30:::1;3346:1;3319:18;:30::i;:::-;3255:101::o:0;7626:59::-;2493:13;:11;:13::i;:::-;7670:8:::1;:6;:8::i;:::-;7626:59::o:0;2600:85::-;2646:7;2672:6;;;;;;;;;;;2665:13;;2600:85;:::o;7375:172::-;5298:19;:17;:19::i;:::-;7440:17:::1;:29;7458:10;7440:29;;;;;;;;;;;;;;;;;;;;;;;;;7432:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7535:5;7503:17;:29;7521:10;7503:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7375:172::o:0;3505:215::-;2493:13;:11;:13::i;:::-;3609:1:::1;3589:22;;:8;:22;;::::0;3585:91:::1;;3662:1;3634:31;;;;;;;;;;;:::i;:::-;;;;;;;;3585:91;3685:28;3704:8;3685:18;:28::i;:::-;3505:215:::0;:::o;5826:106::-;5896:8;:6;:8::i;:::-;5895:9;5887:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5826:106::o;2758:162::-;2828:12;:10;:12::i;:::-;2817:23;;:7;:5;:7::i;:::-;:23;;;2813:101;;2890:12;:10;:12::i;:::-;2863:40;;;;;;;;;;;:::i;:::-;;;;;;;;2813:101;2758:162::o;6492:117::-;5545:16;:14;:16::i;:::-;6560:5:::1;6550:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;6580:22;6589:12;:10;:12::i;:::-;6580:22;;;;;;:::i;:::-;;;;;;;;6492:117::o:0;3874:187::-;3947:16;3966:6;;;;;;;;;;;3947:25;;3991:8;3982:6;;:17;;;;;;;;;;;;;;;;;;4045:8;4014:40;;4035:8;4014:40;;;;;;;;;;;;3937:124;3874:187;:::o;6245:115::-;5298:19;:17;:19::i;:::-;6314:4:::1;6304:7;;:14;;;;;;;;;;;;;;;;;;6333:20;6340:12;:10;:12::i;:::-;6333:20;;;;;;:::i;:::-;;;;;;;;6245:115::o:0;678:96::-;731:7;757:10;750:17;;678:96;:::o;6004:106::-;6070:8;:6;:8::i;:::-;6062:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6004:106::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:173::-;2270:25;2266:1;2258:6;2254:14;2247:49;2130:173;:::o;2309:366::-;2451:3;2472:67;2536:2;2531:3;2472:67;:::i;:::-;2465:74;;2548:93;2637:3;2548:93;:::i;:::-;2666:2;2661:3;2657:12;2650:19;;2309:366;;;:::o;2681:419::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2934:9;2928:4;2924:20;2920:1;2909:9;2905:17;2898:47;2962:131;3088:4;2962:131;:::i;:::-;2954:139;;2681:419;;;:::o;3106:169::-;3246:21;3242:1;3234:6;3230:14;3223:45;3106:169;:::o;3281:366::-;3423:3;3444:67;3508:2;3503:3;3444:67;:::i;:::-;3437:74;;3520:93;3609:3;3520:93;:::i;:::-;3638:2;3633:3;3629:12;3622:19;;3281:366;;;:::o;3653:419::-;3819:4;3857:2;3846:9;3842:18;3834:26;;3906:9;3900:4;3896:20;3892:1;3881:9;3877:17;3870:47;3934:131;4060:4;3934:131;:::i;:::-;3926:139;;3653:419;;;:::o;4078:166::-;4218:18;4214:1;4206:6;4202:14;4195:42;4078:166;:::o;4250:366::-;4392:3;4413:67;4477:2;4472:3;4413:67;:::i;:::-;4406:74;;4489:93;4578:3;4489:93;:::i;:::-;4607:2;4602:3;4598:12;4591:19;;4250:366;;;:::o;4622:419::-;4788:4;4826:2;4815:9;4811:18;4803:26;;4875:9;4869:4;4865:20;4861:1;4850:9;4846:17;4839:47;4903:131;5029:4;4903:131;:::i;:::-;4895:139;;4622:419;;;:::o;5047:170::-;5187:22;5183:1;5175:6;5171:14;5164:46;5047:170;:::o;5223:366::-;5365:3;5386:67;5450:2;5445:3;5386:67;:::i;:::-;5379:74;;5462:93;5551:3;5462:93;:::i;:::-;5580:2;5575:3;5571:12;5564:19;;5223:366;;;:::o;5595:419::-;5761:4;5799:2;5788:9;5784:18;5776:26;;5848:9;5842:4;5838:20;5834:1;5823:9;5819:17;5812:47;5876:131;6002:4;5876:131;:::i;:::-;5868:139;;5595:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "517000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimAddress()": "30163",
								"isAddressClaimed(address)": "2893",
								"owner()": "2559",
								"pause()": "infinite",
								"paused()": "2591",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unclaimAddress()": "29064",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6865,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6851,
									"end": 6861,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2235,
									"end": 2247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2284,
									"end": 2315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2335,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2354,
									"end": 2366,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2335,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2335,
									"end": 2353,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2335,
									"end": 2353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2335,
									"end": 2367,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2335,
									"end": 2367,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2335,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2335,
									"end": 2367,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2335,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2187,
									"end": 2374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5065,
									"end": 5070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5055,
									"end": 5062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5062,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5055,
									"end": 5070,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3874,
									"end": 4061,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3874,
									"end": 4061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3947,
									"end": 3963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3966,
									"end": 3972,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3947,
									"end": 3972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3947,
									"end": 3972,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3991,
									"end": 3999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3988,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3982,
									"end": 3988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4045,
									"end": 4053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4035,
									"end": 4043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3937,
									"end": 4061,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3874,
									"end": 4061,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3874,
									"end": 4061,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6665,
									"end": 7831,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3c2987e87e4f9f53194952a63673e7eeb6eec240e9ac6196f02a7da690af37664736f6c634300081a0033",
									".code": [
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "C92DBF85"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "5691EC8"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "2B76364E"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6919,
											"end": 7139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7197,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7197,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7766,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5674,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5674,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3255,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7626,
											"end": 7685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2600,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2600,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7375,
											"end": 7547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3505,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3505,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6919,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5298,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7011,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6983,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6974,
											"end": 7040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6974,
											"end": 7040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7050,
											"end": 7067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7078,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7131,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "724E7FF186ADC07F81795071386876998E66855C287FC3A53B5DEC08E7B6BBD9"
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7132,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 7139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7285,
											"end": 7312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7766,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2493,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7812,
											"end": 7820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7812,
											"end": 7822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7812,
											"end": 7822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3255,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2493,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3346,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3319,
											"end": 3349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3319,
											"end": 3349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7626,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2493,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7670,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7670,
											"end": 7678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7670,
											"end": 7678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2646,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7375,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5298,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5298,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7468,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7440,
											"end": 7469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7432,
											"end": 7493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7432,
											"end": 7493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7531,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7540,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2493,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3585,
											"end": 3676,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3634,
											"end": 3665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3585,
											"end": 3676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3704,
											"end": 3712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3685,
											"end": 3713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3685,
											"end": 3713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5826,
											"end": 5932,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5826,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5896,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5896,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5887,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5887,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5826,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2920,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2758,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2828,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2828,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2828,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2817,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2890,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2863,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6609,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6492,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5545,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5545,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5561,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5545,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 6589,
											"end": 6601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6589,
											"end": 6599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6589,
											"end": 6601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6589,
											"end": 6601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6580,
											"end": 6602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6602,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3874,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 3999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 4061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6360,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6245,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5298,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5298,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5298,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6304,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6318,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 6340,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6340,
											"end": 6350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6340,
											"end": 6352,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6340,
											"end": 6352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6333,
											"end": 6353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6353,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 678,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 750,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6110,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6004,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6070,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6070,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6070,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6062,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6062,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "4164647265737320616C726561647920636C61696D6564000000000000000000"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2531,
											"end": 2534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2472,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2548,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2962,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3106,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3267,
											"name": "PUSH",
											"source": 1,
											"value": "41646472657373206E6F7420636C61696D656400000000000000000000000000"
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3647,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3281,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3508,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3444,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3609,
											"end": 3612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3520,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3520,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3633,
											"end": 3636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3653,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3934,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 4065,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3934,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 4072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 4072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 4072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4078,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4616,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4250,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4472,
											"end": 4475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4413,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4480,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4413,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4489,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4582,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4489,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 5041,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4622,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4885,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4859,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4903,
											"end": 5034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 5034,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4903,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 5034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 5034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 5041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 5041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 5041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 5041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5217,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5047,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 5183,
											"end": 5184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5589,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5223,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5445,
											"end": 5448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5386,
											"end": 5453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5453,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5386,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5551,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5462,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5555,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5462,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6014,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5595,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5876,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6007,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5876,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 6007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 6007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"identity_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimAddress()": "05691ec8",
							"isAddressClaimed(address)": "2b76364e",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unclaimAddress()": "c92dbf85",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"AddressClaimedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"isAddressClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"claimAddress()\":{\"details\":\"Allows an address to claim itself.\"},\"isAddressClaimed(address)\":{\"details\":\"Checks if an address has been claimed.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract. Only the owner can call this function.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unclaimAddress()\":{\"details\":\"Allows an address to unclaim itself.\"},\"unpause()\":{\"details\":\"Unpauses the contract. Only the owner can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"identity_flattened.sol\":\"AddressClaim\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"identity_flattened.sol\":{\"keccak256\":\"0x13a4f0bc90eaefa1cdfe18b2e439feca12359cdec98e658d63f8cbb9242a810a\",\"urls\":[\"bzz-raw://ca301e18d485a05551a03d2c8ca51081edf2608aa3e5d2d09a32b7a135622e38\",\"dweb:/ipfs/QmQxSN94kTJyzyNpEEd7q36P2gHm1jT1HzYCVk1z3zfK6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "identity_flattened.sol:AddressClaim",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 190,
								"contract": "identity_flattened.sol:AddressClaim",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 289,
								"contract": "identity_flattened.sol:AddressClaim",
								"label": "_claimedAddresses",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"identity_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"identity_flattened.sol\":{\"keccak256\":\"0x13a4f0bc90eaefa1cdfe18b2e439feca12359cdec98e658d63f8cbb9242a810a\",\"urls\":[\"bzz-raw://ca301e18d485a05551a03d2c8ca51081edf2608aa3e5d2d09a32b7a135622e38\",\"dweb:/ipfs/QmQxSN94kTJyzyNpEEd7q36P2gHm1jT1HzYCVk1z3zfK6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"identity_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"identity_flattened.sol\":{\"keccak256\":\"0x13a4f0bc90eaefa1cdfe18b2e439feca12359cdec98e658d63f8cbb9242a810a\",\"urls\":[\"bzz-raw://ca301e18d485a05551a03d2c8ca51081edf2608aa3e5d2d09a32b7a135622e38\",\"dweb:/ipfs/QmQxSN94kTJyzyNpEEd7q36P2gHm1jT1HzYCVk1z3zfK6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "identity_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"identity_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"identity_flattened.sol\":{\"keccak256\":\"0x13a4f0bc90eaefa1cdfe18b2e439feca12359cdec98e658d63f8cbb9242a810a\",\"urls\":[\"bzz-raw://ca301e18d485a05551a03d2c8ca51081edf2608aa3e5d2d09a32b7a135622e38\",\"dweb:/ipfs/QmQxSN94kTJyzyNpEEd7q36P2gHm1jT1HzYCVk1z3zfK6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 190,
								"contract": "identity_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> identity_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "identity_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"identity_flattened.sol": {
				"ast": {
					"absolutePath": "identity_flattened.sol",
					"exportedSymbols": {
						"AddressClaim": [
							385
						],
						"Context": [
							29
						],
						"Ownable": [
							174
						],
						"Pausable": [
							280
						]
					},
					"id": 386,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "149:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "664:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "740:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "757:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "761:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "757:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "750:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "687:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "731:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:9:0"
									},
									"scope": 29,
									"src": "678:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "847:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "864:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "868:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "864:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "857:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "789:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "831:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "831:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:0"
									},
									"scope": 29,
									"src": "780:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "957:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "974:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "967:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "894:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:9:0"
									},
									"scope": 29,
									"src": "885:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "646:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1110:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "Context",
										"nameLocations": [
											"1654:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1654:7:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1654:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "1137:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								29
							],
							"name": "Ownable",
							"nameLocation": "1643:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1684:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "1668:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1697:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 40,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1793:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1828:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1820:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:17:0"
									},
									"src": "1787:50:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1843:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 45,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1936:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:15:0"
									},
									"src": "1930:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 51,
									"name": "OwnershipTransferred",
									"nameLocation": "1983:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2020:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2004:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2051:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2035:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2003:57:0"
									},
									"src": "1977:84:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2221:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2235:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 58,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2251:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2251:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2235:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2231:95:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2263:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2312:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 64,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2304:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2304:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 63,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "2284:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 69,
															"nodeType": "RevertStatement",
															"src": "2277:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2354:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2335:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2335:32:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2067:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2207:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2199:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:0:0"
									},
									"scope": 174,
									"src": "2187:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2483:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2493:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2493:13:0"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2516:1:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2380:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "2471:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:0"
									},
									"src": "2462:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2655:30:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "2672:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2665:13:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2530:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2609:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:9:0"
									},
									"scope": 174,
									"src": "2600:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2803:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 98,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2817:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2828:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2817:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "IfStatement",
												"src": "2813:101:0",
												"trueBody": {
													"id": 108,
													"nodeType": "Block",
													"src": "2842:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2890:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2890:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 103,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "2863:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2863:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 107,
															"nodeType": "RevertStatement",
															"src": "2856:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2691:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2767:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2778:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2803:0:0"
									},
									"scope": 174,
									"src": "2758:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3309:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3338:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3319:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3319:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3319:30:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2926:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nameLocations": [
													"3299:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3299:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3299:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3264:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3281:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3309:0:0"
									},
									"scope": 174,
									"src": "3255:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3575:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3589:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3601:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3601:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3589:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3585:91:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "3613:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3662:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3654:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3654:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3654:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3634:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3634:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "3627:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3685:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3685:28:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3362:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"3565:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3565:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3565:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3514:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3540:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3532:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:18:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3575:0:0"
									},
									"scope": 174,
									"src": "3505:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "3937:124:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3955:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "3947:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3947:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "3966:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3947:25:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3982:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3982:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "3982:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 168,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4035:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4045:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4014:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4014:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "4009:45:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3726:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3883:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3910:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3902:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:18:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3937:0:0"
									},
									"scope": 174,
									"src": "3874:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "1625:2438:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51
							]
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4195:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "Context",
										"nameLocations": [
											"4691:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "4691:7:0"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "4691:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "4221:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 280,
							"linearizedBaseContracts": [
								280,
								29
							],
							"name": "Pausable",
							"nameLocation": "4679:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "4705:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 183,
									"name": "Paused",
									"nameLocation": "4789:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4795:17:0"
									},
									"src": "4783:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "4819:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 188,
									"name": "Unpaused",
									"nameLocation": "4900:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4908:17:0"
									},
									"src": "4894:32:0"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "4945:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 280,
									"src": "4932:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 189,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4932:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5045:32:0",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "5055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5065:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5055:15:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "4959:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5042:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5045:0:0"
									},
									"scope": 280,
									"src": "5031:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "5288:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 202,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "5298:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5298:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "5298:19:0"
											},
											{
												"id": 205,
												"nodeType": "PlaceholderStatement",
												"src": "5327:1:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5083:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 207,
									"name": "whenNotPaused",
									"nameLocation": "5272:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5285:2:0"
									},
									"src": "5263:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5535:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 210,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "5545:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5545:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "5545:16:0"
											},
											{
												"id": 213,
												"nodeType": "PlaceholderStatement",
												"src": "5571:1:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "5341:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 215,
									"name": "whenPaused",
									"nameLocation": "5522:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5532:2:0"
									},
									"src": "5513:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "5727:31:0",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 190,
													"src": "5744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "5737:14:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "5585:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "5683:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5689:2:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "5721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:6:0"
									},
									"scope": 280,
									"src": "5674:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5877:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5895:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 229,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "5896:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5896:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5887:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "5887:38:0"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "5764:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "5835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5852:2:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5877:0:0"
									},
									"scope": 280,
									"src": "5826:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "6052:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 241,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "6070:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6070:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6080:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "6062:41:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5938:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "6013:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6027:2:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6052:0:0"
									},
									"scope": 280,
									"src": "6004:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "6294:66:0",
										"statements": [
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "6304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6314:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6304:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6304:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 258,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6340:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6340:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 257,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6333:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "6328:25:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6116:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 250,
												"name": "whenNotPaused",
												"nameLocations": [
													"6280:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "6280:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6280:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "6254:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6260:2:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6294:0:0"
									},
									"scope": 280,
									"src": "6245:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "6540:69:0",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "6550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6560:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6550:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "6550:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 274,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6589:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6589:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 273,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "6580:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "EmitStatement",
												"src": "6575:27:0"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "6366:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 266,
												"name": "whenPaused",
												"nameLocations": [
													"6529:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "6529:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6529:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "6501:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6509:2:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6540:0:0"
									},
									"scope": 280,
									"src": "6492:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "4661:1950:0",
							"usedErrors": [],
							"usedEvents": [
								183,
								188
							]
						},
						{
							"id": 281,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6637:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 282,
										"name": "Ownable",
										"nameLocations": [
											"6690:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "6690:7:0"
									},
									"id": 283,
									"nodeType": "InheritanceSpecifier",
									"src": "6690:7:0"
								},
								{
									"baseName": {
										"id": 284,
										"name": "Pausable",
										"nameLocations": [
											"6699:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 280,
										"src": "6699:8:0"
									},
									"id": 285,
									"nodeType": "InheritanceSpecifier",
									"src": "6699:8:0"
								}
							],
							"canonicalName": "AddressClaim",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 385,
							"linearizedBaseContracts": [
								385,
								280,
								174,
								29
							],
							"name": "AddressClaim",
							"nameLocation": "6674:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_claimedAddresses",
									"nameLocation": "6747:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "6714:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 288,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 286,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6722:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6714:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 287,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "6733:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "724e7ff186adc07f81795071386876998e66855c287fc3a53b5dec08e7b6bbd9",
									"id": 293,
									"name": "AddressClaimedEvent",
									"nameLocation": "6777:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "6813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "6797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6796:26:0"
									},
									"src": "6771:52:0"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "6863:2:0",
										"statements": []
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 296,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6851:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6855:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6851:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 298,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 295,
												"name": "Ownable",
												"nameLocations": [
													"6843:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 174,
												"src": "6843:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6843:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6840:2:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6863:0:0"
									},
									"scope": 385,
									"src": "6829:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6964:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6982:30:0",
															"subExpression": {
																"baseExpression": {
																	"id": 308,
																	"name": "_claimedAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "6983:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 311,
																"indexExpression": {
																	"expression": {
																		"id": 309,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7001:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7005:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7001:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6983:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c726561647920636c61696d6564",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7014:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
																"typeString": "literal_string \"Address already claimed\""
															},
															"value": "Address already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df879dac2b251a6406f54bdb62c794fb7b2ee9a2d5502730b4d0cde276d5eb6",
																"typeString": "literal_string \"Address already claimed\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6974:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "6974:66:0"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 316,
															"name": "_claimedAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7050:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 319,
														"indexExpression": {
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7068:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7072:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7050:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7082:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7050:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "7050:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7121:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7125:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7121:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 323,
														"name": "AddressClaimedEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7101:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7101:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "7096:36:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "6871:43:0",
										"text": "@dev Allows an address to claim itself."
									},
									"functionSelector": "05691ec8",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 305,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 304,
												"name": "whenNotPaused",
												"nameLocations": [
													"6950:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "6950:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6950:13:0"
										}
									],
									"name": "claimAddress",
									"nameLocation": "6928:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6940:2:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6964:0:0"
									},
									"scope": 385,
									"src": "6919:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "7268:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 337,
														"name": "_claimedAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "7285:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 339,
													"indexExpression": {
														"id": 338,
														"name": "claimant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7303:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7285:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 336,
												"id": 340,
												"nodeType": "Return",
												"src": "7278:34:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7145:47:0",
										"text": "@dev Checks if an address has been claimed."
									},
									"functionSelector": "2b76364e",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressClaimed",
									"nameLocation": "7206:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "7231:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "7223:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:18:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "7262:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7261:6:0"
									},
									"scope": 385,
									"src": "7197:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "7422:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 349,
																"name": "_claimedAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7440:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 352,
															"indexExpression": {
																"expression": {
																	"id": 350,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7458:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7462:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7458:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7440:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206e6f7420636c61696d6564",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7471:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd",
																"typeString": "literal_string \"Address not claimed\""
															},
															"value": "Address not claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d5d0e7ef526dc8a683b71981455ec5ecb134fbd7f907ca697b93b801412a5fd",
																"typeString": "literal_string \"Address not claimed\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7432:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "7432:61:0"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 356,
															"name": "_claimedAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7503:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 359,
														"indexExpression": {
															"expression": {
																"id": 357,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7521:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7525:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7521:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7503:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7535:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7503:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "7503:37:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "7325:45:0",
										"text": "@dev Allows an address to unclaim itself."
									},
									"functionSelector": "c92dbf85",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 345,
												"name": "whenNotPaused",
												"nameLocations": [
													"7408:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "7408:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7408:13:0"
										}
									],
									"name": "unclaimAddress",
									"nameLocation": "7384:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7398:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7422:0:0"
									},
									"scope": 385,
									"src": "7375:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "7660:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 370,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "7670:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7670:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "7670:8:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "7553:68:0",
										"text": "@dev Pauses the contract. Only the owner can call this function."
									},
									"functionSelector": "8456cb59",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 368,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 367,
												"name": "onlyOwner",
												"nameLocations": [
													"7650:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "7650:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7650:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "7635:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7640:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7660:0:0"
									},
									"scope": 385,
									"src": "7626:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "7802:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 380,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "7812:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7812:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7812:10:0"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "7691:70:0",
										"text": "@dev Unpauses the contract. Only the owner can call this function."
									},
									"functionSelector": "3f4ba83a",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "onlyOwner",
												"nameLocations": [
													"7792:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "7792:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7792:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "7775:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7782:2:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7802:0:0"
									},
									"scope": 385,
									"src": "7766:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 386,
							"src": "6665:1166:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51,
								183,
								188,
								293
							]
						}
					],
					"src": "123:7709:0"
				},
				"id": 0
			}
		}
	}
}